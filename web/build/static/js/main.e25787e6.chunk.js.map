{"version":3,"sources":["menu.js","config.js","utils/axios.js","api/user.js","components/header.js","api/permission.js","components/sidebar.js","components/footer.js","layouts/WelcomeContent.js","components/breadcrumb_path.js","api/cloud.js","components/cloud_resource/common/extra_info_modal.js","components/cloud_resource/common/line_chart.js","assets/Icons.js","components/cloud_resource/server_content.js","components/cloud_resource/rds_content.js","components/cloud_resource/kv_content.js","components/cloud_resource/slb_content.js","components/cloud_resource/account_content.js","api/daily_task.js","components/task/deploy_project_content.js","services/common.js","components/task/jobs_content.js","components/task/task_content.js","components/permissions/user_manager.js","api/role.js","components/permissions/role_manager.js","components/permissions/permission_manager.js","components/permissions/password_manager.js","components/data/sync_aliyun.js","api/data_api.js","components/cloud_resource/other_content.js","api/settings_api.js","components/system/settings_content.js","components/logout.js","api/system.js","components/system/feedback_manager.js","components/ci_cd/jenkins_jobs.js","api/jenkins.js","components/ci_cd/ci_content.js","api/kubernetes.js","components/kubernetes/web_terminal.js","components/ci_cd/cd_content.js","api/cd.js","components/ci_cd/cd_record_content.js","components/ci_cd/cicd.js","utils/k8s_template.js","components/kubernetes/rc_detail.js","components/kubernetes/service_detail.js","components/cloud_resource/common/area_chart.js","components/kubernetes/pod_detail.js","components/kubernetes/container_log.js","components/kubernetes/node_detail.js","components/kubernetes/rs_detail.js","components/kubernetes/deployment_detail.js","components/kubernetes/ingress_detail.js","components/kubernetes/namespaces.js","components/kubernetes/k8s_cluster.js","components/kubernetes/kubernetes.js","api/dms_api.js","components/dms/instance_manage.js","components/dms/auth_manage.js","components/dms/data_manage.js","api/dns_api.js","components/dns/domain_manage.js","layouts/ContentLayout.js","layouts/AdminLayout.js","layouts/LoginLayout.js","layouts/ExceptionContent.js","router.js","layouts/main.js","serviceWorker.js","index.js"],"names":["Menus","topMenus","menuTitle","icon","subMenus","title","route","sideMenus","noAuthMenus","axios","interceptors","request","use","config","response","WSBase","defaults","headers","post","service","create","baseURL","timeout","withCredentials","getClusterId","localStorage","getItem","Authorization","error","Promise","reject","message","status","window","location","href","utils_axios","url","param","resolve","method","params","then","res","catch","err","data","getUsersList","page","size","req","postUpdatePassword","Header","TextArea","OpsHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showFeedbackModal","bind","assertThisInitialized","handleOk","handleCancel","formRef","React","createRef","state","feedbackModalVisible","setState","_this2","current","validateFields","values","code","success","msg","toLocaleString","menuContent","react_default","a","createElement","es_menu","map","menu","subMenu","Item","key","Link","to","hasOwnProperty","style","background","padding","color","paddingLeft","fontSize","menuCollapsed","MenuUnfoldOutlined","className","onClick","handleSiderMenu","cursor","MenuFoldOutlined","float","width","textAlign","marginLeft","marginRight","dropdown","overlay","overlayStyle","UserOutlined","popover","content","MessageOutlined","modal","destroyOnClose","visible","onOk","onCancel","es_form","assign","labelCol","span","wrapperCol","ref","label","name","rules","required","rows","rate","tooltips","Component","withRouter","getUserPermissionsList","Sider","SubMenu","OpsSider","authList","authType","dataList","permissionUrlList","item","push","urlPath","subMenuList","_this3","result","indexOf","menuUrlPath","_this4","trigger","collapsed","backgroundSize","display","theme","mode","length","hasSubMenusAllowed","menuIcon","Icons","hasMenuAllowed","Footer","Text","OpsFooter","currentYear","Date","getFullYear","underline","Content","WelcomeContent","height","OpsBreadcrumbPath","breadcrumb","margin","pathData","path","defaultProps","getCloudServers","getCloudServerDetail","id","getCloudAccouts","postCloudAccouts","putCloudAccouts","deleteCloudAccouts","getCloudMonitorEcs","instanceId","timeDimension","metricDimension","getCloudMonitorRds","getCloudMonitorKv","getCloudMonitorSlb","getCloudRds","getCloudKv","getCloudSlb","getCloudRdsDetail","getCloudKvDetail","getCloudSlbDetail","getCloudOtherRes","moment","locale","EcsInfoForm","type","disabled","RdsInfoForm","KvInfoForm","ExtraInfoModal","switchChange","usersData","generateBaseInfoForm","value","renewSwitch","expiredTime","format","dbExpiredTime","kvExpiredTime","resetFields","disableInput","es_input","date_picker","updateMode","resType","twoItemFormLayout","formItem","index","offsetNum","col","offset","getInputItem","divider","orientation","marginTop","row","gutter","centered","initialValues","editData","LineChart","uuid","replace","c","r","Math","random","toString","xField","yField","setTimeout","line","Line","meta","render","changeData","WindowsSvg","t","viewBox","version","xmlns","p-id","d","fill","LinuxSvg","StatusDoneSvg","StatusProgressSvg","K8sContainerIconSvg","OpsIcon","createFromIconfontCN","scriptUrl","TabPane","tabs","Paragraph","Option","es_select","ServerInfoModal","cloudAccountList","that","accounts","accountOptions","formItemLayout","accountName","server_info_modal_visible","handlePostServerInfoSubmit","handlePostServerInfoCancel","okText","cancelText","osType","input_number","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","ServerContent","refreshTableData","tableLoading","queryParams","pagination","pageSize","queryExpiredTime","queryKeyword","queryCloudAccount","total","parseInt","showTotal","objectSpread","tableData","i","ID","Memory","Cpu","HostName","InstanceId","InnerIpAddress","PublicIpAddress","PrivateIpAddress","InternetMaxBandwidthIn","InternetMaxBandwidthOut","InternetChargeType","InstanceName","OSType","ZoneId","OSName","ExpiredTime","Status","CloudAccountName","DataStatus","SshPort","SshUser","SshPwd","openMonitorDrawer","drawerVisible","currentServerDetail","refreshMonitorData","timeTagValue","metricTagValue","refreshSeverDetail","chartLoading","warn","dataPoints","JSON","parse","chartData","date","e","serverDetailLoading","changePage","onCloseDrawer","handleTimeTagChange","target","handleMetricTagChange","chartFormat","onExpiredDateChange","keywordOnChange","handleCloudAccountChange","handleAdd","ecsId","handleQuery","initTerminal","document","getElementById","rws","ReconnectingWebSocket","terminal","Terminal","cursorBlink","cursorStyle","bellStyle","prompt","write","attachAddon","AttachAddon","loadAddon","open","writeln","initWsConnection","focus","timer","clearTimeout","handleExtraInfoOk","handleExtraInfoCancel","operWidth","isSuperAdmin","columns","dataIndex","server_content_Text","ellipsis","textWrap","tooltip","record","innerContent","privateContent","publicContent","marginBottom","copyable","cpuContent","memoryContent","trafficType","trafficOutContent","align","Icons_WindowsSvg","badge","position","top","Icons_LinuxSvg","fixed","text","es_button","aclAuthMap","serverEdit","popconfirm","onConfirm","serverDelete","webSocketReady","showSizeChanger","pageSizeOptions","onShowSizeChange","showQuickJumper","concat","onChange","drawerPlacement","msgContent","queryManageUser","queryDefineGroup","selectedRowKeys","idsList","extraInfoData","loadCloudAccountsData","close","dispose","addEventListener","console","log","innerIpAddress","publicIpAddress","privateIpAddress","instanceName","cpu","memory","resForm","sshPort","sshUser","sshPwd","extraInfoModalVisible","resFrom","_this5","targetId","String","join","putCloudServer","_this6","_this7","createTime","undefined","server_content_Content","breadcrumb_path","defaultValue","placeholder","SearchOutlined","PlusCircleOutlined","server_content_ServerInfoModal","extra_info_modal","drawer","placement","closable","onClose","defaultActiveKey","tabPosition","detailTabChange","tab","spin","tip","spinning","lineHeight","es_radio","Group","Button","line_chart","descriptions","bordered","column","Description","CreationTime","ImageId","InstanceChargeType","InstanceNetworkType","InstanceType","table","dataSource","scroll","x","loading","RdsInfoModal","rds_content_Option","rds_info_modal_visible","handlePostRdsInfoSubmit","handlePostRdsInfoCancel","engine","RdsContent","DBInstanceId","DBInstanceDescription","DBInstanceType","Engine","ExpireTime","DBInstanceStatus","ConnectionString","Port","DBInstanceMemory","DBInstanceStorage","rdsId","rds_content_Text","rds_content_Paragraph","diskContent","rdsEdit","rdsDelete","dbInstanceDescription","dbMemory","dbInstanceStorage","putCloudRds","expireTime","rds_content_Content","rds_content_RdsInfoModal","rds_content_TabPane","CreateTime","EngineVersion","Category","KvInfoModal","kv_content_Option","kv_info_modal_visible","handlePostKvInfoSubmit","handlePostKvInfoCancel","instanceType","KvContent","ConnectionDomain","EndTime","InstanceStatus","Capacity","QPS","Bandwidth","Connections","kvId","handleBatchUpdate","idList","onSelectChange","kv_content_Text","kv_content_Paragraph","kvEdit","kvDelete","renewStatus","renewSiteId","bankAccount","manageUser","cost","costType","kvInstanceName","kvBandwidth","kvCapacity","putCloudKv","endTime","kv_content_Content","kv_content_KvInfoModal","kv_content_TabPane","ArchitectureType","PrivateIp","SlbContent","LoadBalancerId","LoadBalancerName","Address","LoadBalancerStatus","slb_content_Text","slb_content_Paragraph","slbDelete","slbId","userDefineInfoFormRef","form","setFieldsValue","userRemark","UserRemark","userDefineGroup","UserDefineGroup","userDefineInfoModalVisible","slb_content_Option","slb_content_Content","slb_content_TabPane","PayType","AddressIPVersion","CloudContent","confirm","handleDeleteAccountInfo","showAddAccountModal","current_data_id","add_new_account_visible","handleAddAccountSubmit","handleAddAccountCancel","handleEditAccountInfo","accountType","accountPwd","accountKey","accountSecret","accountRegion","bankAccountId","account_content_Text","account_content_Paragraph","superOper","react","account_content_Content","account_content_Option","getDailyJobs","putDailyJob","Step","steps","options","children","ConfigTemplate","","field","errorMessage","日常工作-协助","KvIput","addNewConfig","configCount","configData","splice","configItem","grid_col","addonBefore","handleKeyChange","handleValueChange","MinusCircleOutlined","shape","deleteConfigItem","JobBaseInfo","deptData","deploy_project_content_Content","importantDegree","cascader","buttonStyle","JobConfigInfo","getFormInputContent","input","deploy_project_content_TextArea","deploy_project_content_Option","deploy_project_content_KvIput","configDataForm","jobType","card","headStyle","backgroundColor","fontWeight","es_alert","Deploy_project_content","submitJobForm","baseInfoFormRef","configInfoFormRef","stepStatus","jobTypeStr","form1Data","form2Data","submitLoading","carousel","next","form3Data","prev","_this8","reqData","open_deploy_auto_config","stringify","history","_this9","SolutionOutlined","HighlightOutlined","dots","effect","adaptiveHeight","deploy_project_content_JobBaseInfo","deploy_project_content_JobConfigInfo","loadConfigDataTemplateSpin","getCurrentUserId","token","jwt_decode","NULL_TIMESTAMP","Jobs_content","handlerRefuseJobCommit","refuseId","refuseReason","action","refuseJobModalVisible","queryCreateTime","job_name","job_type","important_degree","creator_user_name","executor_user_name","create_time","accept_time","end_time","approve_id","approve_content","refuse_reason","isExecutorChangable","isGetEnable","isFinishEnable","isDeleteEnable","isRefuseEnable","onDrawerClose","onQueryDateChange","downloadFile","ChangeExecutorSelect","changeRefuseReason","autoCreateJob","jobs_content_Text","tag","getStatusText","showJobDetail","startJob","finishJob","refuseJob","deleteJob","drawerSpinning","opsUsersList","changeExecutorModalVisible","changeToUserId","jobChangeId","job_file","currentJob","currentJobDetail","ServerBase","encodeURIComponent","setItem","pathname","waitContent","m1","m2","du","duration","humanize","k8sConfigContent","jobs_content_Paragraph","refuseContent","titleContent","jobs_content_Content","stmayle","jobs_content_TextArea","showIcon","task_content","remark","minHeight","Layout","TaskContent","task_content_Content","Switch","Route","component","columnStyle","overFlow","textOverflow","UserModal","userModalVisible","handleAddUserSubmit","handleAddUserCancel","UserManager","username","email","active","count","user_manager_Text","updateUserActiveStatus","current_user","detailDrawerVisible","activeStatus","user_manager_Content","user_manager_UserModal","deleteRole","deleteAuthLink","getRolesList","getRoleResourceList","roleId","resourceType","getPermissionsList","RoleModal","roleActionType","roleModalVisible","handleAddRole","handleEditRole","handleCancelAddRole","UserManagerModal","filterOption","inputValue","option","inGroupData","allGroupData","transferLodding","loadRoleUsersData","getRoleUserList","all","forEach","in","targetKeys","direction","moveKeys","userIdList","hideModal","currentRoleName","userManagerModalVisible","handleConfirmUserManager","handleCancelUserManager","transfer","showSearch","itemUnit","itemsUnit","searchPlaceholder","handleTransferChange","listStyle","operations","ResourceManagerModal","ecsFilterOption","instance_name","ip","rdsFilterOption","db_instance_description","db_instance_id","kvFilterOption","connection_domain","slbFilterOption","load_balance_name","address","otherResFilterOption","handleTabClick","handleConfirmRoleResourceManager","tabSpinning","ecsInGroupData","ecsAllGroupData","rdsInGroupData","rdsAllGroupData","kvInGroupData","kvAllGroupData","slbInGroupData","slbAllGroupData","otherAllGroupData","otherInGroupData","loadRoleEcsData","loadRoleRdsData","loadRoleKvData","loadRoleSlbData","loadRoleOtherResData","ecsTransferLodding","rdsTransferLodding","kvTransferLodding","slbTransferLodding","otherResTransferLodding","res_type","ResType","_this10","ecsIdList","rdsIdList","kvIdList","slbIdList","otherIdList","resourceManagerModalVisible","handleCancelResourceManager","onTabClick","role_manager_TabPane","handleResTransferChange","AuthLinkManagerModal","_this11","url_path","loadRoleAuthLinksData","_this12","getRoleAuthLinks","Id","auth_type","_this13","authLinkIdList","authLinkManagerModalVisible","handleCancelAuthLinkManager","RolesManager","_this14","managerUser","confirmDeleteRole","okType","managerResource","managerAuthLink","createRole","roleEdit","editRoleId","_this15","roleName","description","_this16","_this17","_this18","role_manager_Content","role_manager_RoleModal","role_manager_UserManagerModal","role_manager_ResourceManagerModal","role_manager_AuthLinkManagerModal","rowClassName","AuthLinkModal","authLinkModalVisible","handleAddAuthLink","handleCancelAddAuthLink","PermissionsManager","confirmDeleteAuthLink","createAuthLink","permission_manager_Content","permission_manager_AuthLinkModal","PasswordManager","compareToFirstPassword","rule","callback","getFieldValue","updatePassword","preventDefault","password","confirm_password","getFieldDecorator","password_manager_Content","onSubmit","hasFeedback","validator","htmlType","SyncAliyunContent","syncAliyunEcs","syncAliyunRds","syncAliyunKv","syncAliyunSlb","syncEcsLoading","syncRdsLoading","syncKvLoading","syncSlbLoading","syncAliyunStatisData","ecsCount","rdsCount","kvCount","slbCount","defineProperty","sync_aliyun_Content","statistic","precision","OtherInfoModal","sitesData","loadCloudAccountData","other_content_Option","actionName","actionType","OtherContent","queryResType","CloudAccountId","Region","RenewStatus","RenewSiteId","BankAccount","handlePostOtherInfoSubmit","handlePostOtherInfoCancel","handleResTypeChange","other_content_Text","other_content_Paragraph","editId","other_info_modal_visible","cloudAccountId","connections","region","bandwidth","putCloudOtherRes","other_content_Content","wrappedComponentRef","extraInfoFormRef","other_content_OtherInfoModal","putSettingsValue","RangePicker","SettingsContent","onChangeAllowRenewConfirm","dateOnChange","handleSetExpireDateSubmit","handleSetExpireDateCancel","expireSettingModalVisible","isOpenRenewConfirm","expireStartDate","expireEndDate","loadAllowRenewConfirmStatus","key_name","dateString","settings_content_Content","banner","es_switch","checked","paddingTop","LogoutContent","removeItem","getUserFeedbackList","UserFeedbackManager","score","feedback_manager_Content","Panel","JobsManageContent","addCredentialFormRef","jobs","createJobDrawerVisible","addCredentialModalVisible","updateJobConfigDrawerVisible","jobLoading","credentialsList","env","GIT_REPO","GIT_BRANCH","GIT_CREDENTIALSId","DOCKER_IMAGE_REPO","DOCKER_IAMGE_CREDENTIALSId","DOCKER_IMAGE_NAME","currentJobName","currentJobConfigXml","loadJenkinsAllJobs","loadAllJenkinsCredentialsList","jobName","script","match","temp","innerHTML","scriptContent","innerText","textContent","pipelineScript","onCloseUpdateJobDrawer","trim","configTemplate","raw","_templateObject","jenkins_jobs_Content","extra","createNewBuildJob","Grid","jumpJobDetail","editJobConfig","danger","deleteJobItem","SettingOutlined","onCloseCreateJobDrawer","layout","onChangeGitRepo","onChangeGitBranch","onChangeGitCredentials","dropdownRender","flexWrap","flex","addNewCredential","PlusOutlined","jenkins_jobs_Option","jenkins_jobs_Text","displayName","onChangeDockerImageRepo","onChangeDockerImageName","onChangeDockerImageCredentials","handelAddNewJob","dangerouslySetInnerHTML","__html","bodyStyle","paddingBottom","footer","updateJenkinsFile","react_codemirror2","onBeforeChange","editor","handleAddCredentialOk","handleAddCredentialCancel","InfoCircleOutlined","BuildsManageContent","recordColumns","resultIcon","ClockCircleOutlined","building","CloseCircleOutlined","CheckCircleOutlined","branch","commitId","gitUrl","actions","unix","mins","get","ss","showBuildProgress","showBuildStageInfo","getBuildArchiveArtifactsInfo","deleteBuildItem","recordPagination","buildNum","buildInfo","buildList","recordTableLoading","buildStageInfo","buildStageDrawerVisible","currentFlowNodesLog","loadCurrentJobBuildList","buildsDetails","number","buildDetailDrawerVisible","buildLog","Number","jenkins_jobs_Paragraph","buildNumber","imageName","nodeId","LeftCircleOutlined","backToJobsContent","startBuild","closeBuildDetailDrawer","class","closeBuildStageDrawer","collapse","accordion","onChangeStageCollapse","header","empty","CiContent","ci_content_Content","exact","jenkins_jobs_JobsManageContent","jenkins_jobs_BuildsManageContent","getNamespaces","getClusterData","getNodeMetrics","getPodMetrics","ClusterConfigContent","clusterData","namespaceData","loadClusterData","items","clusterId","getK8sNamespaces","clusterOnChange","cd_content_Option","K8sResConfigContent","PROJECT_NAME","cdInfo","REPLICAS","IMAGE_NAME","CONTAINER_PORT","SERVICE_PORT","SERVICE_TARGET_PORT","INGRESS_HOST","deployYAML","serviceYAML","configMapYAML","ingressYAML","updateDeployYAMLTemplate","updateServiceYAMLTemplate","updateConfigMapYAMLTemplate","updateIngressYAMLTemplate","yamlCallback","yaml","cd_content_templateObject","updateYAMLTemplateCallback","_templateObject2","_templateObject3","_templateObject4","cd_content_TabPane","contianerPortOnChange","min","max","replicasOnChange","overflowX","ghost","cd_content_Panel","servicePortOnChange","serviceTargetPortOnChange","ingressHostOnChange","CdContent","clusterFormRef","ableToCd","currentStep","namespace","processName","deployProcessType","deployProcessRecord","processTemplateList","loadCdProcessTemplateList","deploy","cm","ingress","errorInfo","reqParams","templateId","postCdProcessTemplate","templateName","deployYaml","configmapYaml","serviceYaml","ingressYaml","deployToK8sByYAML","cd_content_Content","cd_content_Paragraph","onDeployProcessChange","plain","onDeployProcessRecordChange","TemplateName","submitToDeploy","es_result","cd_content_Text","cd_content_Step","cd_content_ClusterConfigContent","cd_content_K8sResConfigContent","CdRecordContent","cd_record_content_Text","cd_record_content_Content","CiCdContent","cicd_Content","ci_content","cd_content","cd_record_content","K8sTemplate","rc","rs","deployment","statefull_rs","daemonset","configmap","secret","RcDetailContent","rcDetail","labels","metadata","selectors","spec","selector","images","containersData","template","containers","rc_detail_Content","creationTimestamp","replicas","readyReplicas","ServiceDetailContent","serviceDetail","portsList","ports","portContent","service_detail_Content","clusterIP","sessionAffinity","AreaChart","area","Area","isStack","yAxis","formatter","v","unit","PodDetailContent","loadPodLog","handleCancelLogModal","openWebTerminal","memoryChartData","cpuChartData","refreshPodCpuMetrics","refreshPodMemoryMetrics","metricName","podName","metricPoints","containerName","phase","logModalVisible","logLoading","containersList","borderBottom","list","itemLayout","Meta","avatar","Icons_K8sContainerIconSvg","pod_detail_Text","image","pod_detail_Content","pod_detail_TabPane","hostIP","podIP","ReloadOutlined","area_chart","WebTerminalContent","goBack","containerDetail","connectionStatus","send","connectContent","web_terminal_Content","es_icon","ContainerLogContent","syncLogs","containerInfo","logContent","scrollToBottom","panel","scrollTop","scrollHeight","container_log_Content","whiteSpace","overflow","NodeDetailContent","nodeDetail","refreshNodeCpuMetrics","refreshNodeMemoryMetrics","nodeName","annotations","addresses","addressesData","node_detail_Text","node_detail_Content","node_detail_TabPane","daemonEndpoints","kubeletEndpoint","nodeInfo","containerRuntimeVersion","kubeletVersion","kubeProxyVersion","operatingSystem","architecture","RsDetailContent","rsDetail","matchLabels","rs_detail_Content","DeploymentDetailContent","deployment_detail_Content","IngressDetailContent","ingressDetail","certContent","tls","secretName","domainContent","host","http","paths","renderItem","pathType","backend","serviceName","servicePort","ingress_detail_Content","customPanelStyle","borderRadius","border","K8sNamespacesContent","showLoading","refreshDataLoading","getColumnSearchProps","filterDropdown","_ref","setSelectedKeys","selectedKeys","clearFilters","node","searchInput","onPressEnter","handleSearch","handleReset","filterIcon","filtered","onFilter","toLowerCase","includes","onFilterDropdownVisibleChange","select","dist_main_default","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","refreshNamespaceResources","selectChange","yarmCreateK8sResource","selectTemplateChange","handleYamlDetailCancel","handleScaleCancel","handleScaleCommit","onInputNumberChange","handleConfigCancel","updateYamlContent","nodeColumns","showDetail","conditions","rcColumns","Icons_StatusDoneSvg","Icons_StatusProgressSvg","autoScaleHandler","deleteHandler","showYamlHandler","rsColumns","serviceColumns","ingressColumns","deploymentColumns","restartDeployHandler","podColumns","statusContent","containerStatuses","configDictColumns","showDictValue","deleteDictValue","secretDictColumns","namespaceList","replicationControllerList","deploymentList","replicaSetList","serviceList","ingressList","podList","nodeList","configDictList","secretDictList","dictConfigValue","yamlModalVisible","scaleModalVisible","configModalVisible","yamlDetail","currentNamespace","yamlCode","yamlType","replicaCount","scaleResType","scaleResData","getK8sNodes","getNamespaceDeployments","getNamespaceReplicationControllers","getNamespaceReplicaSets","getNamespaceServices","getNamespaceIngress","getNamespacePods","getNamespaceConfigDict","getNamespaceSecretDict","deleteConfigMap","resName","deleteSecret","createModalVisible","yamlContent","deleteResource","_this19","modelTitle","alertTitle","rel","configList","namespaces_Panel","namespaces_Content","namespaces_Option","tabBarStyle","namespaces_TabPane","selectBefore","k8s_cluster_Option","ClusterManageContent","addCluster","handleClusterAddOk","handleClusterAddCancel","addModelVisible","k8sData","k8s_cluster_Content","grid","enterToCluster","confirmDeleteCluster","KubernetesContent","kubernetes_Content","k8s_cluster","namespaces","postDmsInstanceData","getDmsDatabaseData","postDmsUserAuth","getUserDmsDatabaseData","InstanceManageContent","loadInstanceData","handleQueryChange","searchValue","handleAddInstanceCancel","addInstanceModalVisible","editInstanseId","handleSubmitAddInstance","onExpand","expanded","expendTableData","expandedRowRender","indent","expendColumns","addInstanceDb","operType","instance_manage_Text","editInstance","deleteInstance","deleteInstanceDb","addInstanceDbModalVisible","addInstanceId","inputDbName","query","instanceData","dbName","instanceAlias","InstanceAlias","port","Host","operUser","OperUser","operPwd","OperPwd","databaseId","DatabaseId","instance_manage_Content","handleAddInstance","handleSubmitAddInstanceDb","handleAddInstanceDbCancel","dbNameChange","expandable","TreeNode","AuthManageContent","getUserAuthData","handleInstanceChange","queryInstanceId","handleEmpIdChange","queryEmpId","handleOperTypeChange","queryOperType","handleUserAuthCancel","addAuthModalVisible","handleSubmitUserAuth","selectedNodeId","selectedNodeType","validTime","onLoadData","treeNode","dataRef","instanceChildren","SchemaName","instance_type","isLeaf","treeData","toConsumableArray","renderTreeNodes","iconType","onTreeNodeSelect","selectedNodes","resetSelectedNodeValue","auth_manage_Text","deleteUserAuth","instanceOptions","expandedKeys","autoExpandParent","loadAllUsersData","loadAllInstanceData","empId","authData","users","optionsList","auth_manage_Option","instanceTreeNode","auth_manage_Content","optionFilterProp","handleAddAuth","afterClose","maxHeight","overflowY","tree","loadData","showLine","onSelect","operCount","auth_manage_TextArea","showTime","left_panel","borderRight","right_panel","DataManageContent","loadUserHistoryLog","DatabaseName","data_manage_TreeNode","currentChoose","tabsOnChange","activeKey","sqlInputRef","sqlInput","sqlDescription","sqlExecuting","execResultPanel","sqlResultLog","sqlResultLogColumns","data_manage_Paragraph","data_manage_Text","titleColumns","execStatus","exception","effectResult","execResult","exceptionContent","info","renderSqlQueryResultTable","renderSqlExecResultPanel","data_manage_Content","strong","showCursorWhenSelecting","autofocus","lineWrapping","submitSql","data_manage_TabPane","getDnsDomainRecordListData","postDnsDomain","postDnsDomainRecord","postDnsDomainRecordUpdate","DomainForm","DomainRecordForm","domain_manage_Option","addonAfter","domainName","DomainManageContent","changeRecordPage","loadDomainRecordData","onRecordDrawerClose","queryDomainRR","recordList","recordVisible","pageNum","rr","resp","TotalCount","PageNumber","showAddDomainModal","addDomainModalVisible","handleAddDomainOk","domainFormRef","handleAddDomainCancel","handleRecordOk","recordFormRef","rType","rValue","recordId","modifyRecordId","recordAction","recordModalVisible","handleRecordCancel","queryDomainList","domain_manage_Text","showDomainRecord","DomainName","showDomainRecordHistory","statusText","setContent","setRecordStatus","modifyRecord","deleteRecord","onShowRecordSizeChange","recordModalTitle","recordData","queryDomain","historyLogs","historyContent","Action","ActionTime","ClientIp","Message","oper","RecordId","RR","Type","Value","domain_manage_Content","domainQueryOnChange","domainRecordRROnChange","domain_manage_DomainRecordForm","domain_manage_DomainForm","ContentLayout","actionPermissionMap","loadUserActionPermissions","loadUserTokenRefresh","authMap","ContentLayout_Content","minWidth","server_content","rds_content","kv_content","slb_content","account_content","other_content","domain_manage","instance_manage","auth_manage","data_manage","cicd","kubernetes","AdminContent","onExit","stepsEnabled","BrowserRouter","es_layout","sidebar","components_footer","LoginContent","handleEnterKey","nativeEvent","keyCode","handleSubmit","URLSearchParams","search","loginPanel","onFinish","onFinishFailed","prefix","onKeyPress","block","LoginLayout_Text","Exception500","backToLogin","subTitle","Exception404","RouterWrap","App","router_RouterWrap","Boolean","hostname","ReactDOM","config_provider","zhCN","layouts_main","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e25787e6.chunk.js","sourcesContent":["const topMenus = [\n    {\n        menuTitle: \"我的\",\n        icon: \"user\",\n        subMenus: [\n            { title: \"修改密码\", route: \"/admin/permission/password\" },\n            { title: \"退出\", route: \"/admin/logout\" },\n        ],\n    },\n];\n\nconst sideMenus = [\n    {\n        menuTitle: \"云资源\",\n        icon: \"CloudServerOutlined\",\n        subMenus: [\n            { title: \"服务器\", route: \"/admin/cloud_resource/cloud_server\" },\n            { title: \"数据库\", route: \"/admin/cloud_resource/cloud_rds\" },\n            { title: \"KV-Store\", route: \"/admin/cloud_resource/cloud_kv\" },\n            { title: \"负载均衡\", route: \"/admin/cloud_resource/cloud_slb\" },\n            { title: \"其它资源\", route: \"/admin/cloud_resource/cloud_other\" },\n            { title: \"云账号\", route: \"/admin/cloud_resource/cloud_account\" },\n        ],\n    },\n    {\n        menuTitle: \"工作协助\",\n        icon: \"TeamOutlined\",\n        subMenus: [\n            { title: \"提交工单\", route: \"/admin/task/deploy_project\" },\n            { title: \"工单列表\", route: \"/admin/task/jobs\" },\n        ],\n    },\n    {\n        menuTitle: \"DMS操作\",\n        icon: \"DatabaseOutlined\",\n        subMenus: [\n            { title: \"实例管理\", route: \"/admin/dms/instance_manage\" },\n            { title: \"权限管理\", route: \"/admin/dms/auth_manage\" },\n            { title: \"数据操作\", route: \"/admin/dms/data_manage\" },\n        ],\n    },\n    {\n        menuTitle: \"域名DNS\",\n        icon: \"CompassOutlined\",\n        subMenus: [{ title: \"解析管理\", route: \"/admin/dns/domain_manage\" }],\n    },\n    {\n        menuTitle: \"集成部署\",\n        icon: \"GitlabOutlined\",\n        subMenus: [\n            { title: \"集成发布\", route: \"/admin/cicd/ci\" },\n            // { title: \"镜像部署\", route: \"/admin/cicd/cd\" },\n            { title: \"部署记录\", route: \"/admin/cicd/cd_record\" },\n        ],\n    },\n    {\n        menuTitle: \"Kubernetes\",\n        icon: \"ClusterOutlined\",\n        subMenus: [{ title: \"集群管理\", route: \"/admin/k8s_cluster/info\" }],\n    },\n    {\n        menuTitle: \"数据管理\",\n        icon: \"DatabaseOutlined\",\n        subMenus: [{ title: \"阿里云\", route: \"/admin/data/syncAliyun\" }],\n    },\n    {\n        menuTitle: \"权限管理\",\n        icon: \"KeyOutlined\",\n        subMenus: [\n            { title: \"用户管理\", route: \"/admin/permission/users\" },\n            { title: \"角色管理\", route: \"/admin/permission/roles\" },\n            { title: \"权限链接\", route: \"/admin/permission/permissions\" },\n        ],\n    },\n    {\n        menuTitle: \"系统管理\",\n        icon: \"GroupOutlined\",\n        subMenus: [{ title: \"用户反馈\", route: \"/admin/system/user_feedback\" }],\n    },\n];\n\nconst Menus = {\n    topMenus: topMenus,\n    sideMenus: sideMenus,\n    noAuthMenus: [\"/admin/task/deploy_project\", \"/admin/task/jobs\"], // 不参与权限校验的菜单\n};\n\nexport default Menus;\n","import axios from \"axios\";\n\naxios.interceptors.request.use(function(config) {\n    return config;\n});\n\naxios.interceptors.response.use(function(config) {\n    return config;\n});\n\nconst ServerBase = \"http://commonops.com:9999/\";\nconst WSBase = \"ws://commonops.com:9999/\";\n\nexport { ServerBase, WSBase };\n","import axios from \"axios\";\nimport { message } from \"antd\";\nimport { ServerBase } from \"../config\";\n\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nlet service = axios.create({\n    baseURL: ServerBase,\n    timeout: 7000,\n    withCredentials: false,\n});\n\nfunction getLocalToken() {\n    return localStorage.getItem(\"ops_token\");\n}\nexport { getLocalToken };\n\nfunction getClusterId() {\n    return localStorage.getItem(\"clusterId\");\n}\nexport { getClusterId };\n\n//添加请求拦截器\nservice.interceptors.request.use(\n    function(config) {\n        config.headers.Authorization = getLocalToken();\n        config.headers[\"ClusterId\"] = getClusterId();\n        return config;\n    },\n    function(error) {\n        return Promise.reject(error);\n    },\n);\n\n//添加响应拦截器\nservice.interceptors.response.use(\n    function(response) {\n        return response[\"data\"];\n    },\n    function(error) {\n        if (!error.response) {\n            message.error(\"Network Error\");\n            return Promise.reject(error);\n        }\n        let httpStatus = error.response.status;\n        switch (httpStatus) {\n            case 400:\n                message.error(\"[400]客户端请求参数错误\");\n                break;\n            case 401:\n                window.location.href = \"/login?code=401\";\n                break;\n            case 403:\n                window.location.href = \"/login?code=403\";\n                break;\n            case 500:\n                message.error(\"[500]服务异常，请联系运维处理\");\n                break;\n            default:\n                message.error(\"服务异常，请联系运维处理\");\n                break;\n        }\n        return Promise.reject(error);\n    },\n);\n\nexport default {\n    //get请求\n    get(url, param, timeout) {\n        return new Promise((resolve, reject) => {\n            service({\n                method: \"get\",\n                url,\n                params: param,\n                timeout: timeout,\n            })\n                .then((res) => {\n                    resolve(res);\n                })\n                .catch((err) => {\n                    if (!err.response) {\n                        message.error(\"Network Error\");\n                    } else {\n                        message.error(err.response.data.message);\n                    }\n                    reject(err);\n                });\n        });\n    },\n    //post请求\n    post(url, param, timeout) {\n        return new Promise((resolve, reject) => {\n            service({\n                method: \"post\",\n                url,\n                data: param,\n                timeout: timeout,\n            })\n                .then((res) => {\n                    resolve(res);\n                })\n                .catch((err) => {\n                    if (!err.response) {\n                        message.error(\"Network Error\");\n                    } else {\n                        message.error(err.response.data.message);\n                    }\n                    reject(err);\n                });\n        });\n    },\n    //put请求\n    put(url, param, timeout) {\n        return new Promise((resolve, reject) => {\n            service({\n                method: \"put\",\n                url,\n                data: param,\n                timeout: timeout,\n            })\n                .then((res) => {\n                    resolve(res);\n                })\n                .catch((err) => {\n                    if (!err.response) {\n                        message.error(\"Network Error\");\n                    } else {\n                        message.error(err.response.data.message);\n                    }\n                    reject(err);\n                });\n        });\n    },\n    //delete请求\n    delete(url, param, timeout) {\n        return new Promise((resolve, reject) => {\n            service({\n                method: \"delete\",\n                url,\n                data: param,\n                timeout: timeout,\n            })\n                .then((res) => {\n                    resolve(res);\n                })\n                .catch((err) => {\n                    if (!err.response) {\n                        message.error(\"Network Error\");\n                    } else {\n                        message.error(err.response.data.message);\n                    }\n                    reject(err);\n                });\n        });\n    },\n};\n","import req from '../utils/axios';\n\n/*\n    用户登录\n */\nconst postUserLogin = (data) => {\n    return req.post('user/login', data)\n};\nexport {postUserLogin}\n\n/*\n    用户创建\n */\nconst postUserCreate = (data) => {\n    return req.post('user/create', data)\n};\nexport {postUserCreate}\n\n/*\n    更新用户状态\n */\nconst putUserCreate = (data) => {\n    return req.put('user/active', data)\n};\nexport {putUserCreate}\n\n/*\n    用户 jwt token 刷新\n */\nconst getUserTokenRefresh = () => {\n    return req.get('user/tokenRefresh')\n};\nexport {getUserTokenRefresh}\n\n/*\n    获取注册用户列表\n */\nconst getUsersList = (page, size) =>{\n    return req.get('user/list', {page, size})\n};\nexport {getUsersList}\n\n/*\n    用户修改密码\n */\nconst postUpdatePassword = (data) => {\n    return req.post('user/updatePassword', data)\n};\nexport {postUpdatePassword}\n\n/*\n    用户提交需求&bug反馈\n */\nconst postUserFeedback = (data) => {\n    return req.post('user/feedback', data)\n};\nexport {postUserFeedback}","import React, { Component } from 'react';\nimport {Layout, Menu, Modal, Form, Input, Rate, message, Popover, Dropdown} from 'antd';\nimport {\n    MenuFoldOutlined,\n    MenuUnfoldOutlined,\n    UserOutlined,\n    MessageOutlined\n  } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport Menus from \"../menu\";\nimport {postUserFeedback} from \"../api/user\";\n\nconst { Header } = Layout;\nconst { TextArea } = Input;\n\n\nclass OpsHeader extends Component {\n\n    constructor(props) {\n        super(props);\n        this.showFeedbackModal = this.showFeedbackModal.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.formRef = React.createRef();\n        this.state= {\n            feedbackModalVisible: false,\n        }\n    }\n\n    showFeedbackModal() {\n        this.setState({feedbackModalVisible: true})\n    }\n\n    handleOk() {\n        this.formRef.current.validateFields().then((values) => {\n            postUserFeedback(values).then((res)=>{\n                if(res.code===0) {\n                    this.setState({feedbackModalVisible: false});\n                    message.success(\"已经收到您的反馈！\");\n                } else {\n                    message.error(res.msg);\n                }\n            }).catch((err)=>{\n                message.error(err.toLocaleString());\n            })\n        });\n    }\n\n    handleCancel() {\n        this.setState({feedbackModalVisible: false})\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 5},\n            wrapperCol: {span: 17},\n        };\n        let menuContent = (\n            <Menu>\n                {\n                    Menus.topMenus.map((menu) => {\n                        return (\n                            menu.subMenus.map((subMenu) => {\n                                return (\n                                    <Menu.Item key={subMenu.title}>\n                                        {<Link to={subMenu.hasOwnProperty(\"route\")?subMenu.route:\"\"}>{subMenu.title}</Link>}\n                                    </Menu.Item>\n                                )\n                            })\n                        )\n                    })\n                }\n            </Menu>\n        );\n\n        return (\n            <Header style={{ background: \"#fff\", padding: 0 }}>\n                <div style={{ background: \"#001529\" }}>\n                    <span\n                        style={{\n                            color: \"#fff\",\n                            paddingLeft: \"2%\",\n                            fontSize: \"1.4em\",\n                        }}\n                    >\n                        {this.props.menuCollapsed ? (\n                            <MenuUnfoldOutlined\n                                className=\"trigger\"\n                                onClick={this.props.handleSiderMenu}\n                                style={{ cursor: \"pointer\" }}\n                            />\n                        ) : (\n                            <MenuFoldOutlined\n                                className=\"trigger\"\n                                onClick={this.props.handleSiderMenu}\n                                style={{ cursor: \"pointer\" }}\n                            />\n                        )}\n                    </span>\n\n                    <span\n                        style={{\n                            color: \"#fff\",\n                            fontSize: \"1.4em\",\n                            float: \"right\",\n                            cursor: \"pointer\",\n                            width: \"30px\",\n                            textAlign: \"center\",\n                            marginLeft: \"20px\",\n                            marginRight: \"30px\",\n                        }}\n                    >\n                        <Dropdown\n                            overlay={menuContent}\n                            overlayStyle={{ width: \"150px\" }}\n                        >\n                            <UserOutlined />\n                        </Dropdown>\n                    </span>\n\n                    <span\n                        style={{\n                            color: \"#fff\",\n                            fontSize: \"1.4em\",\n                            float: \"right\",\n                            cursor: \"pointer\",\n                            width: \"30px\",\n                            textAlign: \"center\",\n                        }}\n                        onClick={this.showFeedbackModal}\n                    >\n                        <Popover content=\"提交需求反馈\">\n                            <MessageOutlined />\n                        </Popover>\n                    </span>\n\n                    <Modal\n                        title=\"「Bug & 需求」反馈\"\n                        destroyOnClose={true}\n                        visible={this.state.feedbackModalVisible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                        width={700}\n                    >\n                        <Form {...formItemLayout} ref={this.formRef}>\n                            <Form.Item\n                                label=\"反馈内容\"\n                                name=\"advice\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"内容不能为空\",\n                                    },\n                                ]}\n                            >\n                                <TextArea rows={4} />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"当前版本满意度\"\n                                name=\"score\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"请对当前版本进行打分\",\n                                    },\n                                ]}\n                            >\n                                <Rate\n                                    tooltips={[\n                                        \"难用\",\n                                        \"不好用\",\n                                        \"体验一般\",\n                                        \"体验良好\",\n                                        \"非常棒\",\n                                    ]}\n                                />\n                            </Form.Item>\n                        </Form>\n                    </Modal>\n                </div>\n            </Header>\n        );\n    }\n}\n\nexport default withRouter(OpsHeader);\n","import req from \"../utils/axios\";\n\nconst getUserPermissionsList = (params) =>{\n    return req.get('user/permissions', params)\n};\nexport {getUserPermissionsList}\n","import React, { Component } from \"react\";\nimport { Layout, Menu, message } from \"antd\";\nimport * as Icons from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport Menus from \"../menu\";\nimport { getUserPermissionsList } from \"../api/permission\";\n\nconst { Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\n\nclass OpsSider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            authList: [],\n        };\n    }\n\n    componentWillMount() {\n        getUserPermissionsList({authType: \"菜单\"})\n            .then((res) => {\n                if (res.code === 0) {\n                    const dataList = res.data;\n                    let permissionUrlList = [];\n                    dataList.map((item) => {\n                        if(item.authType===\"菜单\") {\n                            permissionUrlList.push(item.urlPath);\n                        }\n                    });\n                    this.setState({\n                        authList: permissionUrlList,\n                    });\n                } else {\n                    message.error(\"获取用户菜单权限异常\");\n                }\n            })\n    }\n\n    hasSubMenusAllowed(subMenuList) {\n        let result = false;\n        subMenuList.map((item) => {\n            if (\n                this.state.authList.indexOf(item.route) > -1 ||\n                Menus.noAuthMenus.indexOf(item.route) > -1\n            ) {\n                result = true;\n                return result;\n            } else {\n                return null;\n            }\n        });\n        return result;\n    }\n\n    hasMenuAllowed(menuUrlPath) {\n        return (\n            this.state.authList.indexOf(menuUrlPath) > -1 ||\n            Menus.noAuthMenus.indexOf(menuUrlPath) > -1\n        );\n    }\n\n    render() {\n        return (\n            <Sider\n                trigger={null}\n                collapsed={this.props.menuCollapsed}\n                style={{ textAlign: \"center\" }}\n            >\n                <span\n                    className=\"logo\"\n                    style={\n                        this.props.menuCollapsed\n                            ? { backgroundSize: \"80%\" }\n                            : { backgroundSize: \"80%\" }\n                    }\n                />\n                <span\n                    className=\"logo-text\"\n                    style={this.props.menuCollapsed ? { display: \"none\" } : {}}\n                >\n                    运维平台\n                </span>\n                <Menu theme=\"dark\" mode=\"inline\" style={{ textAlign: \"left\" }}>\n                    {Menus.sideMenus.map((menu) => {\n                        if (\n                            menu.subMenus.length &&\n                            this.hasSubMenusAllowed(menu.subMenus)\n                        ) {\n                            const menuIcon = React.createElement(\n                                Icons[menu.icon],\n                            );\n                            return (\n                                <SubMenu\n                                    key={menu.menuTitle}\n                                    title={\n                                        <span>\n                                            {menuIcon}\n                                            <span>{menu.menuTitle}</span>\n                                        </span>\n                                    }\n                                >\n                                    {menu.subMenus.map((subMenu) => {\n                                        if (\n                                            this.hasMenuAllowed(subMenu.route)\n                                        ) {\n                                            return (\n                                                <Menu.Item key={subMenu.title}>\n                                                    <Link to={subMenu.route}>\n                                                        {subMenu.title}\n                                                    </Link>\n                                                </Menu.Item>\n                                            );\n                                        } else {\n                                            return null;\n                                        }\n                                    })}\n                                </SubMenu>\n                            );\n                        } else {\n                            return null;\n                        }\n                    })}\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default OpsSider;\n","import React, { Component } from 'react';\nimport { Layout, Popover, Typography } from 'antd';\nconst { Footer} = Layout;\n\nconst { Text } = Typography;\n\nclass OpsFooter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentYear: new Date().getFullYear(),\n    };\n  }\n\n  render() {\n    return (\n      <Footer style={{ textAlign: 'center', padding: '15px 50px' }}>\n        ©2019-{this.state.currentYear} Created by &nbsp;\n        <Popover content={<div className=\"wechat\"/>} >\n            <Text underline>KevinYang</Text>\n        </Popover>\n      </Footer>\n    );\n  }\n}\n\nexport default OpsFooter;\n","import React, { Component } from 'react';\nimport {Layout} from \"antd\";\n\nconst { Content } = Layout;\n\nclass WelcomeContent extends Component {\n  render() {\n    return (\n      <Content style={{ height: '100%' }}>\n        <div className=\"welcome-ad\" />\n      </Content>\n    );\n  }\n}\n\nexport default WelcomeContent;\n","import React, { Component } from 'react';\nimport { Breadcrumb } from 'antd';\n\n\nclass OpsBreadcrumbPath extends Component {\n\n    static defaultProps = {\n        pathData: [],\n    };\n\n    render() {\n        return (\n            <Breadcrumb style={{ margin: '5px 0px 10px 0px' }}>\n                {\n                    this.props.pathData.map((path) => {\n                        return (\n                            <Breadcrumb.Item key={path}>{path}</Breadcrumb.Item>\n                        )\n                    })\n                }\n            </Breadcrumb>\n    );\n  }\n}\n\nexport default OpsBreadcrumbPath;\n","import req from \"../utils/axios\";\n\nconst getCloudServers = (params) => {\n    return req.get(\"cloud/servers\", params);\n};\nexport { getCloudServers };\n\nconst getCloudServerDetail = (id) => {\n    return req.get(\"cloud/servers/\" + id);\n};\nexport { getCloudServerDetail };\n\nconst getCloudAccouts = (page, size) => {\n    return req.get(\"cloud/accounts\", { page, size });\n};\nexport { getCloudAccouts };\n\nconst postCloudAccouts = (data) => {\n    return req.post(\"cloud/accounts\", data);\n};\nexport { postCloudAccouts };\n\nconst putCloudAccouts = (data) => {\n    return req.put(\"cloud/accounts\", data);\n};\nexport { putCloudAccouts };\n\nconst deleteCloudAccouts = (data) => {\n    return req.delete(\"cloud/accounts\", data);\n};\nexport { deleteCloudAccouts };\n\nconst getCloudMonitorEcs = (instanceId, timeDimension, metricDimension) => {\n    return req.get(\"cloud/monitor/ecs\", {\n        instanceId,\n        timeDimension,\n        metricDimension,\n    });\n};\nexport { getCloudMonitorEcs };\n\nconst getCloudMonitorRds = (instanceId, timeDimension, metricDimension) => {\n    return req.get(\"cloud/monitor/rds\", {\n        instanceId,\n        timeDimension,\n        metricDimension,\n    });\n};\nexport { getCloudMonitorRds };\n\nconst getCloudMonitorKv = (instanceId, timeDimension, metricDimension) => {\n    return req.get(\"cloud/monitor/kv\", {\n        instanceId,\n        timeDimension,\n        metricDimension,\n    });\n};\nexport { getCloudMonitorKv };\n\nconst getCloudMonitorSlb = (instanceId, timeDimension, metricDimension) => {\n    return req.get(\"cloud/monitor/slb\", {\n        instanceId,\n        timeDimension,\n        metricDimension,\n    });\n};\nexport { getCloudMonitorSlb };\n\nconst getCloudRds = (params) => {\n    return req.get(\"cloud/rds\", params);\n};\nexport { getCloudRds };\n\nconst getCloudKv = (params) => {\n    return req.get(\"cloud/kv\", params);\n};\nexport { getCloudKv };\n\nconst getCloudSlb = (params) => {\n    return req.get(\"cloud/slb\", params);\n};\nexport { getCloudSlb };\n\nconst getCloudRdsDetail = (id) => {\n    return req.get(\"cloud/rds/detail\", {id: id});\n};\nexport { getCloudRdsDetail };\n\nconst getCloudKvDetail = (id) => {\n    return req.get(\"cloud/kv/detail\", {id: id} );\n};\nexport { getCloudKvDetail };\n\nconst getCloudSlbDetail = (id) => {\n    return req.get(\"cloud/slb/detail\", {id: id});\n};\nexport { getCloudSlbDetail };\n\nconst postCloudServer = (data) => {\n    return req.post(\"cloud/servers\", data);\n};\nexport { postCloudServer };\n\nconst putCloudServer = (data) => {\n    return req.put(\"cloud/servers\", data);\n};\nexport { putCloudServer };\n\nconst deleteCloudServer = (id) => {\n    return req.delete(\"cloud/servers\", { id: id });\n};\nexport { deleteCloudServer };\n\nconst deleteCloudKv = (id) => {\n    return req.delete(\"cloud/kv\", { id: id });\n};\nexport { deleteCloudKv };\n\nconst postCloudKv = (data) => {\n    return req.post(\"cloud/kv\", data);\n};\nexport { postCloudKv };\n\nconst putCloudKv = (data) => {\n    return req.put(\"cloud/kv\", data);\n};\nexport { putCloudKv };\n\nconst putCloudRds = (data) => {\n    return req.put(\"cloud/rds\", data);\n};\nexport { putCloudRds };\n\nconst postCloudRds = (data) => {\n    return req.post(\"cloud/rds\", data);\n};\nexport { postCloudRds };\n\nconst deleteCloudRds = (id) => {\n    return req.delete(\"cloud/rds\", { id: id });\n};\nexport { deleteCloudRds };\n\nconst deleteCloudSlb = (id) => {\n    return req.delete(\"cloud/slb\", { id: id });\n};\nexport { deleteCloudSlb };\n\nconst getCloudOtherRes = (params) => {\n    return req.get(\"cloud/other\", params);\n};\nexport { getCloudOtherRes };\n\nconst postCloudOtherRes = (data) => {\n    return req.post(\"cloud/other\", data);\n};\nexport { postCloudOtherRes };\n\nconst putCloudOtherRes = (data) => {\n    return req.put(\"cloud/other\", data);\n};\nexport { putCloudOtherRes };\n\nconst deleteCloudOtherRes = (id) => {\n    return req.delete(\"cloud/other\", { id: id });\n};\nexport { deleteCloudOtherRes };\n","import React, {Component} from \"react\";\nimport {Form, Input, Modal, Divider, Row, Col, DatePicker} from \"antd\";\nimport moment from 'moment';\nmoment.locale('zh-cn');\n\nconst EcsInfoForm = [\n    {\n        label: \"来源\",\n        key: \"resForm\",\n        type: \"input\",\n        disabled: true,\n    },\n    {\n        label: \"实例Id\",\n        key: \"instanceId\",\n        type: \"input\",\n    },\n    {\n        label: \"实例名称\",\n        key: \"instanceName\",\n        type: \"input\",\n    },\n    {\n        label: \"内网ip\",\n        key: \"innerIpAddress\",\n        type: \"input\",\n    },\n    {\n        label: \"外网ip\",\n        key: \"publicIpAddress\",\n        type: \"input\",\n    },\n    {\n        label: \"私有ip\",\n        key: \"privateIpAddress\",\n        type: \"input\",\n    },\n    {\n        label: \"CPU\",\n        key: \"cpu\",\n        type: \"input\",\n    },\n    {\n        label: \"内存(G)\",\n        key: \"memory\",\n        type: \"input\",\n    },\n    {\n        label: \"过期时间\",\n        key: \"expiredTime\",\n        type: \"date_input\",\n    },\n    {\n        label: \"SSH Port\",\n        key: \"sshPort\",\n        type: \"input\",\n    },\n    {\n        label: \"SSH 用户\",\n        key: \"sshUser\",\n        type: \"input\",\n    },\n    {\n        label: \"SSH 密码\",\n        key: \"sshPwd\",\n        type: \"input\",\n    },\n];\n\nconst RdsInfoForm = [\n    {\n        \"label\": \"来源\",\n        \"key\": \"resForm\",\n        \"type\": \"input\",\n        \"disabled\": true,\n    },\n    {\n        \"label\": \"实例名称\",\n        \"key\": \"dbInstanceDescription\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"内存(G)\",\n        \"key\": \"dbMemory\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"磁盘(G)\",\n        \"key\": \"dbInstanceStorage\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"过期时间\",\n        \"key\": \"dbExpiredTime\",\n        \"type\": \"date_input\",\n    }\n];\n\nconst KvInfoForm = [\n    {\n        \"label\": \"来源\",\n        \"key\": \"resForm\",\n        \"type\": \"input\",\n        \"disabled\": true,\n    },\n    {\n        \"label\": \"实例名称\",\n        \"key\": \"kvInstanceName\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"带宽\",\n        \"key\": \"kvBandwidth\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"容量(G)\",\n        \"key\": \"kvCapacity\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"过期时间\",\n        \"key\": \"kvExpiredTime\",\n        \"type\": \"date_input\",\n    }\n];\n\nclass ExtraInfoModal extends Component {\n\n    constructor(props){\n        super(props);\n        this.handleOk = this.handleOk.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.switchChange = this.switchChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            usersData: [],\n        }\n    }\n\n    componentDidMount() {\n        this.generateBaseInfoForm();\n    }\n\n    switchChange(value) {\n        this.setState({renewSwitch: value});\n    }\n\n    handleOk() {\n        this.formRef.current.validateFields().then((values) => {\n            if('expiredTime' in values){\n                values.expiredTime = moment(values.expiredTime).format(\"YYYY-MM-DD 00:00:00\");\n            }\n            if('dbExpiredTime' in values){\n                values.dbExpiredTime = moment(values.dbExpiredTime).format(\"YYYY-MM-DD 00:00:00\");\n            }\n            if('kvExpiredTime' in values){\n                values.kvExpiredTime = moment(values.kvExpiredTime).format(\"YYYY-MM-DD 00:00:00\");\n            }\n            this.props.handleOk(values);\n        });\n    }\n\n    handleCancel() {\n        this.formRef.current.resetFields();\n        this.props.handleCancel();\n    }\n\n    getInputItem(item, disableInput) {\n        let res = <Input />;\n        switch (item.type) {\n            case 'input':\n                res = <Input disabled={item.disabled || disableInput}/>;\n                break;\n            case 'date_input':\n                res = <DatePicker format=\"YYYY-MM-DD\" disabled={item.disabled || disableInput}/>;\n                break;\n            default:\n                break;\n        }\n        return res;\n    }\n\n    generateBaseInfoForm() {\n        if(this.props.updateMode!=='single'){\n            return \"\"\n        }\n        let disableInput = false;\n        let resType = this.props.resType;\n        let formContent;\n        let result = [];\n        const twoItemFormLayout = {\n            labelCol: {span: 7},\n            wrapperCol: {span: 17},\n        };\n        let data = [];\n        switch (resType) {\n            case 'ecs':\n                data = EcsInfoForm;\n                break;\n            case 'rds':\n                data = RdsInfoForm;\n                break;\n            case 'kv':\n                data = KvInfoForm;\n                break;\n            default:\n                break;\n        }\n        let formItem = data.map((item, index) => {\n            let offsetNum = index % 2 === 0 ? 0 : 1;\n            return (\n                <Col span={11} offset={offsetNum} key={item.key}>\n                    <Form.Item {...twoItemFormLayout} label={item.label} name={item.key} rules={[\n                        {required: item.required, message: '该值为必填项！'}\n                    ]}>\n                        {this.getInputItem(item, disableInput)}\n                    </Form.Item>\n                </Col>\n            )\n        });\n        result.push(formItem);\n        formContent = (\n            <div>\n                <Divider orientation=\"left\" style={{ marginTop: '0px', color: 'rgb(255, 80, 23)'}}>基本信息</Divider>\n                <Row gutter={12}>{result}</Row>\n            </div>\n        );\n        return formContent;\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 7},\n            wrapperCol: {span: 14},\n        };\n        return (\n            <Modal\n                visible={this.props.visible}\n                destroyOnClose={true}\n                title=\"完善资源信息\"\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                centered={true}\n                width={700}\n            >\n                <Form ref={this.formRef} {...formItemLayout} initialValues={this.props.editData}>\n                    {this.generateBaseInfoForm()}\n                </Form>\n            </Modal>\n        )\n    }\n\n}\n\nexport default ExtraInfoModal;","import React, { Component } from \"react\";\nimport { Line } from \"@antv/g2plot\";\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.id = this.uuid();\n    }\n\n    uuid() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(\n            c,\n        ) {\n            var r = (Math.random() * 16) | 0,\n                v = c === \"x\" ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n\n    componentDidMount() {\n        let id = this.id;\n        let data = this.props.data;\n        let xField = this.props.xField ? this.props.xField : \"date\";\n        let yField = this.props.yField ? this.props.yField : \"value\";\n        setTimeout(() => {\n            this.line = new Line(id, {\n                data,\n                width: this.props.width,\n                height: this.props.height,\n                padding: \"auto\",\n                xField: xField,\n                yField: yField,\n                meta: {\n                    yField: {},\n                },\n            });\n            this.line.render();\n        }, 300);\n    }\n\n    componentDidUpdate() {\n        setTimeout(() => this.line.changeData(this.props.data), 400);\n    }\n\n    render() {\n        return (\n            <div\n                id={this.id}\n                style={{ height: this.props.height, width: this.props.width }}\n            ></div>\n        );\n    }\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport { createFromIconfontCN } from \"@ant-design/icons\";\n\nconst WindowsSvg = () => (\n    <svg\n        width=\"15px\"\n        height=\"15px\"\n        t=\"1562667653974\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"2507\"\n    >\n        <path\n            d=\"M486.4 134.4L960 64v422.4H486.4V134.4z\"\n            fill=\"#90C300\"\n            p-id=\"2508\"\n        ></path>\n        <path\n            d=\"M64 198.4l358.4-51.2v345.6H64V198.4z\"\n            fill=\"#F8672C\"\n            p-id=\"2509\"\n        ></path>\n        <path\n            d=\"M486.4 889.6L960 960V550.4H486.4v339.2z\"\n            fill=\"#FFC400\"\n            p-id=\"2510\"\n        ></path>\n        <path\n            d=\"M64 825.6l358.4 51.2V550.4H64v275.2z\"\n            fill=\"#00B4F2\"\n            p-id=\"2511\"\n        ></path>\n    </svg>\n);\n\nconst LinuxSvg = () => (\n    <svg\n        t=\"1562667694279\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"3672\"\n        width=\"15px\"\n        height=\"15px\"\n    >\n        <path\n            d=\"M839.73005 769.44c9.3-20 13.6-48 13.6-86.78 0-138.52-63.82-218.44-115.08-282.66-31.04-38.9-55.58-69.62-55.58-101.34v-10c0.32-58.88 1.02-181.48-64-246.94C591.05005 14 555.19005 0 511.99005 0c-89.62 0-149.32 43.54-149.32 256 0 58.48-24.62 106.38-50.66 157.08-11.4 22.24-23.22 45.24-33.12 69.54C259.19005 531.08 213.33005 649.68 213.33005 704a21.4 21.4 0 0 0 2.44 10l151 288a21.4 21.4 0 0 0 16.38 11.1 21.4 21.4 0 0 0 18.64-7.06c9.48-10.56 72.32-24.56 110.2-24.56h144.74a21.4 21.4 0 0 0 14.88-6l175.26-170.68a21.34 21.34 0 0 0-7.14-35.18z\"\n            fill=\"#1A1A1A\"\n            p-id=\"3673\"\n        ></path>\n        <path\n            d=\"M688.19005 717.3c-0.52-103.88-14.64-220.72-96.72-388.52C550.85005 356.26 476.29005 378 467.33005 378c-16.16 0-51.42-11.54-77.34-34.4-10.64 31.42-25.38 60.52-40 89-11 21.4-22.36 43.54-31.54 66.12C292.65005 562 263.19005 645.46 257.33005 689.78c18 12 30.64 38 44.54 67.14 14.4 30.12 30.7 64.26 51.72 78.92 38.48 26.78 58.42 64.98 63.64 99.68 14.64 1.46 33.1 2.72 54 2.72 52 0 122.6-10.56 174.82-42.24 2.9-56.44 12.82-146.96 42.14-178.7z\"\n            fill=\"#FFFFFF\"\n            p-id=\"3674\"\n        ></path>\n        <path\n            d=\"M892.85005 813.84c-8.84-5.8-18-11.8-24.44-18.26-3.76-3.76-2-21.2-1.12-30.58 1.76-18 3.6-36.58-8.5-50-4.56-5.04-12.94-11.06-26.8-11.06-11.4 0-19.74 9.04-20.24 20.44 0 0.3 0.12 0.58 0.12 0.9H725.33005A21.32 21.32 0 0 0 703.99005 704c-63.26 0-64 232.32-64.24 237.4-1.2 12.72-4 42.58 15.12 63.54 11.52 12.64 28 19.06 49.12 19.06 55.38 0 82.24-28.54 108.2-56.12 4.36-4.68 8.84-9.42 13.56-14.12 10.8-10.82 32-18.54 50.62-25.34 30.62-11.2 62.3-22.76 62.3-53.76s-25.34-47.44-45.82-60.82zM353.51005 835.84c-21.02-14.66-37.32-48.8-51.72-78.92-19.04-39.84-35.5-74.26-67.12-74.26-40 0-48.66 35.88-53.32 55.16-1.3 5.3-3.24 13.3-3.44 14.24-3.16 2-15.08 4.32-22.96 5.88C128.91005 763.1 85.33005 771.72 85.33005 810.66a162.48 162.48 0 0 0 3.54 30.98C92.17005 859.4 95.33005 876.14 86.01005 912a20.8 20.8 0 0 0-0.68 5.34c0 51.28 79.66 58 127.28 61.88 8 0.68 14.5 1.18 18.72 1.84 6.56 1.04 20.32 7.38 33.6 13.5C293.33005 1007.68 328.77005 1024 362.67005 1024c24.36 0 43.86-15.76 52.16-42.12 12.9-41.1-4.18-106.28-61.32-146.04z\"\n            fill=\"#FDB515\"\n            p-id=\"3675\"\n        ></path>\n        <path\n            d=\"M831.99005 661.34a20.64 20.64 0 0 0-10.92 3.44l-142.46-233.1a1140 1140 0 0 0-62.32-142.78 21.32 21.32 0 1 0-38 19.54c96.32 187.16 104.3 304 104.34 415.7-0.26 4.48-1.78 44.44 21.2 68.76a57.3 57.3 0 0 0 42.76 17.76h14.78c21.7 0 45.16-1.66 63.5-19.86 19.72-19.36 28.46-52.8 28.46-108.14a21.32 21.32 0 0 0-21.34-21.32z\"\n            fill=\"#1A1A1A\"\n            p-id=\"3676\"\n        ></path>\n        <path\n            d=\"M554.67005 129.78c-24.74 0-42.68 26.54-42.68 63.12s18 63.1 42.68 63.1S597.33005 229.46 597.33005 192.9s-18-63.12-42.66-63.12z\"\n            fill=\"#FFFFFF\"\n            p-id=\"3677\"\n        ></path>\n        <path\n            d=\"M535.31005 208.56a37.9 19.36 90 1 0 38.72 0 37.9 19.36 90 1 0-38.72 0Z\"\n            p-id=\"3678\"\n        ></path>\n        <path\n            d=\"M426.67005 129.78c-24.74 0-42.68 26.54-42.68 63.12s18 63.1 42.68 63.1S469.33005 229.46 469.33005 192.9s-18-63.12-42.66-63.12z\"\n            fill=\"#FFFFFF\"\n            p-id=\"3679\"\n        ></path>\n        <path\n            d=\"M407.71005 207.82a37.14 18.96 90 1 0 37.92 0 37.14 18.96 90 1 0-37.92 0Z\"\n            p-id=\"3680\"\n        ></path>\n        <path\n            d=\"M494.85005 213.76a21.16 21.16 0 0 0-4.18-0.42c-45.88 0-128 43.02-128 85.32 0 40 80.68 85.34 106.66 85.34 12.6 0 149.34-47.48 149.34-85.34 0-55.8-94.78-79.1-123.82-84.9z\"\n            fill=\"#FDB515\"\n            p-id=\"3681\"\n        ></path>\n    </svg>\n);\n\nconst StatusDoneSvg = () => (\n    <svg\n        t=\"1570523496603\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"1158\"\n        width=\"20\"\n        height=\"20\"\n    >\n        <path\n            d=\"M512 34.133333a486.4 486.4 0 1 0 486.4 486.4A486.4 486.4 0 0 0 512 34.133333z m288.580267 332.552534l-324.266667 347.426133a45.866667 45.866667 0 0 1-64.9216 2.6112 20.334933 20.334933 0 0 1-1.518933-1.518933l-185.258667-185.233067a46.344533 46.344533 0 0 1 65.3568-65.3568l152.541867 151.3472 290.423466-312.2432a46.293333 46.293333 0 1 1 71.68 58.632533 37.0944 37.0944 0 0 1-4.0192 4.343467z m0 0\"\n            p-id=\"1159\"\n            fill=\"#1296db\"\n        ></path>\n    </svg>\n);\n\nconst StatusProgressSvg = () => (\n    <svg\n        t=\"1570523553927\"\n        className=\"icon\"\n        viewBox=\"0 0 1160 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"1721\"\n        width=\"20\"\n        height=\"20\"\n    >\n        <path\n            d=\"M610.84444476 70.65600031a454.39999969 454.39999969 0 1 1-0.70400062 908.79999938c-140.60800031-3.19999969-261.76000031-62.91199969-361.59999938-177.66399938a31.99999969 31.99999969 0 0 1 48.25599938-41.98400062c88.32 101.50399969 192.64000031 152.89600031 314.04800062 155.64800062a390.40000031 390.40000031 0 1 0-388.992-423.80800031l73.344-73.27999969a31.99999969 31.99999969 0 0 1 48.89599969 40.83199969l-3.648 4.48000031L231.83644476 572.16000031a31.99999969 31.99999969 0 0 1-40.83200062 3.71199938l-4.47999938-3.71199938-108.60800062-108.60800062a31.99999969 31.99999969 0 0 1 40.83200062-48.96l4.47999938 3.71200031 38.33600062 38.4A454.52800031 454.52800031 0 0 1 610.84444476 70.65600031z m0 224.19199969a31.99999969 31.99999969 0 0 1 31.99999969 31.99999969v178.81600031l162.36799969 156.35200031a31.99999969 31.99999969 0 0 1-44.41599938 46.08l-172.16000062-165.76000031a31.99999969 31.99999969 0 0 1-9.792-23.04V326.78400031a31.99999969 31.99999969 0 0 1 32.00000062-32.00000062z\"\n            fill=\"#d81e06\"\n            p-id=\"1722\"\n        ></path>\n    </svg>\n);\n\nconst K8sContainerIconSvg = () => (\n    <svg\n        t=\"1569723850164\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"657\"\n        width=\"30\"\n        height=\"30\"\n    >\n        <path\n            d=\"M205.653333 737.066667c-29.184 0-55.637333-23.893333-55.637333-52.906667s23.893333-53.034667 55.68-53.034667c31.914667 0 55.893333 23.893333 55.893333 52.992s-26.538667 52.906667-55.68 52.906667z m683.178667-288.554667c-5.76-42.325333-32-76.8-66.56-103.253333l-13.44-10.666667-10.837333 13.226667c-21.077333 23.893333-29.44 66.261333-26.88 97.92 2.56 23.978667 10.24 47.786667 23.637333 66.304-10.837333 5.546667-24.234667 10.666667-34.56 16.085333a225.706667 225.706667 0 0 1-71.68 10.666667H4.138667l-2.56 15.786666a297.813333 297.813333 0 0 0 23.978666 151.04l10.410667 18.56v2.56c64 105.941333 177.92 153.6 301.994667 153.6 238.677333 0 434.432-103.253333 527.232-325.674666 60.8 2.645333 122.197333-13.226667 151.04-71.509334l7.68-13.226666-12.8-7.978667c-34.56-21.077333-81.92-23.893333-121.6-13.226667l-0.768 0.085334z m-341.674667-42.325333h-103.594666v103.253333h103.68V406.101333l-0.085334 0.128z m0-129.834667h-103.594666v103.253333h103.68V276.48l-0.085334-0.128z m0-132.437333h-103.594666v103.253333h103.68v-103.253333h-0.085334z m126.72 262.272H570.88v103.253333h103.253333V406.101333l-0.298666 0.128z m-383.914666 0H187.008v103.253333h103.338667V406.101333l-0.426667 0.128z m129.28 0h-102.4v103.253333H419.84V406.101333l-0.64 0.128z m-257.28 0H59.733333v103.253333h103.594667V406.101333l-1.28 0.128z m257.28-129.834667h-102.4v103.253333H419.84V276.48l-0.64-0.128z m-129.92 0H187.178667v103.253333H290.133333V276.48l-0.682666-0.128z\"\n            fill=\"#1296db\"\n            p-id=\"658\"\n        ></path>\n    </svg>\n);\n\nconst OpsIcon = createFromIconfontCN({\n    scriptUrl: \"//at.alicdn.com/t/font_1740765_flmkngup1r.js\",\n});\n\nexport {\n    WindowsSvg,\n    LinuxSvg,\n    StatusDoneSvg,\n    StatusProgressSvg,\n    K8sContainerIconSvg,\n    OpsIcon,\n};\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Col,\n    DatePicker,\n    Descriptions,\n    Divider,\n    Drawer,\n    Form,\n    Typography,\n    Input,\n    InputNumber,\n    Layout,\n    message,\n    Modal,\n    Radio,\n    Row,\n    Select,\n    Spin,\n    Table,\n    Tabs,\n    Popconfirm,\n    Badge,\n    Tooltip,\n} from \"antd\";\nimport {\n    SearchOutlined,\n    PlusCircleOutlined,\n    EyeInvisibleOutlined,\n    EyeTwoTone,\n} from \"@ant-design/icons\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport moment from \"moment\";\nimport \"../../assets/css/main.css\";\nimport {\n    deleteCloudServer,\n    getCloudAccouts,\n    getCloudMonitorEcs,\n    getCloudServerDetail,\n    getCloudServers,\n    postCloudServer,\n    putCloudServer,\n} from \"../../api/cloud\";\nimport \"moment/locale/zh-cn\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\nimport LineChart from \"./common/line_chart\";\nimport { LinuxSvg, WindowsSvg } from \"../../assets/Icons\";\nimport { Terminal } from \"xterm\";\nimport { AttachAddon } from \"xterm-addon-attach\";\nimport \"../../../node_modules/xterm/css/xterm.css\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\nimport { WSBase } from \"../../config\";\nmoment.locale(\"zh-cn\");\n\nconst TabPane = Tabs.TabPane;\nconst { Text, Paragraph } = Typography;\nconst Option = Select.Option;\nconst { Content } = Layout;\n\nclass ServerInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cloudAccountList: [],\n        };\n    }\n\n    componentDidMount() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n\n        return (\n            <Modal\n                title=\"服务器信息\"\n                destroyOnClose={true}\n                visible={this.props.server_info_modal_visible}\n                onOk={this.props.handlePostServerInfoSubmit}\n                onCancel={this.props.handlePostServerInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={600}\n            >\n                <Form\n                    ref={this.props.formRef}\n                    initialValues={{ osType: \"linux\" }}\n                >\n                    <Form.Item\n                        label=\"云账号\"\n                        {...formItemLayout}\n                        name=\"cloudAccountId\"\n                        rules={[\n                            { required: true, message: \"云账号不能为空！\" },\n                        ]}\n                    >\n                        <Select>{accountOptions}</Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"主机名\"\n                        {...formItemLayout}\n                        name=\"hostName\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例Id\"\n                        {...formItemLayout}\n                        name=\"instanceId\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例名称\"\n                        {...formItemLayout}\n                        name=\"instanceName\"\n                        rules={[\n                            { required: true, message: \"实例名称不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例描述\"\n                        {...formItemLayout}\n                        name=\"description\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"内网IP\"\n                        {...formItemLayout}\n                        name=\"innerIpAddress\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"外网IP\"\n                        {...formItemLayout}\n                        name=\"publicIpAddress\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"系统类型\"\n                        {...formItemLayout}\n                        name=\"osType\"\n                        rules={[\n                            { required: true, message: \"系统类型不能为空！\" },\n                        ]}\n                    >\n                        <Select>\n                            <Option value=\"linux\">Linux</Option>\n                            <Option value=\"windows\">Windows</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"CPU核数(个)\"\n                        {...formItemLayout}\n                        name=\"cpu\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"内存(G)\"\n                        {...formItemLayout}\n                        name=\"memory\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"磁盘(G)\"\n                        {...formItemLayout}\n                        name=\"disk\"\n                        rules={[{ type: \"integer\" }]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"创建时间\"\n                        {...formItemLayout}\n                        name=\"createTime\"\n                        rules={[\n                            { required: true, message: \"创建时间不能为空！\" },\n                        ]}\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"过期时间\"\n                        {...formItemLayout}\n                        name=\"expiredTime\"\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"SSH登录端口\"\n                        {...formItemLayout}\n                        name=\"sshPort\"\n                        rules={[{ type: \"integer\" }]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"SSH登录用户\"\n                        {...formItemLayout}\n                        name=\"sshUser\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"SSH登录密码\"\n                        {...formItemLayout}\n                        name=\"sshPwd\"\n                    >\n                        <Input.Password\n                            iconRender={(visible) =>\n                                visible ? (\n                                    <EyeTwoTone />\n                                ) : (\n                                    <EyeInvisibleOutlined />\n                                )\n                            }\n                        />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nclass ServerContent extends Component {\n    constructor(props) {\n        super(props);\n        this.handlePostServerInfoSubmit = this.handlePostServerInfoSubmit.bind(\n            this,\n        );\n        this.handlePostServerInfoCancel = this.handlePostServerInfoCancel.bind(\n            this,\n        );\n        this.handleExtraInfoOk = this.handleExtraInfoOk.bind(this);\n        this.handleExtraInfoCancel = this.handleExtraInfoCancel.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 220 : 100;\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例id\",\n                    dataIndex: \"InstanceId\",\n                    key: \"InstanceId\",\n                    width: 200,\n                },\n                {\n                    title: \"实例名称\",\n                    dataIndex: \"InstanceName\",\n                    key: \"InstanceName\",\n                    width: 200,\n                    textWrap: \"word-break\",\n                    render: (value) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text\n                                    ellipsis={true}\n                                    style={{ width: \"200px\" }}\n                                >\n                                    {value}\n                                </Text>\n                            </Tooltip>\n                        );\n                    },\n                },\n                {\n                    title: \"ip\",\n                    dataIndex: \"ip\",\n                    key: \"ip\",\n                    width: 200,\n                    render: (value, record) => {\n                        let innerContent = \"\";\n                        let privateContent = \"\";\n                        let publicContent = \"\";\n                        if (record.InnerIpAddress) {\n                            innerContent = (\n                                <div>\n                                    <Paragraph\n                                        style={{\n                                            marginBottom: 0,\n                                            display: \"inline\",\n                                        }}\n                                        copyable={record.InnerIpAddress !== \"\"}\n                                    >\n                                        {record.InnerIpAddress}\n                                    </Paragraph>\n                                    (内网)\n                                </div>\n                            );\n                        }\n                        if (record.PrivateIpAddress) {\n                            privateContent = (\n                                <div>\n                                    <Paragraph\n                                        style={{\n                                            marginBottom: 0,\n                                            display: \"inline\",\n                                        }}\n                                        copyable={\n                                            record.PrivateIpAddress !== \"\"\n                                        }\n                                    >\n                                        {record.PrivateIpAddress}\n                                    </Paragraph>\n                                    (私有)\n                                </div>\n                            );\n                        }\n                        if (record.PublicIpAddress) {\n                            publicContent = (\n                                <div>\n                                    <Paragraph\n                                        style={{\n                                            marginBottom: 0,\n                                            display: \"inline\",\n                                        }}\n                                        copyable={record.PublicIpAddress !== \"\"}\n                                    >\n                                        {record.PublicIpAddress}\n                                    </Paragraph>\n                                    (外网)\n                                </div>\n                            );\n                        }\n                        return (\n                            <div className=\"ip_column\">\n                                {innerContent}\n                                {privateContent}\n                                {publicContent}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"配置\",\n                    dataIndex: \"配置\",\n                    key: \"配置\",\n                    width: 100,\n                    render: (value, record) => {\n                        let cpuContent = (\n                            <Paragraph\n                                style={{ marginBottom: 0, display: \"inline\" }}\n                            >\n                                {record.Cpu}核\n                            </Paragraph>\n                        );\n                        let memoryContent = (\n                            <Paragraph\n                                style={{ marginBottom: 0, display: \"inline\" }}\n                            >\n                                {record.Memory}G\n                            </Paragraph>\n                        );\n                        let trafficType = \"\";\n                        if (record.InternetChargeType === \"PayByTraffic\") {\n                            trafficType = \"流量\";\n                        }\n                        if (record.InternetChargeType === \"PayByBandwidth\") {\n                            trafficType = \"带宽\";\n                        }\n                        let trafficOutContent = (\n                            <div>\n                                <Paragraph\n                                    style={{\n                                        marginBottom: 0,\n                                        display: \"inline\",\n                                    }}\n                                >\n                                    {record.InternetMaxBandwidthOut}Mbps(\n                                    {trafficType})\n                                </Paragraph>\n                            </div>\n                        );\n                        return (\n                            <div className=\"ip_column\">\n                                {cpuContent} &nbsp;\n                                {memoryContent}\n                                {trafficOutContent}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"系统类型\",\n                    dataIndex: \"OSType\",\n                    key: \"OSType\",\n                    align: \"center\",\n                    width: 80,\n                    render: (value, record) => {\n                        let status = \"error\";\n                        if (record.Status === \"Running\") {\n                            status = \"processing\";\n                        }\n                        if (value === \"windows\") {\n                            return (\n                                <div>\n                                    <WindowsSvg />\n                                    <Badge\n                                        status={status}\n                                        style={{\n                                            marginLeft: \"5px\",\n                                            position: \"relative\",\n                                            top: \"-10px\",\n                                        }}\n                                    />\n                                </div>\n                            );\n                        } else if (value === \"linux\") {\n                            return (\n                                <div>\n                                    <LinuxSvg />\n                                    <Badge\n                                        status={status}\n                                        style={{\n                                            marginLeft: \"5px\",\n                                            position: \"relative\",\n                                            top: \"-10px\",\n                                        }}\n                                    />\n                                </div>\n                            );\n                        } else {\n                            return <Text ellipsis={true}>{value}</Text>;\n                        }\n                    },\n                },\n                {\n                    title: \"区域\",\n                    dataIndex: \"ZoneId\",\n                    key: \"ZoneId\",\n                    width: 120,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"过期时间\",\n                    dataIndex: \"ExpiredTime\",\n                    key: \"ExpiredTime\",\n                    width: 120,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: { operWidth },\n                    align: \"center\",\n\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    onClick={this.openMonitorDrawer.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    监控\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    disabled={!this.props.aclAuthMap[\"PUT:/cloud/servers\"]}\n                                    onClick={this.serverEdit.bind(this, record)}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.serverDelete.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                    disabled={!this.props.aclAuthMap[\"DELETE:/cloud/servers\"]}\n                                >\n                                    <Button type=\"danger\" size=\"small\" disabled={!this.props.aclAuthMap[\"DELETE:/cloud/servers\"]}>\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            webSocketReady: false,\n            chartData: [],\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            drawerVisible: false,\n            drawerPlacement: \"left\",\n            instanceId: \"\",\n            timeTagValue: \"1h\",\n            metricTagValue: \"CPUUtilization\",\n            chartFormat: \"%\",\n            currentServerDetail: {},\n            msgContent: \"\",\n            server_info_modal_visible: false,\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            cloudAccountList: [],\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n            extraInfoData: {},\n        };\n        this.timer = null;\n        this.terminal = null;\n        this.rws = null;\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    }\n\n    componentWillUnmount() {\n        if (this.rws !== null) {\n            this.rws.close();\n        }\n        if (this.terminal !== null) {\n            this.terminal.dispose();\n        }\n    }\n\n    initWsConnection() {\n        this.rws.addEventListener(\"open\", () => {\n            console.log(\"connect success\");\n        });\n\n        this.rws.addEventListener(\"close\", () => {\n            console.log(\"close\");\n        });\n\n        this.rws.addEventListener(\"message\", (e) => {\n            console.log(\"message: \", e);\n        });\n\n        this.rws.addEventListener(\"error\", () => {\n            console.log(\"error\");\n        });\n    }\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    serverEdit(data) {\n        getCloudServerDetail(data.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                } else {\n                    let extraInfoData = {\n                        instanceId: res.data[\"InstanceId\"],\n                        innerIpAddress: res.data[\"InnerIpAddress\"],\n                        publicIpAddress: res.data[\"PublicIpAddress\"],\n                        privateIpAddress: res.data[\"PrivateIpAddress\"],\n                        instanceName: res.data[\"InstanceName\"],\n                        cpu: res.data[\"Cpu\"],\n                        memory: (res.data[\"Memory\"] / 1024).toString(),\n                        expiredTime:\n                            res.data[\"ExpiredTime\"] !== \"\"\n                                ? moment(res.data[\"ExpiredTime\"])\n                                : \"\",\n                        resForm:\n                            res.data[\"DataStatus\"] === 1\n                                ? \"阿里云\"\n                                : \"手动添加\",\n                        sshPort: res.data[\"SshPort\"] + \"\",\n                        sshUser: res.data[\"SshUser\"],\n                        sshPwd: res.data[\"SshPwd\"],\n                    };\n                    this.setState({\n                        extraInfoModalVisible: true,\n                        ecsId: data.ID,\n                        updateMode: \"single\",\n                        resFrom:\n                            data[\"DataStatus\"] === 1 ? \"阿里云\" : \"手动添加\",\n                        extraInfoData: extraInfoData,\n                    });\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if (this.state.updateMode === \"single\") {\n            targetId = String(this.state.ecsId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudServer({\n            ...data,\n            id: targetId,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        extraInfoModalVisible: false,\n                        selectedRowKeys: [],\n                    });\n                    message.success(\"修改成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({ extraInfoModalVisible: false });\n    }\n\n    serverDelete(data) {\n        deleteCloudServer(data.ID)\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            queryExpiredTime:\n                this.state.queryExpiredTime === null\n                    ? null\n                    : this.state.queryExpiredTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            queryKeyword: this.state.queryKeyword,\n            queryCloudAccount: this.state.queryCloudAccount,\n        };\n        getCloudServers(queryParams)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination: { ...pagination },\n                });\n                let data = res[\"data\"][\"servers\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"ID\"],\n                        ID: data[i][\"ID\"],\n                        Memory: data[i][\"Memory\"] / 1024,\n                        Cpu: data[i][\"Cpu\"],\n                        HostName: data[i][\"HostName\"],\n                        InstanceId: data[i][\"InstanceId\"],\n                        InnerIpAddress: data[i][\"InnerIpAddress\"],\n                        PublicIpAddress: data[i][\"PublicIpAddress\"],\n                        PrivateIpAddress: data[i][\"PrivateIpAddress\"],\n                        InternetMaxBandwidthIn:\n                            data[i][\"InternetMaxBandwidthIn\"],\n                        InternetMaxBandwidthOut:\n                            data[i][\"InternetMaxBandwidthOut\"],\n                        InternetChargeType: data[i][\"InternetChargeType\"],\n                        InstanceName: data[i][\"InstanceName\"],\n                        OSType: data[i][\"OSType\"],\n                        ZoneId: data[i][\"ZoneId\"],\n                        OSName: data[i][\"OSName\"],\n                        ExpiredTime: moment(data[i][\"ExpiredTime\"]).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                        Status: data[i][\"Status\"],\n                        CloudAccountName: data[i][\"CloudAccountName\"],\n                        DataStatus: data[i][\"DataStatus\"],\n                        SshPort: data[i][\"SshPort\"] + \"\",\n                        SshUser: data[i][\"SshUser\"],\n                        SshPwd: data[i][\"SshPwd\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                message.error(err);\n            });\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState(\n            {\n                drawerVisible: true,\n                instanceId: data.InstanceId,\n                currentServerDetail: data,\n            },\n            () => {\n                this.refreshMonitorData(\n                    data.InstanceId,\n                    this.state.timeTagValue,\n                    this.state.metricTagValue,\n                );\n                this.refreshSeverDetail();\n            },\n        );\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({ chartLoading: true });\n        getCloudMonitorEcs(instanceId, timeTagValue, metricTagValue)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                if (res[\"data\"][\"Datapoints\"] === \"\") {\n                    message.warn(\n                        \"未获取到监控数据，可能是非阿里云机器或其它原因！\",\n                    );\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                let dataPoints = JSON.parse(res[\"data\"][\"Datapoints\"]);\n                let chartData = [];\n                for (let i = 0; i < dataPoints.length; i++) {\n                    chartData.push({\n                        date: moment(dataPoints[i][\"timestamp\"]).format(\n                            \"DD日HH:mm\",\n                        ),\n                        value: dataPoints[i][\"Average\"],\n                    });\n                }\n                this.setState({ chartLoading: false, chartData: chartData });\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({ serverDetailLoading: true });\n        getCloudServerDetail(this.state.currentServerDetail.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                }\n                this.setState({ currentServerDetail: res[\"data\"] }, () => {\n                    this.setState({ serverDetailLoading: false });\n                });\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false });\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(\n            this.state.instanceId,\n            e.target.value,\n            this.state.metricTagValue,\n        );\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"CPUUtilization\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"memory_usedutilization\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"diskusage_utilization\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"cpu_total\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            default:\n                this.setState({ chartFormat: \"\" });\n                break;\n        }\n        this.refreshMonitorData(\n            this.state.instanceId,\n            this.state.timeTagValue,\n            e.target.value,\n        );\n    };\n\n    onExpiredDateChange = (moment) => {\n        if (moment == null) {\n            this.setState({ queryExpiredTime: null });\n        } else {\n            this.setState({ queryExpiredTime: moment });\n        }\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({ queryKeyword: e.target.value });\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({ queryCloudAccount });\n    };\n\n    // 新增自定义机器信息\n    handleAdd = () => {\n        this.setState({ server_info_modal_visible: true, ecsId: 0 });\n    };\n\n    handlePostServerInfoSubmit() {\n        this.formRef.current.validateFields().then((values) => {\n            postCloudServer({\n                ...values,\n                createTime: values.createTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n                expiredTime:\n                    values.expiredTime === undefined\n                        ? undefined\n                        : values.expiredTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\n                            \"添加成功，请到权限管理中增加访问权限！\",\n                        );\n                        this.setState({ server_info_modal_visible: false });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handlePostServerInfoCancel() {\n        this.setState({ server_info_modal_visible: false });\n    }\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    initTerminal = () => {\n        let dom = document.getElementById(\"server_terminal\");\n        if (dom) {\n            this.rws = new ReconnectingWebSocket(\n                WSBase +\n                    \"ws/cloud/ssh?serverId=\" +\n                    this.state.currentServerDetail.ID +\n                    \"&token=\" +\n                    localStorage.getItem(\"ops_token\"),\n            );\n            this.terminal = new Terminal({\n                rows: 36,\n                fontSize: 14,\n                cursorBlink: true,\n                cursorStyle: \"block\",\n                bellStyle: \"sound\",\n                theme: \"Console\",\n            });\n            this.terminal.prompt = () => {\n                this.terminal.write(\"\\r\\n$ \");\n            };\n            const attachAddon = new AttachAddon(this.rws);\n            this.terminal.loadAddon(attachAddon);\n            this.terminal.open(document.getElementById(\"server_terminal\"));\n            this.terminal.writeln(\"Welcome to use Web Terminal.\");\n            this.terminal.prompt();\n            this.initWsConnection();\n            this.terminal.focus();\n            if (!this.timer) {\n                clearTimeout(this.timer);\n            }\n        } else {\n            this.timer = setTimeout(this.initTerminal, 0);\n        }\n    };\n\n    detailTabChange(key) {\n        if (key === \"3\") {\n            this.initTerminal();\n        }\n    }\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"云资源\", \"云服务器\", \"服务器列表\"]}\n                />\n\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={3} className=\"col-span\">\n                        <DatePicker\n                            style={{ width: \"100%\" }}\n                            defaultValue={this.state.queryExpiredTime}\n                            placeholder=\"到期截止时间\"\n                            onChange={this.onExpiredDateChange}\n                        />\n                    </Col>\n                    <Col span={5} className=\"col-span\">\n                        <Input\n                            placeholder=\"输入实例id\\ip\\实例名称查询\"\n                            value={this.state.queryKeyword}\n                            onChange={this.keywordOnChange}\n                        />\n                    </Col>\n                    <Col span={4} className=\"col-span\">\n                        <Select\n                            defaultValue={this.state.queryCloudAccount}\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleCloudAccountChange}\n                        >\n                            <Option value=\"0\">所有云账号</Option>\n                            {accountOptions}\n                        </Select>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAdd}\n                            disabled={!this.props.aclAuthMap[\"POST:/cloud/servers\"]}\n                        >\n                            新 增\n                        </Button>\n                    </Col>\n                </Row>\n\n                <ServerInfoModal\n                    formRef={this.formRef}\n                    server_info_modal_visible={\n                        this.state.server_info_modal_visible\n                    }\n                    handlePostServerInfoSubmit={this.handlePostServerInfoSubmit}\n                    handlePostServerInfoCancel={this.handlePostServerInfoCancel}\n                />\n\n                {/*完善信息组件*/}\n                <ExtraInfoModal\n                    editData={this.state.extraInfoData}\n                    resType=\"ecs\"\n                    updateMode={this.state.updateMode}\n                    resFrom={this.state.resFrom}\n                    visible={this.state.extraInfoModalVisible}\n                    handleOk={this.handleExtraInfoOk}\n                    handleCancel={this.handleExtraInfoCancel}\n                />\n\n                {/*云服务器列表*/}\n                <Drawer\n                    title=\"服务器详情及监控数据\"\n                    placement={this.state.drawerPlacement}\n                    closable={true}\n                    destroyOnClose={true}\n                    onClose={this.onCloseDrawer}\n                    visible={this.state.drawerVisible}\n                    width={950}\n                >\n                    <Tabs\n                        defaultActiveKey=\"1\"\n                        tabPosition=\"left\"\n                        style={{ marginLeft: -30 }}\n                        onChange={this.detailTabChange.bind(this)}\n                    >\n                        <TabPane tab=\"监控详情\" key=\"1\">\n                            <Spin\n                                tip=\"图表生成中...\"\n                                spinning={this.state.chartLoading}\n                            >\n                                <Row style={{ marginBottom: \"10px\" }}>\n                                    <Col\n                                        span={3}\n                                        style={{ lineHeight: \"30px\" }}\n                                    >\n                                        时间维度：\n                                    </Col>\n                                    <Col span={15}>\n                                        <Radio.Group\n                                            value={this.state.timeTagValue}\n                                            onChange={this.handleTimeTagChange}\n                                        >\n                                            <Radio.Button value=\"1h\">\n                                                1小时\n                                            </Radio.Button>\n                                            <Radio.Button value=\"6h\">\n                                                6小时\n                                            </Radio.Button>\n                                            <Radio.Button value=\"12h\">\n                                                12小时\n                                            </Radio.Button>\n                                            <Radio.Button value=\"1d\">\n                                                1 天\n                                            </Radio.Button>\n                                            <Radio.Button value=\"3d\">\n                                                3 天\n                                            </Radio.Button>\n                                            <Radio.Button value=\"7d\">\n                                                7 天\n                                            </Radio.Button>\n                                            <Radio.Button value=\"14d\">\n                                                14 天\n                                            </Radio.Button>\n                                        </Radio.Group>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col\n                                        span={3}\n                                        style={{ lineHeight: \"30px\" }}\n                                    >\n                                        监控维度：\n                                    </Col>\n                                    <Col span={16}>\n                                        <Radio.Group\n                                            value={this.state.metricTagValue}\n                                            onChange={\n                                                this.handleMetricTagChange\n                                            }\n                                        >\n                                            <Radio.Button value=\"CPUUtilization\">\n                                                cpu使用率\n                                            </Radio.Button>\n                                            <Radio.Button value=\"memory_usedutilization\">\n                                                内存使用率\n                                            </Radio.Button>\n                                            <Radio.Button value=\"diskusage_utilization\">\n                                                磁盘使用率\n                                            </Radio.Button>\n                                            <Radio.Button value=\"cpu_total\">\n                                                平均负载\n                                            </Radio.Button>\n                                        </Radio.Group>\n                                    </Col>\n                                </Row>\n                                <Row style={{ marginTop: 20 }}>\n                                    <Col>\n                                        <LineChart\n                                            width={800}\n                                            height={400}\n                                            data={this.state.chartData}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"信息详情\" key=\"2\">\n                            <Spin\n                                tip=\"数据获取中...\"\n                                spinning={this.state.serverDetailLoading}\n                            >\n                                <Descriptions\n                                    title=\"基本信息\"\n                                    bordered\n                                    size=\"small\"\n                                    column={2}\n                                >\n                                    <Descriptions.Item label=\"主机名\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .HostName\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"机器描述\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .Description\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"实例ID\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InstanceId\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"内网IP\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InnerIpAddress\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"外网IP\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .PublicIpAddress\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"私有IP\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .PrivateIpAddress\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"Cpu\">\n                                        {this.state.currentServerDetail.Cpu}核\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"内存\">\n                                        {this.state.currentServerDetail.Memory /\n                                            1024}\n                                        G\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"公网入带宽\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InternetMaxBandwidthIn\n                                        }\n                                        Mbps\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"公网出带宽\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InternetMaxBandwidthOut\n                                        }\n                                        Mbps\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"网络计费\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InternetChargeType\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"创建时间\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .CreationTime\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"过期时间\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .ExpiredTime\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"镜像ID\">\n                                        {this.state.currentServerDetail.ImageId}\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"付费类型\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InstanceChargeType\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"网络类型\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InstanceNetworkType\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"实例类型\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InstanceType\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"系统名称\">\n                                        {this.state.currentServerDetail.OSName}\n                                    </Descriptions.Item>\n                                </Descriptions>\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"终端\" key=\"3\">\n                            <div id=\"server_terminal\" />\n                        </TabPane>\n                    </Tabs>\n                </Drawer>\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default ServerContent;\n","import React, { Component } from \"react\";\nimport {\n    Layout,\n    Table,\n    Button,\n    Drawer,\n    Tabs,\n    Row,\n    Col,\n    message,\n    Radio,\n    Divider,\n    Spin,\n    DatePicker,\n    Input,\n    Descriptions,\n    Modal,\n    Form,\n    Select,\n    InputNumber,\n    Typography,\n    Popconfirm,\n    Badge,\n    Tooltip,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteCloudRds,\n    getCloudAccouts,\n    getCloudMonitorRds,\n    getCloudRds,\n    getCloudRdsDetail,\n    postCloudRds,\n    putCloudRds,\n} from \"../../api/cloud\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport \"../../assets/css/main.css\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\nimport LineChart from \"./common/line_chart\";\n\nconst { Text, Paragraph } = Typography;\nconst { Option } = Select;\nconst { Content } = Layout;\nconst TabPane = Tabs.TabPane;\n\nclass RdsInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cloudAccountList: [],\n        };\n    }\n\n    componentDidMount() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n\n        return (\n            <Modal\n                title=\"数据库信息\"\n                destroyOnClose={true}\n                visible={this.props.rds_info_modal_visible}\n                onOk={this.props.handlePostRdsInfoSubmit}\n                onCancel={this.props.handlePostRdsInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                width={600}\n            >\n                <Form\n                    ref={this.props.formRef}\n                    initialValues={{ engine: \"Mysql\" }}\n                >\n                    <Form.Item\n                        label=\"云账号\"\n                        {...formItemLayout}\n                        name=\"cloudAccountId\"\n                        rules={[\n                            { required: true, message: \"云账号不能为空！\" },\n                        ]}\n                    >\n                        <Select>{accountOptions}</Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例Id\"\n                        {...formItemLayout}\n                        name=\"dbInstanceId\"\n                        rules={[\n                            { required: true, message: \"实例Id不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例描述\"\n                        {...formItemLayout}\n                        name=\"dbInstanceDescription\"\n                        rules={[\n                            { required: true, message: \"实例描述不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"数据库类型\"\n                        {...formItemLayout}\n                        name=\"engine\"\n                        rules={[\n                            { required: true, message: \"数据库类型不能为空！\" },\n                        ]}\n                    >\n                        <Select>\n                            <Option value=\"Mysql\">Mysql</Option>\n                            <Option value=\"SqlServer\">SqlServer</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"连接串\"\n                        {...formItemLayout}\n                        name=\"connectionString\"\n                        rules={[{ required: true, message: \"请输入连接串！\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"端口\"\n                        {...formItemLayout}\n                        name=\"port\"\n                        rules={[{ required: true, message: \"请输入端口！\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"内存(G)\"\n                        {...formItemLayout}\n                        name=\"dbInstanceMemory\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"磁盘(G)\"\n                        {...formItemLayout}\n                        name=\"dbInstanceStorage\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"创建时间\"\n                        {...formItemLayout}\n                        name=\"createTime\"\n                        rules={[\n                            { required: true, message: \"创建时间不能为空！\" },\n                        ]}\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"过期时间\"\n                        {...formItemLayout}\n                        name=\"expireTime\"\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nclass RdsContent extends Component {\n    constructor(props) {\n        super(props);\n        this.handlePostRdsInfoSubmit = this.handlePostRdsInfoSubmit.bind(this);\n        this.handlePostRdsInfoCancel = this.handlePostRdsInfoCancel.bind(this);\n        this.handleExtraInfoOk = this.handleExtraInfoOk.bind(this);\n        this.handleExtraInfoCancel = this.handleExtraInfoCancel.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 200 : 100;\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例id\",\n                    dataIndex: \"DBInstanceId\",\n                    key: \"DBInstanceId\",\n                    width: 200,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例描述\",\n                    dataIndex: \"DBInstanceDescription\",\n                    key: \"DBInstanceDescription\",\n                    width: 250,\n                    render: (value, record) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text\n                                    ellipsis={true}\n                                    style={{ width: \"200px\" }}\n                                >\n                                    {value}\n                                </Text>\n                            </Tooltip>\n                        );\n                    },\n                },\n                {\n                    title: \"云账号\",\n                    dataIndex: \"CloudAccountName\",\n                    key: \"CloudAccountName\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"数据库类型\",\n                    dataIndex: \"Engine\",\n                    key: \"Engine\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例类型\",\n                    dataIndex: \"DBInstanceType\",\n                    key: \"DBInstanceType\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"连接串\",\n                    dataIndex: \"ConnectionString\",\n                    key: \"ConnectionString\",\n                    width: 400,\n                    render: (value) => {\n                        return (\n                            <Paragraph\n                                style={{ marginBottom: 0, fontSize: 13 }}\n                                copyable\n                            >\n                                {value}\n                            </Paragraph>\n                        );\n                    },\n                },\n                {\n                    title: \"端口\",\n                    dataIndex: \"Port\",\n                    key: \"Port\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"配置\",\n                    dataIndex: \"配置\",\n                    key: \"配置\",\n                    width: 150,\n                    render: (value, record) => {\n                        let memoryContent = (\n                            <Paragraph\n                                style={{ marginBottom: 0, display: \"inline\" }}\n                            >\n                                内存: {record.DBInstanceMemory / 1024}G,{\" \"}\n                            </Paragraph>\n                        );\n                        let diskContent = (\n                            <Paragraph\n                                style={{ marginBottom: 0, display: \"inline\" }}\n                            >\n                                磁盘: {record.DBInstanceStorage}G\n                            </Paragraph>\n                        );\n                        return (\n                            <div className=\"ip_column\">\n                                {memoryContent}\n                                {diskContent}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"过期时间\",\n                    dataIndex: \"ExpireTime\",\n                    key: \"ExpireTime\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例状态\",\n                    dataIndex: \"DBInstanceStatus\",\n                    key: \"DBInstanceStatus\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        if (value === \"Running\") {\n                            return <Badge status=\"processing\" />;\n                        } else {\n                            return <Badge status=\"error\" />;\n                        }\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: { operWidth },\n                    align: \"center\",\n\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    onClick={this.openMonitorDrawer.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    监控\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.rdsEdit.bind(this, record)}\n                                    disabled={!this.props.aclAuthMap[\"PUT:/cloud/rds\"]}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.rdsDelete.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                    disabled={!this.props.aclAuthMap[\"DELETE:/cloud/rds\"]}\n                                >\n                                    <Button type=\"danger\" size=\"small\" disabled={!this.props.aclAuthMap[\"DELETE:/cloud/rds\"]}>\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            extraInfoModalVisible: false,\n            tableLoading: false,\n            tableData: [],\n            chartData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            drawerVisible: false,\n            drawerPlacement: \"left\",\n            instanceId: \"\",\n            timeTagValue: \"1h\",\n            metricTagValue: \"CpuUsage\",\n            chartFormat: \"%\",\n            currentServerDetail: {},\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            cloudAccountList: [],\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n            extraInfoData: {},\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    }\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    rdsEdit(data) {\n        getCloudRdsDetail(data.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                } else {\n                    this.setState({\n                        extraInfoModalVisible: true,\n                        rdsId: data.ID,\n                        updateMode: \"single\",\n                        resFrom:\n                            data[\"DataStatus\"] === 1 ? \"阿里云\" : \"手动添加\",\n                        extraInfoData: {\n                            dbInstanceDescription:\n                                res.data[\"DBInstanceDescription\"],\n                            dbMemory: (\n                                res.data[\"DBInstanceMemory\"] / 1024\n                            ).toString(),\n                            dbInstanceStorage: res.data[\n                                \"DBInstanceStorage\"\n                            ].toString(),\n                            dbExpiredTime:\n                                res.data[\"ExpireTime\"] !== \"\"\n                                    ? moment(res.data[\"ExpireTime\"])\n                                    : \"\",\n                            resForm:\n                                res.data[\"DataStatus\"] === 1\n                                    ? \"阿里云\"\n                                    : \"手动添加\",\n                        },\n                    });\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if (this.state.updateMode === \"single\") {\n            targetId = String(this.state.rdsId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudRds({\n            ...data,\n            id: targetId,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"修改成功\");\n                    this.setState({\n                        extraInfoModalVisible: false,\n                        selectedRowKeys: [],\n                    });\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({ extraInfoModalVisible: false });\n    }\n\n    rdsDelete(data) {\n        deleteCloudRds(data.ID)\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            queryExpiredTime:\n                this.state.queryExpiredTime === null\n                    ? null\n                    : this.state.queryExpiredTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            queryKeyword: this.state.queryKeyword,\n            queryCloudAccount: this.state.queryCloudAccount,\n        };\n        getCloudRds(queryParams)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"rds\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"ID\"],\n                        ID: data[i][\"ID\"],\n                        DBInstanceId: data[i][\"DBInstanceId\"],\n                        DBInstanceDescription: data[i][\"DBInstanceDescription\"],\n                        DBInstanceType: data[i][\"DBInstanceType\"],\n                        Engine: data[i][\"Engine\"],\n                        ExpireTime: moment(data[i][\"ExpireTime\"]).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                        DBInstanceStatus: data[i][\"DBInstanceStatus\"],\n                        ConnectionString: data[i][\"ConnectionString\"],\n                        Port: data[i][\"Port\"],\n                        DBInstanceMemory: data[i][\"DBInstanceMemory\"],\n                        DBInstanceStorage: data[i][\"DBInstanceStorage\"],\n                        CloudAccountName: data[i][\"CloudAccountName\"],\n                        DataStatus: data[i][\"DataStatus\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState(\n            {\n                drawerVisible: true,\n                instanceId: data.DBInstanceId,\n                currentServerDetail: data,\n            },\n            () => {\n                this.refreshMonitorData(\n                    data.DBInstanceId,\n                    this.state.timeTagValue,\n                    this.state.metricTagValue,\n                );\n                this.refreshSeverDetail();\n            },\n        );\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({ chartLoading: true });\n        getCloudMonitorRds(instanceId, timeTagValue, metricTagValue)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                if (res[\"data\"][\"Datapoints\"] === \"\") {\n                    message.warn(\n                        \"未获取到监控数据，可能是非阿里云机器或其它原因！\",\n                    );\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                let dataPoints = JSON.parse(res[\"data\"][\"Datapoints\"]);\n                let chartData = [];\n                for (let i = 0; i < dataPoints.length; i++) {\n                    chartData.push({\n                        date: moment(dataPoints[i][\"timestamp\"]).format(\n                            \"DD日HH:mm\",\n                        ),\n                        value: dataPoints[i][\"Average\"],\n                    });\n                }\n                this.setState({ chartLoading: false, chartData: chartData });\n            })\n            .catch((err) => {\n                console.log(err.toLocaleString());\n            });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({ serverDetailLoading: true });\n        getCloudRdsDetail(this.state.currentServerDetail.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                }\n                this.setState({ currentServerDetail: res[\"data\"] }, () => {\n                    this.setState({ serverDetailLoading: false });\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onExpiredDateChange = (moment) => {\n        if (moment == null) {\n            this.setState({ queryExpiredTime: null });\n        } else {\n            this.setState({ queryExpiredTime: moment });\n        }\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({ queryKeyword: e.target.value });\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({ queryCloudAccount });\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false });\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(\n            this.state.instanceId,\n            e.target.value,\n            this.state.metricTagValue,\n        );\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"CpuUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"MemoryUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"ConnectionUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"DiskUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"IOPSUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"DataDelay\":\n                this.setState({ chartFormat: \"Count\" });\n                break;\n            default:\n                this.setState({ chartFormat: \"秒\" });\n                break;\n        }\n        this.refreshMonitorData(\n            this.state.instanceId,\n            this.state.timeTagValue,\n            e.target.value,\n        );\n    };\n\n    // 新增自定义rds信息\n    handleAdd = () => {\n        this.setState({ rds_info_modal_visible: true, rdsId: 0 });\n    };\n\n    handlePostRdsInfoSubmit() {\n        this.formRef.current.validateFields().then((values) => {\n            postCloudRds({\n                ...values,\n                createTime: values.createTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n                expireTime:\n                    values.expireTime === undefined\n                        ? undefined\n                        : values.expireTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\n                            \"添加成功，请到权限管理中增加访问权限！\",\n                        );\n                        this.setState({ rds_info_modal_visible: false });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handlePostRdsInfoCancel() {\n        this.setState({ rds_info_modal_visible: false });\n    }\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"云资源\", \"云数据库\", \"数据库列表\"]}\n                />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={3} className=\"col-span\">\n                        <DatePicker\n                            style={{ width: \"100%\" }}\n                            placeholder=\"到期截止时间\"\n                            defaultValue={this.state.queryExpiredTime}\n                            onChange={this.onExpiredDateChange}\n                        />\n                    </Col>\n                    <Col span={5} className=\"col-span\">\n                        <Input\n                            placeholder=\"输入实例id\\描述\\连接串查询\"\n                            value={this.state.queryKeyword}\n                            onChange={this.keywordOnChange}\n                        />\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Select\n                            defaultValue={this.state.queryCloudAccount}\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleCloudAccountChange}\n                        >\n                            <Option value=\"0\">所有云账号</Option>\n                            {accountOptions}\n                        </Select>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAdd}\n                            disabled={!this.props.aclAuthMap[\"POST:/cloud/rds\"]}\n                        >\n                            新 增\n                        </Button>\n                    </Col>\n                </Row>\n\n                <RdsInfoModal\n                    formRef={this.formRef}\n                    rds_info_modal_visible={this.state.rds_info_modal_visible}\n                    handlePostRdsInfoSubmit={this.handlePostRdsInfoSubmit}\n                    handlePostRdsInfoCancel={this.handlePostRdsInfoCancel}\n                />\n\n                {/*完善信息组件*/}\n                <ExtraInfoModal\n                    editData={this.state.extraInfoData}\n                    resType=\"rds\"\n                    updateMode={this.state.updateMode}\n                    resFrom={this.state.resFrom}\n                    visible={this.state.extraInfoModalVisible}\n                    handleOk={this.handleExtraInfoOk}\n                    handleCancel={this.handleExtraInfoCancel}\n                />\n\n                <div>\n                    <Drawer\n                        title=\"数据库详情及监控数据\"\n                        placement={this.state.drawerPlacement}\n                        closable={true}\n                        destroyOnClose={true}\n                        onClose={this.onCloseDrawer}\n                        visible={this.state.drawerVisible}\n                        width={950}\n                    >\n                        <Tabs\n                            defaultActiveKey=\"1\"\n                            tabPosition=\"left\"\n                            style={{ marginLeft: -30 }}\n                        >\n                            <TabPane tab=\"监控详情\" key=\"1\">\n                                <Spin\n                                    tip=\"图表生成中...\"\n                                    spinning={this.state.chartLoading}\n                                >\n                                    <Row style={{ marginBottom: \"10px\" }}>\n                                        <Col\n                                            span={3}\n                                            style={{ lineHeight: \"30px\" }}\n                                        >\n                                            时间维度：\n                                        </Col>\n                                        <Col span={15}>\n                                            <Radio.Group\n                                                value={this.state.timeTagValue}\n                                                onChange={\n                                                    this.handleTimeTagChange\n                                                }\n                                            >\n                                                <Radio.Button value=\"1h\">\n                                                    1小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"6h\">\n                                                    6小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"12h\">\n                                                    12小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"1d\">\n                                                    1 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"3d\">\n                                                    3 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"7d\">\n                                                    7 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"14d\">\n                                                    14 天\n                                                </Radio.Button>\n                                            </Radio.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col\n                                            span={3}\n                                            style={{ lineHeight: \"30px\" }}\n                                        >\n                                            监控维度：\n                                        </Col>\n                                        <Col span={16}>\n                                            <Radio.Group\n                                                value={\n                                                    this.state.metricTagValue\n                                                }\n                                                onChange={\n                                                    this.handleMetricTagChange\n                                                }\n                                            >\n                                                <Radio.Button value=\"CpuUsage\">\n                                                    cpu使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"MemoryUsage\">\n                                                    内存使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"ConnectionUsage\">\n                                                    连接数使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"DiskUsage\">\n                                                    磁盘使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"IOPSUsage\">\n                                                    IOPS使用率\n                                                </Radio.Button>\n                                                {/*<Radio.Button value=\"DataDelay\">*/}\n                                                {/*    只读实例延迟*/}\n                                                {/*</Radio.Button>*/}\n                                            </Radio.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row style={{ marginTop: 20 }}>\n                                        <Col>\n                                            <LineChart\n                                                width={800}\n                                                height={400}\n                                                data={this.state.chartData}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Spin>\n                            </TabPane>\n                            <TabPane tab=\"信息详情\" key=\"2\">\n                                <Spin\n                                    tip=\"数据获取中...\"\n                                    spinning={this.state.serverDetailLoading}\n                                >\n                                    <Descriptions\n                                        title=\"基本信息\"\n                                        bordered\n                                        size=\"small\"\n                                        column={2}\n                                    >\n                                        <Descriptions.Item label=\"实例ID\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceId\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例描述\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceDescription\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例状态\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceStatus\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"创建时间\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .CreateTime\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"过期时间\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .ExpireTime\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"连接串\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .ConnectionString\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"端口\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Port\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"数据库类型\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Engine\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"内存\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceMemory\n                                            }{\" \"}\n                                            M\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"磁盘\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceStorage\n                                            }{\" \"}\n                                            G\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例类型\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceType\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"数据库版本\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .EngineVersion\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例系列\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Category\n                                            }\n                                        </Descriptions.Item>\n                                    </Descriptions>\n                                </Spin>\n                            </TabPane>\n                        </Tabs>\n                    </Drawer>\n                    <Table\n                        columns={this.state.columns}\n                        dataSource={this.state.tableData}\n                        scroll={{ x: \"max-content\" }}\n                        pagination={this.state.pagination}\n                        loading={this.state.tableLoading}\n                        bordered\n                        size=\"small\"\n                    />\n                </div>\n            </Content>\n        );\n    }\n}\n\nexport default RdsContent;\n","import React, { Component } from \"react\";\nimport {\n    Layout,\n    Table,\n    Button,\n    Drawer,\n    Tabs,\n    Row,\n    Col,\n    message,\n    Radio,\n    Divider,\n    Spin,\n    DatePicker,\n    Input,\n    Descriptions,\n    Modal,\n    Form,\n    Select,\n    InputNumber,\n    Typography,\n    Popconfirm,\n    Badge,\n    Tooltip,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteCloudKv,\n    getCloudAccouts,\n    getCloudKv,\n    getCloudKvDetail,\n    getCloudMonitorKv,\n    postCloudKv,\n    putCloudKv,\n} from \"../../api/cloud\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\nimport LineChart from \"./common/line_chart\";\n\nconst { Text, Paragraph } = Typography;\nconst { Option } = Select;\nconst { Content } = Layout;\nconst TabPane = Tabs.TabPane;\n\nclass KvInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cloudAccountList: [],\n        };\n    }\n\n    componentDidMount() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n        return (\n            <Modal\n                title=\"Redis信息\"\n                destroyOnClose={true}\n                visible={this.props.kv_info_modal_visible}\n                onOk={this.props.handlePostKvInfoSubmit}\n                onCancel={this.props.handlePostKvInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                width={600}\n            >\n                <Form\n                    ref={this.props.formRef}\n                    initialValues={{ instanceType: \"Redis\" }}\n                >\n                    <Form.Item\n                        label=\"云账号\"\n                        {...formItemLayout}\n                        name=\"cloudAccountId\"\n                        rules={[\n                            { required: true, message: \"云账号不能为空！\" },\n                        ]}\n                    >\n                        <Select>{accountOptions}</Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例Id\"\n                        {...formItemLayout}\n                        name=\"instanceId\"\n                        rules={[\n                            { required: true, message: \"实例Id不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例名称\"\n                        {...formItemLayout}\n                        name=\"instanceName\"\n                        rules={[\n                            { required: true, message: \"实例名称不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例类型\"\n                        {...formItemLayout}\n                        name=\"instanceType\"\n                        rules={[\n                            { required: true, message: \"数据库类型不能为空！\" },\n                        ]}\n                    >\n                        <Select>\n                            <Option value=\"Redis\">Redis</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"连接串\"\n                        {...formItemLayout}\n                        name=\"connectionString\"\n                        rules={[{ required: true, message: \"请输入连接串！\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"端口\"\n                        {...formItemLayout}\n                        name=\"port\"\n                        rules={[{ required: true, message: \"请输入端口！\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"容量(G)\"\n                        {...formItemLayout}\n                        name=\"capacity\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"带宽(M)\"\n                        {...formItemLayout}\n                        name=\"bandwidth\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"创建时间\"\n                        {...formItemLayout}\n                        name=\"createTime\"\n                        rules={[\n                            { required: true, message: \"创建时间不能为空！\" },\n                        ]}\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"过期时间\"\n                        {...formItemLayout}\n                        name=\"endTime\"\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nclass KvContent extends Component {\n    constructor(props) {\n        super(props);\n        this.handlePostKvInfoSubmit = this.handlePostKvInfoSubmit.bind(this);\n        this.handlePostKvInfoCancel = this.handlePostKvInfoCancel.bind(this);\n        this.handleExtraInfoOk = this.handleExtraInfoOk.bind(this);\n        this.handleExtraInfoCancel = this.handleExtraInfoCancel.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 220 : 100;\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例id\",\n                    dataIndex: \"InstanceId\",\n                    key: \"InstanceId\",\n                    width: 200,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例名称\",\n                    dataIndex: \"InstanceName\",\n                    key: \"InstanceName\",\n                    width: 250,\n                    render: (value, record) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                    {value}\n                                </Text>\n                            </Tooltip>\n                        );\n                    },\n                },\n                {\n                    title: \"云账号\",\n                    dataIndex: \"CloudAccountName\",\n                    key: \"CloudAccountName\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例类型\",\n                    dataIndex: \"InstanceType\",\n                    key: \"InstanceType\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"连接串\",\n                    dataIndex: \"ConnectionDomain\",\n                    key: \"ConnectionDomain\",\n                    width: 400,\n                    render: (value) => {\n                        return (\n                            <Paragraph\n                                style={{ marginBottom: 0, fontSize: 13 }}\n                                copyable\n                            >\n                                {value}\n                            </Paragraph>\n                        );\n                    },\n                },\n                {\n                    title: \"带宽\",\n                    dataIndex: \"Bandwidth\",\n                    key: \"Bandwidth\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}MB/s</Text>;\n                    },\n                },\n                {\n                    title: \"连接数\",\n                    dataIndex: \"Connections\",\n                    key: \"Connections\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"容量\",\n                    dataIndex: \"Capacity\",\n                    key: \"Capacity\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value / 1024}G</Text>;\n                    },\n                },\n                {\n                    title: \"QPS\",\n                    dataIndex: \"QPS\",\n                    key: \"QPS\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"过期时间\",\n                    dataIndex: \"EndTime\",\n                    key: \"EndTime\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例状态\",\n                    dataIndex: \"InstanceStatus\",\n                    key: \"InstanceStatus\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        if (value === \"Normal\") {\n                            return <Badge status=\"processing\" />;\n                        } else {\n                            return <Badge status=\"error\" />;\n                        }\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: { operWidth },\n                    align: \"center\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    onClick={this.openMonitorDrawer.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    监控\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.kvEdit.bind(this, record)}\n                                    disabled={!this.props.aclAuthMap[\"PUT:/cloud/kv\"]}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.kvDelete.bind(this, record)}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                    disabled={!this.props.aclAuthMap[\"DELETE:/cloud/kv\"]}\n                                >\n                                    <Button type=\"danger\" size=\"small\" disabled={!this.props.aclAuthMap[\"DELETE:/cloud/kv\"]}>\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            extraInfoModalVisible: false,\n            tableLoading: false,\n            tableData: [],\n            chartData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            drawerVisible: false,\n            drawerPlacement: \"left\",\n            instanceId: \"\",\n            timeTagValue: \"1h\",\n            metricTagValue: \"StandardConnectionUsage\",\n            chartFormat: \"%\",\n            currentServerDetail: {},\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            cloudAccountList: [],\n            kv_info_modal_visible: false,\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n            extraInfoData: {},\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    }\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    kvEdit(data) {\n        getCloudKvDetail(data.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                } else {\n                    let renewStatus = false;\n                    if (res.data[\"RenewStatus\"] === 1) {\n                        renewStatus = true;\n                    }\n                    let extraInfoData = {\n                        renewStatus: renewStatus,\n                        renewSiteId: parseInt(res.data[\"RenewSiteId\"])\n                            ? parseInt(res.data[\"RenewSiteId\"])\n                            : null,\n                        bankAccount: parseInt(res.data[\"BankAccount\"])\n                            ? parseInt(res.data[\"BankAccount\"])\n                            : null,\n                        manageUser: parseInt(res.data[\"ManageUser\"])\n                            ? parseInt(res.data[\"ManageUser\"])\n                            : null,\n                        cost: res.data[\"Cost\"] ? res.data[\"Cost\"] : \"0\",\n                        costType: res.data[\"CostType\"]\n                            ? res.data[\"CostType\"]\n                            : \"元/月\",\n\n                        kvInstanceName: res.data[\"InstanceName\"],\n                        kvBandwidth: res.data[\"Bandwidth\"].toString(),\n                        kvCapacity: (res.data[\"Capacity\"] / 1024).toString(),\n                        kvExpiredTime:\n                            res.data[\"EndTime\"] !== \"\"\n                                ? moment(res.data[\"EndTime\"])\n                                : \"\",\n                        resForm:\n                            res.data[\"DataStatus\"] === 1\n                                ? \"阿里云\"\n                                : \"手动添加\",\n                    };\n                    this.setState({\n                        extraInfoModalVisible: true,\n                        kvId: data.ID,\n                        updateMode: \"single\",\n                        resFrom:\n                            data[\"DataStatus\"] === 1 ? \"阿里云\" : \"手动添加\",\n                        extraInfoData: extraInfoData,\n                    });\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if (this.state.updateMode === \"single\") {\n            targetId = String(this.state.kvId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudKv({\n            ...data,\n            id: targetId,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"修改成功\");\n                    this.setState({\n                        extraInfoModalVisible: false,\n                        selectedRowKeys: [],\n                    });\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({ extraInfoModalVisible: false });\n    }\n\n    kvDelete(data) {\n        deleteCloudKv(data.ID)\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            queryExpiredTime:\n                this.state.queryExpiredTime === null\n                    ? null\n                    : this.state.queryExpiredTime.format(\"YYYY-YY-DD HH:mm:ss\"),\n            queryKeyword: this.state.queryKeyword,\n            queryCloudAccount: this.state.queryCloudAccount,\n        };\n        getCloudKv(queryParams)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"kv\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"ID\"],\n                        ID: data[i][\"ID\"],\n                        InstanceId: data[i][\"InstanceId\"],\n                        InstanceName: data[i][\"InstanceName\"],\n                        InstanceType: data[i][\"InstanceType\"],\n                        ConnectionDomain: data[i][\"ConnectionDomain\"],\n                        EndTime: moment(data[i][\"EndTime\"]).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                        InstanceStatus: data[i][\"InstanceStatus\"],\n                        Capacity: data[i][\"Capacity\"],\n                        QPS: data[i][\"QPS\"],\n                        Bandwidth: data[i][\"Bandwidth\"],\n                        Connections: data[i][\"Connections\"],\n                        CloudAccountName: data[i][\"CloudAccountName\"],\n                        DataStatus: data[i][\"DataStatus\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState(\n            {\n                drawerVisible: true,\n                instanceId: data.InstanceId,\n                currentServerDetail: data,\n            },\n            () => {\n                this.refreshMonitorData(\n                    data.InstanceId,\n                    this.state.timeTagValue,\n                    this.state.metricTagValue,\n                );\n                this.refreshSeverDetail();\n            },\n        );\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({ chartLoading: true });\n        getCloudMonitorKv(instanceId, timeTagValue, metricTagValue)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                if (res[\"data\"][\"Datapoints\"] === \"\") {\n                    message.warn(\n                        \"未获取到监控数据，可能是非阿里云机器或其它原因！\",\n                    );\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                let dataPoints = JSON.parse(res[\"data\"][\"Datapoints\"]);\n                let chartData = [];\n                for (let i = 0; i < dataPoints.length; i++) {\n                    chartData.push({\n                        date: moment(dataPoints[i][\"timestamp\"]).format(\n                            \"DD日HH:mm\",\n                        ),\n                        value: dataPoints[i][\"Average\"],\n                    });\n                }\n                this.setState({ chartLoading: false, chartData: chartData });\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({ serverDetailLoading: true });\n        getCloudKvDetail(this.state.currentServerDetail.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                }\n                this.setState({ currentServerDetail: res[\"data\"] }, () => {\n                    this.setState({ serverDetailLoading: false });\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onExpiredDateChange = (moment) => {\n        if (moment == null) {\n            this.setState({ queryExpiredTime: null });\n        } else {\n            this.setState({ queryExpiredTime: moment });\n        }\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({ queryKeyword: e.target.value });\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({ queryCloudAccount });\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                console.log(this.state.pagination.page);\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false });\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(\n            this.state.instanceId,\n            e.target.value,\n            this.state.metricTagValue,\n        );\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"StandardConnectionUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"StandardCpuUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"StandardAvgRt\":\n                this.setState({ chartFormat: \"us\" });\n                break;\n            case \"Standardappend\":\n                this.setState({ chartFormat: \"Count/Second\" });\n                break;\n            default:\n                this.setState({ chartFormat: \"\" });\n                break;\n        }\n        this.refreshMonitorData(\n            this.state.instanceId,\n            this.state.timeTagValue,\n            e.target.value,\n        );\n    };\n\n    // 新增自定义redis信息\n    handleAdd = () => {\n        this.setState({ kv_info_modal_visible: true, kvId: 0 });\n    };\n\n    handlePostKvInfoSubmit() {\n        this.formRef.current.validateFields().then((values) => {\n            postCloudKv({\n                ...values,\n                createTime: values.createTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n                endTime:\n                    values.endTime === undefined\n                        ? undefined\n                        : values.endTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\n                            \"添加成功，请到权限管理中增加访问权限！\",\n                        );\n                        this.setState({ kv_info_modal_visible: false });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handlePostKvInfoCancel() {\n        this.setState({ kv_info_modal_visible: false });\n    }\n\n    handleBatchUpdate = () => {\n        const idList = this.state.selectedRowKeys;\n        if (idList.length === 0) {\n            message.warn(\"请先选择数据\");\n            return;\n        }\n        this.setState({\n            extraInfoModalVisible: true,\n            updateMode: \"batch\",\n            idsList: idList,\n        });\n    };\n\n    onSelectChange = (selectedRowKeys) => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"云资源\", \"KV存储\", \"KV列表\"]} />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={3} className=\"col-span\">\n                        <DatePicker\n                            style={{ width: \"100%\" }}\n                            placeholder=\"到期截止时间\"\n                            defaultValue={this.state.queryExpiredTime}\n                            onChange={this.onExpiredDateChange}\n                        />\n                    </Col>\n                    <Col span={5} className=\"col-span\">\n                        <Input\n                            placeholder=\"输入实例id\\名称\\连接串查询\"\n                            value={this.state.queryKeyword}\n                            onChange={this.keywordOnChange}\n                        />\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Select\n                            defaultValue={this.state.queryCloudAccount}\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleCloudAccountChange}\n                        >\n                            <Option value=\"0\">所有云账号</Option>\n                            {accountOptions}\n                        </Select>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAdd}\n                            disabled={!this.props.aclAuthMap[\"POST:/cloud/kv\"]}\n                        >\n                            新 增\n                        </Button>\n                    </Col>\n                </Row>\n\n                <KvInfoModal\n                    formRef={this.formRef}\n                    kv_info_modal_visible={this.state.kv_info_modal_visible}\n                    handlePostKvInfoSubmit={this.handlePostKvInfoSubmit}\n                    handlePostKvInfoCancel={this.handlePostKvInfoCancel}\n                />\n\n                {/*完善信息组件*/}\n                <ExtraInfoModal\n                    editData={this.state.extraInfoData}\n                    resType=\"kv\"\n                    updateMode={this.state.updateMode}\n                    resFrom={this.state.resFrom}\n                    visible={this.state.extraInfoModalVisible}\n                    handleOk={this.handleExtraInfoOk}\n                    handleCancel={this.handleExtraInfoCancel}\n                />\n\n                <div>\n                    <Drawer\n                        title=\"实例详情及监控数据\"\n                        placement={this.state.drawerPlacement}\n                        closable={true}\n                        destroyOnClose={true}\n                        onClose={this.onCloseDrawer}\n                        visible={this.state.drawerVisible}\n                        width={950}\n                    >\n                        <Tabs\n                            defaultActiveKey=\"1\"\n                            tabPosition=\"left\"\n                            style={{ marginLeft: -30 }}\n                        >\n                            <TabPane tab=\"监控详情\" key=\"1\">\n                                <Spin\n                                    tip=\"图表生成中...\"\n                                    spinning={this.state.chartLoading}\n                                >\n                                    <Row style={{ marginBottom: \"10px\" }}>\n                                        <Col\n                                            span={3}\n                                            style={{ lineHeight: \"30px\" }}\n                                        >\n                                            时间维度：\n                                        </Col>\n                                        <Col span={15}>\n                                            <Radio.Group\n                                                value={this.state.timeTagValue}\n                                                onChange={\n                                                    this.handleTimeTagChange\n                                                }\n                                            >\n                                                <Radio.Button value=\"1h\">\n                                                    1小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"6h\">\n                                                    6小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"12h\">\n                                                    12小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"1d\">\n                                                    1 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"3d\">\n                                                    3 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"7d\">\n                                                    7 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"14d\">\n                                                    14 天\n                                                </Radio.Button>\n                                            </Radio.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col\n                                            span={3}\n                                            style={{ lineHeight: \"30px\" }}\n                                        >\n                                            监控维度：\n                                        </Col>\n                                        <Col span={16}>\n                                            <Radio.Group\n                                                value={\n                                                    this.state.metricTagValue\n                                                }\n                                                onChange={\n                                                    this.handleMetricTagChange\n                                                }\n                                            >\n                                                <Radio.Button value=\"StandardConnectionUsage\">\n                                                    连接数使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"StandardCpuUsage\">\n                                                    CPU 使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"StandardAvgRt\">\n                                                    平均响应时间\n                                                </Radio.Button>\n                                                {/*<Radio.Button value=\"Standardappend\">*/}\n                                                {/*    append 命令的执行频率*/}\n                                                {/*</Radio.Button>*/}\n                                            </Radio.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row style={{ marginTop: 20 }}>\n                                        <Col>\n                                            <LineChart\n                                                width={800}\n                                                height={400}\n                                                data={this.state.chartData}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Spin>\n                            </TabPane>\n                            <TabPane tab=\"信息详情\" key=\"2\">\n                                <Spin\n                                    tip=\"数据获取中...\"\n                                    spinning={this.state.serverDetailLoading}\n                                >\n                                    <Descriptions\n                                        title=\"基本信息\"\n                                        bordered\n                                        size=\"small\"\n                                        column={2}\n                                    >\n                                        <Descriptions.Item label=\"实例ID\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .InstanceId\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例名称\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .InstanceName\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例类型\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .InstanceType\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"架构类型\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .ArchitectureType\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例带宽\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Bandwidth\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例容量\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Capacity\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"带宽\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Bandwidth\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"连接地址\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .ConnectionDomain\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"端口\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Port\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"私有IP\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .PrivateIp\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"连接数限制\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Connections\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"创建时间\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .CreateTime\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"过期时间\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .EndTime\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"QPS\">\n                                            {this.state.currentServerDetail.QPS}\n                                        </Descriptions.Item>\n                                    </Descriptions>\n                                </Spin>\n                            </TabPane>\n                        </Tabs>\n                    </Drawer>\n                    <Table\n                        columns={this.state.columns}\n                        dataSource={this.state.tableData}\n                        scroll={{ x: \"max-content\" }}\n                        pagination={this.state.pagination}\n                        loading={this.state.tableLoading}\n                        bordered\n                        size=\"small\"\n                    />\n                </div>\n            </Content>\n        );\n    }\n}\n\nexport default KvContent;\n","import React, { Component } from 'react';\nimport {\n    Layout,\n    Table,\n    Button,\n    Drawer,\n    Tabs,\n    Row,\n    Col,\n    message,\n    Radio,\n    Divider,\n    Spin,\n    Input, Descriptions, Typography, Popconfirm, Select, Badge, Tooltip\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    getCloudSlbDetail,\n    getCloudSlb,\n    getCloudMonitorSlb,\n    deleteCloudSlb,\n    getCloudAccouts,\n} from \"../../api/cloud\";\nimport LineChart from \"./common/line_chart\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\nconst { Option } = Select;\nconst TabPane = Tabs.TabPane;\n\nclass SlbContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.changePage = this.changePage.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 200 : 100;\n        this.state = {\n            columns: [\n                {\n                    title: 'Id', dataIndex: 'ID', key: 'ID',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例id', dataIndex: 'LoadBalancerId', key: 'LoadBalancerId',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例名称', dataIndex: 'LoadBalancerName', key: 'LoadBalancerName',\n                    render: (value, record) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true} style={{ width: '100%' }}>{value}</Text>\n                            </Tooltip>\n                        )\n                    }\n                },\n                {\n                    title: '云账号', dataIndex: 'CloudAccountName', key: 'CloudAccountName', \n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '服务地址', dataIndex: 'Address', key: 'Address', width: 200,\n                    render: value => {\n                        return (\n                            <Paragraph style={{marginBottom: 0}} copyable>{value}</Paragraph>\n                        );\n                    }\n                },\n                {\n                    title: '计费方式', dataIndex: 'InternetChargeType', key: 'InternetChargeType',\n                    render: value => {\n                        if(value===\"4\"){\n                            value = \"按流量计费\"\n                        } else {\n                            value = \"按带宽计费\"\n                        }\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '创建时间', dataIndex: 'CreateTime', key: 'CreateTime',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例状态', dataIndex: 'LoadBalancerStatus', key: 'LoadBalancerStatus', align: \"center\",\n                    render: value => {\n                        if(value===\"active\") {\n                            return <Badge status=\"processing\" />;\n                        } else {\n                            return <Badge status=\"error\" />;\n                        }\n                    }\n                },\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    align: 'center',\n                    width: {operWidth},\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button type=\"primary\" size=\"small\" onClick={this.openMonitorDrawer.bind(this, record)}>监控</Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.slbDelete.bind(this, record)}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                    disabled={!this.props.aclAuthMap[\"DELETE:/cloud/slb\"]}\n                                >\n                                    <Button type=\"danger\" size=\"small\" disabled={!this.props.aclAuthMap[\"DELETE:/cloud/slb\"]}>删除</Button>\n                                </Popconfirm>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            tableLoading: false,\n            tableData: [],\n            chartData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: (current, size) => this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            extraInfoModalVisible: false,\n            drawerVisible: false,\n            drawerPlacement: 'left',\n            cloudAccountList: [],\n            slbId: 0,\n            instanceId: \"\",\n            timeTagValue: '1h',\n            metricTagValue: 'ActiveConnection',\n            chartFormat: 'Count',\n            currentServerDetail: {},\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n        }\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n          ...this.state.pagination,\n          page: 1,\n          current: 1,\n          pageSize: size,\n        };\n        this.setState(\n          {\n            pagination: pagination,\n          },\n          () => {\n            this.refreshTableData();\n          }\n        );\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    };\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                that.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    // 用户自定义内容修改\n    userDefineEdit(data) {\n        this.userDefineInfoFormRef.props.form.setFieldsValue({\n            \"userRemark\": data.UserRemark,\n            \"userDefineGroup\": data.UserDefineGroup,\n        });\n        this.setState({\n            slbId: data.ID,\n            userDefineInfoModalVisible: true,\n        });\n    }\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        const queryParams = {\n            \"page\": this.state.pagination.page,\n            \"size\": this.state.pagination.pageSize,\n            \"queryKeyword\": this.state.queryKeyword,\n            \"queryCloudAccount\": this.state.queryCloudAccount,\n        };\n        getCloudSlb(queryParams).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['slb'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    key: data[i]['ID'],\n                    ID: data[i]['ID'],\n                    LoadBalancerId: data[i]['LoadBalancerId'],\n                    LoadBalancerName: data[i]['LoadBalancerName'],\n                    Address: data[i]['Address'],\n                    InternetChargeType: data[i]['InternetChargeType'],\n                    CreateTime: moment(data[i]['CreateTime']).format(\"YYYY-MM-DD\"),\n                    LoadBalancerStatus: data[i]['LoadBalancerStatus'],\n                    CloudAccountName: data[i]['CloudAccountName'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            message.error(err)\n        });\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState({ drawerVisible: true, instanceId: data.LoadBalancerId, currentServerDetail: data }, ()=>{\n            this.refreshMonitorData(data.LoadBalancerId, this.state.timeTagValue, this.state.metricTagValue);\n            this.refreshSeverDetail();\n        });\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({chartLoading: true});\n        getCloudMonitorSlb(instanceId, timeTagValue, metricTagValue).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n                this.setState({chartLoading: false});\n                return;\n            }\n            if(res['data']['Datapoints']===\"\"){\n                message.warn(\"未获取到监控数据，可能是非阿里云机器或其它原因！\");\n                this.setState({chartLoading: false});\n                return;\n            }\n            let dataPoints = JSON.parse(res['data']['Datapoints']);\n            let chartData = [];\n            for(let i=0; i<dataPoints.length; i++){\n                chartData.push({\n                    \"date\": moment(dataPoints[i][\"timestamp\"]).format(\"DD日HH:mm\"),\n                    \"value\": dataPoints[i][\"Average\"],\n                });\n            }\n            this.setState({chartLoading: false, chartData: chartData});\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({serverDetailLoading: true});\n        getCloudSlbDetail(this.state.currentServerDetail.ID).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n            }\n            this.setState({currentServerDetail: res['data']}, ()=> {\n                this.setState({serverDetailLoading: false});\n            });\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n          {\n            pagination: {\n              ...this.state.pagination,\n              page: page,\n              current: page,\n              pageSize: pageSize,\n            },\n          },\n          () => {\n            this.refreshTableData();\n          }\n        );\n    };\n\n    slbDelete(data) {\n        deleteCloudSlb(data.ID).then((res)=>{\n            if(res.code===0){\n                message.success(\"删除成功\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    keywordOnChange = (e) => {\n        this.setState({queryKeyword: e.target.value});\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({queryCloudAccount});\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false })\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(this.state.instanceId, e.target.value, this.state.metricTagValue);\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"ActiveConnection\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            case \"MaxConnection\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            case \"HeathyServerCount\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            case \"UnhealthyServerCount\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            default:\n                this.setState({chartFormat: \"\"});\n                break;\n        }\n        this.refreshMonitorData(this.state.instanceId, this.state.timeTagValue, e.target.value);\n    };\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item)=>{\n            return (\n                <Option key={item.id} value={item.id}>{item.accountName}</Option>\n            );\n        });\n        return (\n          <Content style={{\n              background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\",\n          }}>\n              <OpsBreadcrumbPath pathData={[\"云资源\", \"负载均衡\", \"负载均衡列表\"]} />\n              <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                  <Col span={6} className=\"col-span\">\n                      <Input style={{ width: \"100%\" }} placeholder=\"输入实例id\\名称\\服务地址查询\" value={this.state.queryKeyword} onChange={this.keywordOnChange} />\n                  </Col>\n                  <Col span={4} className=\"col-span\">\n                      <Select defaultValue={this.state.queryCloudAccount} style={{ width: \"100%\" }} onChange={this.handleCloudAccountChange}>\n                          <Option value=\"0\">所有云账号</Option>\n                          {accountOptions}\n                      </Select>\n                  </Col>\n                  <Col span={2} className=\"col-span\">\n                      <Button style={{ width: \"100%\" }} type=\"primary\" icon={<SearchOutlined />} onClick={this.handleQuery} >查 询</Button>\n                  </Col>\n              </Row>\n\n              <div>\n                  <Drawer\n                      title=\"实例详情及监控数据\"\n                      placement={this.state.drawerPlacement}\n                      closable={true}\n                      destroyOnClose={true}\n                      onClose={this.onCloseDrawer}\n                      visible={this.state.drawerVisible}\n                      width={950}\n                  >\n                      <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" style={{ marginLeft: -30 }}>\n                          <TabPane tab=\"监控详情\" key=\"1\">\n                              <Spin tip=\"图表生成中...\" spinning={this.state.chartLoading}>\n                                  <Row style={{ marginBottom: \"10px\" }}>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>时间维度：</Col>\n                                      <Col span={15}>\n                                          <Radio.Group value={this.state.timeTagValue} onChange={this.handleTimeTagChange}>\n                                              <Radio.Button value=\"1h\">1小时</Radio.Button>\n                                              <Radio.Button value=\"6h\">6小时</Radio.Button>\n                                              <Radio.Button value=\"12h\">12小时</Radio.Button>\n                                              <Radio.Button value=\"1d\">1 天</Radio.Button>\n                                              <Radio.Button value=\"3d\">3 天</Radio.Button>\n                                              <Radio.Button value=\"7d\">7 天</Radio.Button>\n                                              <Radio.Button value=\"14d\">14 天</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>监控维度：</Col>\n                                      <Col span={16}>\n                                          <Radio.Group value={this.state.metricTagValue} onChange={this.handleMetricTagChange}>\n                                              <Radio.Button value=\"ActiveConnection\">端口当前活跃连接数</Radio.Button>\n                                              <Radio.Button value=\"MaxConnection\">端口当前并发连接数</Radio.Button>\n                                              <Radio.Button value=\"HeathyServerCount\">后端健康ECS实例个数</Radio.Button>\n                                              <Radio.Button value=\"UnhealthyServerCount\">后端异常ECS实例个数</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row style={{marginTop: 20}}>\n                                    <Col>\n                                        <LineChart width={800} height={400} data={this.state.chartData}/>\n                                    </Col>\n                                  </Row>\n                              </Spin>\n                          </TabPane>\n                          <TabPane tab=\"信息详情\" key=\"2\">\n                              <Spin tip=\"数据获取中...\" spinning={this.state.serverDetailLoading}>\n                                  <Descriptions title=\"基本信息\" bordered size=\"small\" column={2}>\n                                      <Descriptions.Item label=\"实例ID\">{this.state.currentServerDetail.LoadBalancerId}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例名称\">{this.state.currentServerDetail.LoadBalancerName}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例状态\">{this.state.currentServerDetail.LoadBalancerStatus}</Descriptions.Item>\n                                      <Descriptions.Item label=\"服务地址\">{this.state.currentServerDetail.Address}</Descriptions.Item>\n                                      <Descriptions.Item label=\"计费方式\">{this.state.currentServerDetail.InternetChargeType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"付费类型\">{this.state.currentServerDetail.PayType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"IP版本\">{this.state.currentServerDetail.AddressIPVersion}</Descriptions.Item>\n                                      <Descriptions.Item label=\"创建时间\">{this.state.currentServerDetail.CreateTime}</Descriptions.Item>\n                                  </Descriptions>\n                              </Spin>\n                          </TabPane>\n                      </Tabs>\n                  </Drawer>\n                  <Table\n                      columns={this.state.columns}\n                      dataSource={this.state.tableData}\n                      scroll={{ x: 'max-content' }}\n                      pagination={this.state.pagination}\n                      loading={this.state.tableLoading}\n                      bordered\n                      size=\"small\"\n                  />\n              </div>\n          </Content>\n      );\n  }\n}\n\nexport default SlbContent;\n","import React, { Component, Fragment } from \"react\";\nimport {\n    Button,\n    Layout,\n    Table,\n    Modal,\n    Form,\n    Input,\n    Select,\n    Popconfirm,\n    Divider,\n    Typography,\n} from \"antd\";\nimport { message } from \"antd\";\nimport {\n    deleteCloudAccouts,\n    getCloudAccouts,\n    postCloudAccouts,\n    putCloudAccouts,\n} from \"../../api/cloud\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\nconst { Option } = Select;\n\nclass CloudContent extends Component {\n    constructor(props) {\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"云类型\",\n                    dataIndex: \"accountType\",\n                    key: \"accountType\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"账号名称\",\n                    dataIndex: \"accountName\",\n                    key: \"accountName\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"账号密码\",\n                    dataIndex: \"accountPwd\",\n                    key: \"accountPwd\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"访问key\",\n                    dataIndex: \"accountKey\",\n                    key: \"accountKey\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return (\n                            <Paragraph style={{ marginBottom: 0 }} copyable>\n                                {value}\n                            </Paragraph>\n                        );\n                    },\n                },\n                {\n                    title: \"访问secret\",\n                    dataIndex: \"accountSecret\",\n                    key: \"accountSecret\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return (\n                            <Paragraph style={{ marginBottom: 0 }} copyable>\n                                {value}\n                            </Paragraph>\n                        );\n                    },\n                },\n                {\n                    title: \"所属区域\",\n                    dataIndex: \"accountRegion\",\n                    key: \"accountRegion\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: 160,\n                    align: \"center\",\n                    className: \"small_font\",\n                    render: (text, record) => {\n                        let superOper;\n                        if (this.props.isSuperAdmin) {\n                            superOper = (\n                                <Fragment>\n                                    <Button\n                                        type=\"primary\"\n                                        size=\"small\"\n                                        onClick={this.handleEditAccountInfo.bind(\n                                            this,\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"PUT:/cloud/accounts\"]}\n                                    >\n                                        编辑\n                                    </Button>\n                                    <Divider type=\"vertical\" />\n                                    <Popconfirm\n                                        title=\"确定删除该项内容?\"\n                                        onConfirm={this.confirm.bind(\n                                            this,\n                                            record,\n                                        )}\n                                        okText=\"确认\"\n                                        cancelText=\"取消\"\n                                        disabled={!this.props.aclAuthMap[\"DELETE:/cloud/accounts\"]}\n                                    >\n                                        <Button type=\"danger\" size=\"small\" disabled={!this.props.aclAuthMap[\"DELETE:/cloud/accounts\"]}>\n                                            删除\n                                        </Button>\n                                    </Popconfirm>\n                                </Fragment>\n                            );\n                        } else {\n                            superOper = <span>无操作权限</span>;\n                        }\n                        return <div>{superOper}</div>;\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            add_new_account_visible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    confirm = (e) => {\n        this.handleDeleteAccountInfo(e);\n    };\n\n    showAddAccountModal = () => {\n        this.setState({\n            current_data_id: null,\n            add_new_account_visible: true,\n        });\n    };\n\n    handleAddAccountSubmit = (e) => {\n        this.formRef.current.validateFields().then((values) => {\n            if (this.state.current_data_id != null) {\n                values[\"id\"] = this.state.current_data_id;\n                putCloudAccouts(values)\n                    .then((res) => {\n                        if (res.code === 0) {\n                            this.setState({\n                                add_new_account_visible: false,\n                            });\n                            message.success(\"更新成功！\");\n                        }\n                        this.refreshTableData();\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            } else {\n                postCloudAccouts(values)\n                    .then((res) => {\n                        if (res.code === 0) {\n                            this.setState({\n                                add_new_account_visible: false,\n                            });\n                            message.success(\"新增成功！\");\n                        }\n                        this.refreshTableData();\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            }\n        });\n    };\n\n    handleAddAccountCancel = (e) => {\n        this.setState({\n            add_new_account_visible: false,\n        });\n    };\n\n    handleEditAccountInfo = (e) => {\n        setTimeout(() => {\n            this.formRef.current.setFieldsValue({\n                id: e.id,\n                accountType: e.accountType,\n                accountName: e.accountName,\n                accountPwd: e.accountPwd,\n                accountKey: e.accountKey,\n                accountSecret: e.accountSecret,\n                accountRegion: e.accountRegion,\n                bankAccount: e.bankAccountId,\n            });\n        }, 300);\n\n        this.setState({\n            current_data_id: e.id,\n            add_new_account_visible: true,\n        });\n    };\n\n    handleDeleteAccountInfo = (e) => {\n        deleteCloudAccouts({ id: e.id })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功！\");\n                }\n                this.refreshTableData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        getCloudAccouts(\n            this.state.pagination.page,\n            this.state.pagination.pageSize,\n        )\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"accounts\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        id: data[i][\"id\"],\n                        key: data[i][\"id\"],\n                        accountType: data[i][\"accountType\"],\n                        accountName: data[i][\"accountName\"],\n                        accountPwd: data[i][\"accountPwd\"],\n                        accountKey: data[i][\"accountKey\"],\n                        accountSecret: data[i][\"accountSecret\"],\n                        accountRegion: data[i][\"accountRegion\"],\n                        bankAccountId: data[i][\"bankAccountId\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"云资源\", \"云账号\", \"账号列表\"]}\n                />\n                {this.props.isSuperAdmin ? (\n                    <div style={{ marginBottom: 10 }}>\n                        <Button\n                            type=\"primary\"\n                            onClick={this.showAddAccountModal}\n                            disabled={!this.props.aclAuthMap[\"POST:/cloud/accounts\"]}\n                        >\n                            新增账号\n                        </Button>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n                <Modal\n                    title=\"云账号信息详情\"\n                    visible={this.state.add_new_account_visible}\n                    onOk={this.handleAddAccountSubmit}\n                    onCancel={this.handleAddAccountCancel}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <Form\n                        ref={this.formRef}\n                        initialValues={{ accountType: \"私有云\" }}\n                    >\n                        <Form.Item\n                            label=\"云账号类型\"\n                            {...formItemLayout}\n                            name=\"accountType\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"账号类型不能为空！\",\n                                },\n                            ]}\n                        >\n                            <Select size=\"default\">\n                                <Option value=\"私有云\">私有云</Option>\n                                <Option value=\"阿里云\">阿里云</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            label=\"云账号名称\"\n                            {...formItemLayout}\n                            name=\"accountName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"账号名称不能为空！\",\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"云账号密码\"\n                            {...formItemLayout}\n                            name=\"accountPwd\"\n                            rules={[\n                                // {\n                                //     required: true,\n                                //     message: \"账号密码不能为空！\",\n                                // },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"云账号key\"\n                            {...formItemLayout}\n                            name=\"accountKey\"\n                            rules={[\n                                // {\n                                //     required: true,\n                                //     message: \"账号key不能为空！\",\n                                // },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"云账号secret\"\n                            {...formItemLayout}\n                            name=\"accountSecret\"\n                            rules={[\n                                // {\n                                //     required: true,\n                                //     message: \"账号secret不能为空！\",\n                                // },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"所属区域\"\n                            {...formItemLayout}\n                            name=\"accountRegion\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"所属区域不能为空！\",\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default CloudContent;\n","import req from \"../utils/axios\";\n\nconst postAddDailyJob = (data) =>{\n    return req.post('dailyJob', data)\n};\nexport {postAddDailyJob}\n\nconst getDailyJobs = (params) =>{\n    return req.get('dailyJob/list',params)\n};\nexport {getDailyJobs}\n\nconst getDailyJobDetail = (id) =>{\n    return req.get('dailyJob/info', {\"id\": id})\n};\nexport {getDailyJobDetail}\n\nconst putDailyJob = (data) =>{\n    return req.put('dailyJob', data)\n};\nexport {putDailyJob}\n\nconst putDailyJobExecutorUser = (data) =>{\n    return req.put('dailyJob/executorUser', data)\n};\nexport {putDailyJobExecutorUser}","import React, { Component, Fragment } from \"react\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    Steps,\n    Button,\n    message,\n    Input,\n    Carousel,\n    Form,\n    Cascader,\n    Radio,\n    Tooltip,\n    Card,\n    Alert,\n    Row,\n    Select,\n    Layout,\n} from \"antd\";\nimport \"../../assets/css/job.css\";\nimport Col from \"antd/es/grid/col\";\nimport {\n    SolutionOutlined,\n    HighlightOutlined,\n    PlusCircleOutlined,\n    MinusCircleOutlined,\n} from \"@ant-design/icons\";\nimport { postAddDailyJob } from \"../../api/daily_task\";\n\nconst Step = Steps.Step;\nconst { Content } = Layout;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst options = [\n    {\n        value: \"日常工作\",\n        label: \"日常工作\",\n        children: [\n            {\n                value: \"协助\",\n                label: \"协助\",\n            },\n        ],\n    },\n];\n\nconst ConfigTemplate = {\n    \"\": [\n        {\n            field: \"task_content\",\n            text: \"问题描述\",\n            type: \"text\",\n            errorMessage: \"请输入具体问题描述\",\n            required: true,\n        },\n    ],\n    \"日常工作-协助\": [\n        {\n            field: \"task_content\",\n            text: \"工作内容\",\n            type: \"text\",\n            errorMessage: \"请输入具体工作内容\",\n        },\n        {\n            field: \"open_deploy_auto_config\",\n            text: \"自定义项\",\n            type: \"kvinput\",\n        },\n    ],\n};\n\nclass KvIput extends Component {\n    constructor(props) {\n        super(props);\n        this.addNewConfig = this.addNewConfig.bind(this);\n        this.state = {\n            configCount: 0,\n            configData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.onChange = this.props.onChange;\n    }\n\n    deleteConfigItem(data) {\n        let index = data.index;\n        let configData = this.state.configData;\n        configData.splice(index, 1);\n        this.setState({ configData });\n        this.onChange(this.state.configData);\n    }\n\n    addNewConfig() {\n        let configData = this.state.configData;\n        configData.push({\n            key: \"\",\n            value: \"\",\n        });\n        this.setState(configData);\n    }\n\n    handleKeyChange(data, e) {\n        let index = data[\"index\"];\n        let configData = this.state.configData;\n        configData[index][\"key\"] = e.target.value;\n        this.setState(configData);\n        this.onChange(this.state.configData);\n    }\n\n    handleValueChange(data, e) {\n        let index = data[\"index\"];\n        let configData = this.state.configData;\n        configData[index][\"value\"] = e.target.value;\n        this.setState(configData);\n        this.onChange(this.state.configData);\n    }\n\n    render() {\n        let configItem = this.state.configData.map((item, index) => {\n            return (\n                <Row>\n                    <Col span={10} style={{ marginRight: 10 }}>\n                        <Input\n                            key=\"k{index}\"\n                            addonBefore=\"键\"\n                            value={item.key}\n                            onChange={this.handleKeyChange.bind(this, {\n                                index,\n                            })}\n                        />\n                    </Col>\n                    <Col span={10} style={{ marginRight: 10 }}>\n                        <Input\n                            key=\"v{index}\"\n                            addonBefore=\"值\"\n                            value={item.value}\n                            onChange={this.handleValueChange.bind(this, {\n                                index,\n                            })}\n                        />\n                    </Col>\n                    <Col span={2}>\n                        <Button\n                            type=\"sdanger\"\n                            icon={<MinusCircleOutlined />}\n                            shape=\"circle\"\n                            onClick={this.deleteConfigItem.bind(this, {\n                                index,\n                            })}\n                        />\n                    </Col>\n                </Row>\n            );\n        });\n        return (\n            <Fragment>\n                {configItem}\n                <Row>\n                    <Col span={5}>\n                        <Button\n                            type=\"primary\"\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.addNewConfig}\n                        >\n                            添加新项\n                        </Button>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nclass JobBaseInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deptData: [],\n        };\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 10 },\n        };\n        return (\n            <Content\n                style={{\n                    height: \"100%\",\n                }}\n            >\n                <Form\n                    ref={this.props.formRef}\n                    initialValues={{ importantDegree: \"普通\" }}\n                >\n                    <Form.Item\n                        {...formItemLayout}\n                        label=\"工单名称\"\n                        name=\"jobName\"\n                        rules={[\n                            { required: true, message: \"请输入工单任务名称\" },\n                        ]}\n                    >\n                        <Input placeholder=\"请输入工单任务名称\" />\n                    </Form.Item>\n                    <Form.Item\n                        {...formItemLayout}\n                        label=\"工单类型\"\n                        name=\"jobType\"\n                        rules={[{ required: true, message: \"请选择工单类型\" }]}\n                    >\n                        <Cascader\n                            placeholder=\"请选择工单类型\"\n                            options={options}\n                        />\n                    </Form.Item>\n\n                    <Form.Item\n                        {...formItemLayout}\n                        label=\"该任务紧急程度\"\n                        style={{ textAlign: \"left\" }}\n                        name=\"importantDegree\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"请选择任务紧急程度\",\n                            },\n                        ]}\n                    >\n                        <Radio.Group buttonStyle=\"solid\">\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title=\"等待相关人员根据自身任务项安排时间处理\"\n                            >\n                                <Radio.Button value=\"普通\">普通</Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title=\"需要在半小时内处理完成\"\n                            >\n                                <Radio.Button value=\"紧急\">紧急</Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title=\"需要立即安排人员处理\"\n                            >\n                                <Radio.Button value=\"非常紧急\">\n                                    非常紧急\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </Form.Item>\n                </Form>\n            </Content>\n        );\n    }\n}\n\nclass JobConfigInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.getFormInputContent = this.getFormInputContent.bind(this);\n        this.state = {};\n    }\n\n    getFormInputContent(input) {\n        let res;\n        switch (input.type) {\n            case \"char\":\n                res = <Input />;\n                break;\n            case \"text\":\n                res = <TextArea rows={4} />;\n                break;\n            case \"select\":\n                res = (\n                    <Select style={{ width: 120 }}>\n                        {input.options.map((item, index) => {\n                            return (\n                                <Option key={index} value={item}>\n                                    {item}\n                                </Option>\n                            );\n                        })}\n                    </Select>\n                );\n                break;\n            case \"kvinput\":\n                res = (\n                    // <KvIput setFieldsValue={this.props.form.setFieldsValue} />\n                    <KvIput />\n                );\n                break;\n            default:\n                res = <Input />;\n                break;\n        }\n        return res;\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 18 },\n        };\n        let configData = ConfigTemplate[this.props.jobType];\n        if (configData === undefined) {\n            configData = ConfigTemplate[\"\"];\n        }\n        let configDataForm;\n        configDataForm = configData.map((item, index) => {\n            return (\n                <Form.Item\n                    key={index}\n                    {...formItemLayout}\n                    label={item.text}\n                    style={{ textAlign: \"left\" }}\n                    name={item.field}\n                    rules={[\n                        {\n                            required: item.required,\n                            message: item.errorMessage,\n                        },\n                    ]}\n                >\n                    {this.getFormInputContent(item)}\n                </Form.Item>\n            );\n        });\n        return (\n            <Content\n                style={{\n                    height: \"100%\",\n                }}\n            >\n                <Form ref={this.props.formRef}>\n                    <Form.Item\n                        {...formItemLayout}\n                        label=\"关健信息\"\n                        required={true}\n                    >\n                        <Card\n                            span={20}\n                            size=\"small\"\n                            title=\"填写完善和准确可以提高工单处理效率哦\"\n                            headStyle={{\n                                backgroundColor: \"#e6f7ff\",\n                                fontWeight: \"350\",\n                            }}\n                        >\n                            {configDataForm}\n                        </Card>\n                    </Form.Item>\n                    <Row style={{ marginBottom: 10 }}>\n                        <Col span={4} />\n                        <Col span={18}>\n                            <Alert\n                                message=\"你可以在备注信息中填写注意事项，可以避免执行过程中出错哦\"\n                                type=\"info\"\n                                closable\n                            />\n                        </Col>\n                    </Row>\n                    <Form.Item\n                        {...formItemLayout}\n                        label=\"备注信息\"\n                        name=\"remark\"\n                    >\n                        <TextArea rows={4} />\n                    </Form.Item>\n                </Form>\n            </Content>\n        );\n    }\n}\n\nclass Deploy_project_content extends Component {\n    constructor(props) {\n        super(props);\n        this.submitJobForm = this.submitJobForm.bind(this);\n        this.baseInfoFormRef = React.createRef();\n        this.configInfoFormRef = React.createRef();\n        this.state = {\n            current: 0,\n            stepStatus: \"wait\",\n            jobTypeStr: \"\",\n            form1Data: null,\n            form2Data: null,\n            submitLoading: false,\n        };\n    }\n\n    componentDidMount() {}\n\n    next() {\n        if (this.state.current === 0) {\n            // 工单基本信息\n            this.baseInfoFormRef.current\n                .validateFields()\n                .then((values) => {\n                    const current = this.state.current + 1;\n                    let form1Data = Object.assign(\n                        {},\n                        this.state.form1Data,\n                        values,\n                    );\n                    this.setState({\n                        current,\n                        stepStatus: \"process\",\n                        jobTypeStr: values.jobType.join(\"-\"),\n                        form1Data: form1Data,\n                    });\n                    this.carousel.next();\n                })\n                .catch((err) => {\n                    this.setState({ stepStatus: \"error\" });\n                });\n        }\n    }\n\n    prev() {\n        switch (this.state.current) {\n            case 2:\n                this.setState({ form3Data: null });\n                break;\n            case 1:\n                this.setState({ form2Data: null });\n                break;\n            default:\n                break;\n        }\n        const current = this.state.current - 1;\n        this.setState({ current });\n        this.carousel.prev();\n    }\n\n    submitJobForm() {\n        this.configInfoFormRef.current\n            .validateFields()\n            .then((values) => {\n                let form2Data = Object.assign({}, this.state.form2Data, values);\n                this.setState(\n                    {\n                        stepStatus: \"finish\",\n                        form2Data: form2Data,\n                    },\n                    () => {\n                        this.setState({ submitLoading: true });\n                        let reqData = {\n                            ...this.state.form1Data,\n                            ...this.state.form2Data,\n                            jobType: this.state.form1Data[\"jobType\"].join(\"-\"),\n                            open_deploy_auto_config: JSON.stringify(\n                                this.state.form2Data.open_deploy_auto_config,\n                            ),\n                        };\n                        postAddDailyJob(reqData)\n                            .then((res) => {\n                                if (res.code === 0) {\n                                    this.setState({ submitLoading: false });\n                                    message.success(res.msg);\n                                    this.props.history.push(\"/admin/task/jobs\");\n                                } else {\n                                    this.setState({ submitLoading: false });\n                                    message.error(res.msg);\n                                }\n                            })\n                            .catch((err) => {\n                                this.setState({ submitLoading: false });\n                                message.error(err.toLocaleString());\n                            });\n                    },\n                );\n            })\n            .catch((err) => {\n                this.setState({ stepStatus: \"error\" });\n            });\n    }\n\n    render() {\n        const { current } = this.state;\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"工作协助\", \"日常工单\"]} />\n                <Steps\n                    current={current}\n                    size=\"small\"\n                    style={{ marginTop: 20 }}\n                    status={this.state.stepStatus}\n                >\n                    <Step title=\"任务基本信息\" icon={<SolutionOutlined />} />\n                    <Step title=\"任务详情\" icon={<HighlightOutlined />} />\n                </Steps>\n                <div\n                    className=\"steps-content\"\n                    style={{ textAlign: \"center\", padding: 20 }}\n                >\n                    <Carousel\n                        ref={(carousel) => {\n                            this.carousel = carousel;\n                        }}\n                        dots={false}\n                        effect=\"fade\"\n                        adaptiveHeight={true}\n                        style={{ textAlign: \"center\" }}\n                    >\n                        <Fragment key={1}>\n                            <JobBaseInfo formRef={this.baseInfoFormRef} />\n                        </Fragment>\n                        <Fragment key={2}>\n                            <JobConfigInfo\n                                formRef={this.configInfoFormRef}\n                                jobType={this.state.jobTypeStr}\n                                loadConfigDataTemplateSpin={\n                                    this.state.loadConfigDataTemplateSpin\n                                }\n                            />\n                        </Fragment>\n                    </Carousel>\n                </div>\n                <div\n                    className=\"steps-action\"\n                    style={{ textAlign: \"center\", marginTop: 20 }}\n                >\n                    {current < 1 && (\n                        <Button type=\"primary\" onClick={() => this.next()}>\n                            下一步\n                        </Button>\n                    )}\n                    {current === 1 && (\n                        <Button\n                            type=\"primary\"\n                            loading={this.state.submitLoading}\n                            onClick={this.submitJobForm}\n                        >\n                            提 交\n                        </Button>\n                    )}\n                    {current > 0 && (\n                        <Button\n                            style={{ marginLeft: 8 }}\n                            onClick={() => this.prev()}\n                        >\n                            上一步\n                        </Button>\n                    )}\n                </div>\n            </Content>\n        );\n    }\n}\n\nexport default Deploy_project_content;\n","import jwt_decode from \"jwt-decode\";\n\nfunction getCurrentUserId() {\n    let token = localStorage.getItem(\"ops_token\");\n    if(token===undefined || token===null || token===\"\"){\n        window.location.href = \"/login\";\n        return\n    }\n    let info = jwt_decode(token);\n    return info['userInfo']['userId'];\n}\n\nfunction isSuperAdmin() {\n    let token = localStorage.getItem(\"ops_token\");\n    if(token===undefined || token===null || token===\"\"){\n        window.location.href = \"/login\";\n        return\n    }\n    let info = jwt_decode(token);\n    return info['userInfo']['isSuperAdmin'];\n}\n\nexport { getCurrentUserId, isSuperAdmin }\n","import React, { Component, Fragment } from \"react\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    Button,\n    Col,\n    Divider,\n    Input,\n    Layout,\n    Row,\n    Table,\n    Tag,\n    message,\n    Drawer,\n    Spin,\n    Descriptions,\n    Alert,\n    Card,\n    Typography,\n    Modal,\n    DatePicker,\n} from \"antd\";\nimport {\n    getDailyJobDetail,\n    getDailyJobs,\n    putDailyJob,\n    putDailyJobExecutorUser,\n} from \"../../api/daily_task\";\nimport moment from \"moment\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport \"moment/locale/zh-cn\";\nimport { getCurrentUserId } from \"../../services/common\";\nimport { ServerBase } from \"../../config\";\nmoment.locale(\"zh-cn\");\n\nconst { TextArea } = Input;\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\n\nconst NULL_TIMESTAMP = \"0001-01-01 00:00:00\";\n\nclass Jobs_content extends Component {\n    constructor(props) {\n        super(props);\n        this.downloadFile = this.downloadFile.bind(this);\n        this.ChangeExecutorSelect = this.ChangeExecutorSelect.bind(this);\n        this.changeRefuseReason = this.changeRefuseReason.bind(this);\n        this.autoCreateJob = this.autoCreateJob.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"id\",\n                    key: \"id\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"紧急度\",\n                    dataIndex: \"important_degree\",\n                    key: \"important_degree\",\n                    width: 70,\n                    render: (value) => {\n                        let content;\n                        switch (value) {\n                            case \"非常紧急\":\n                                content = <Tag color=\"#f50\">{value}</Tag>;\n                                break;\n                            case \"紧急\":\n                                content = (\n                                    <Tag color=\"rgb(255, 147, 137)\">\n                                        {value}\n                                    </Tag>\n                                );\n                                break;\n                            default:\n                                content = <Tag color=\"#108ee9\">{value}</Tag>;\n                                break;\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"状态\",\n                    dataIndex: \"status\",\n                    key: \"status\",\n                    width: 50,\n                    render: (value) => {\n                        const content = this.getStatusText(value);\n                        return <Text ellipsis={true}>{content}</Text>;\n                    },\n                },\n                {\n                    title: \"任务名\",\n                    dataIndex: \"job_name\",\n                    key: \"job_name\",\n                    width: 200,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"任务类型\",\n                    dataIndex: \"job_type\",\n                    key: \"job_type\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"创建人\",\n                    dataIndex: \"creator_user_name\",\n                    key: \"creator_user_name\",\n                    width: 70,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    dataIndex: \"create_time\",\n                    key: \"create_time\",\n                    width: 150,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true}>\n                                {moment(value).format(\"MM月DD日HH:mm\")}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"执行人\",\n                    dataIndex: \"executor_user_name\",\n                    key: \"executor_user_name\",\n                    width: 70,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"响应时间\",\n                    dataIndex: \"accept_time\",\n                    key: \"accept_time\",\n                    width: 150,\n                    render: (value) => {\n                        if (value === NULL_TIMESTAMP) {\n                            return <Text ellipsis={true}>-</Text>;\n                        }\n                        return (\n                            <Text ellipsis={true}>\n                                {moment(value).format(\"MM月DD日HH:mm\")}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"结束时间\",\n                    dataIndex: \"end_time\",\n                    key: \"end_time\",\n                    width: 150,\n                    render: (value) => {\n                        if (value === NULL_TIMESTAMP) {\n                            return <Text ellipsis={true}>-</Text>;\n                        }\n                        return (\n                            <Text ellipsis={true}>\n                                {moment(value).format(\"MM月DD日HH:mm\")}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    render: (text, record) => {\n                        return (\n                            <Fragment>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    onClick={this.showJobDetail.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    详情\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    disabled={!record.isGetEnable}\n                                    onClick={this.startJob.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    领取\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    disabled={!record.isFinishEnable}\n                                    onClick={this.finishJob.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    完成\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    disabled={!record.isRefuseEnable}\n                                    onClick={this.refuseJob.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    拒绝\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    disabled={!record.isDeleteEnable}\n                                    onClick={this.deleteJob.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    删除\n                                </Button>\n                            </Fragment>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            drawerSpinning: false,\n            drawerVisible: false,\n            opsUsersList: [],\n            changeExecutorModalVisible: false,\n            refuseJobModalVisible: false,\n            refuseId: 0,\n            refuseReason: \"\",\n            changeToUserId: 0,\n            jobChangeId: 0,\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            job_file: \"\",\n            queryKeyword: \"\",\n            currentJob: \"\",\n            currentJobDetail: \"\",\n            isGetEnable: true,\n            isFinishEnable: true,\n            isDeleteEnable: true,\n            queryCreateTime: null,\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    showJobDetail(data) {\n        this.setState({\n            drawerVisible: true,\n            drawerSpinning: true,\n            currentJob: data,\n        });\n        getDailyJobDetail(data.id)\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState(\n                        {\n                            ...res.data,\n                            currentJobDetail: res.data,\n                        },\n                    );\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({ drawerSpinning: false });\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    startJob(id) {\n        putDailyJob({\n            id: id,\n            action: \"getJob\",\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    let currentJob = Object.assign({}, this.state.currentJob, {\n                        isGetEnable: false,\n                    });\n                    message.success(\"领取成功\");\n                    this.setState({\n                        currentJob: currentJob,\n                    });\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    ChangeExecutorSelect(data) {\n        this.setState({ changeToUserId: data });\n    }\n\n    changeRefuseReason(e) {\n        this.setState({ refuseReason: e.target.value });\n    }\n\n    finishJob(id) {\n        putDailyJob({\n            id: id,\n            action: \"finishJob\",\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"成功完成，继续努力\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    }\n\n    refuseJob(id) {\n        this.setState({\n            refuseJobModalVisible: true,\n            refuseId: id,\n        });\n    }\n\n    deleteJob(id) {\n        putDailyJob({\n            id: id,\n            action: \"deleteJob\",\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    }\n\n    handlerRefuseJobCommit = () => {\n        if (this.state.refuseId === 0) {\n            message.error(\"未选择拒绝工单\");\n            return;\n        }\n        if (this.state.refuseReason === \"\") {\n            message.error(\"必须填写拒绝原因\");\n            return;\n        }\n        putDailyJob({\n            id: this.state.refuseId,\n            refuseReason: this.state.refuseReason,\n            action: \"refuseJob\",\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ refuseJobModalVisible: false });\n                    message.success(\"操作成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    };\n\n    downloadFile() {\n        window.open(\n            ServerBase +\n                \"fileDownload?objectName=\" +\n                encodeURIComponent(this.state.job_file),\n            \"_blank\",\n        );\n    }\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            queryKeyword: this.state.queryKeyword,\n            queryCreateTime: this.state.queryCreateTime,\n        };\n        getDailyJobs(queryParams)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"jobs\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"id\"],\n                        id: data[i][\"id\"],\n                        job_name: data[i][\"job_name\"],\n                        job_type: data[i][\"job_type\"],\n                        important_degree: data[i][\"important_degree\"],\n                        creator_user_name: data[i][\"creator_user_name\"],\n                        executor_user_name: data[i][\"executor_user_name\"],\n                        status: data[i][\"status\"],\n                        create_time: data[i][\"create_time\"],\n                        accept_time: data[i][\"accept_time\"],\n                        end_time: data[i][\"end_time\"],\n                        approve_id: data[i][\"approve_id\"],\n                        approve_content: data[i][\"approve_content\"],\n                        refuse_reason: data[i][\"refuse_reason\"],\n                        isExecutorChangable:\n                            data[i][\"status\"] === 2 &&\n                            data[i][\"executor_user_id\"] === getCurrentUserId(),\n                        isGetEnable: data[i][\"status\"] === 1,\n                        isFinishEnable:\n                            data[i][\"status\"] === 2 &&\n                            data[i][\"executor_user_id\"] === getCurrentUserId(),\n                        isDeleteEnable:\n                            data[i][\"creator_user_id\"] === getCurrentUserId() &&\n                            data[i][\"status\"] < 2,\n                        isRefuseEnable: data[i][\"status\"] === 1,\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({\n            queryKeyword: e.target.value,\n        });\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onDrawerClose = () => {\n        this.setState({\n            drawerVisible: false,\n        });\n    };\n\n    autoCreateJob() {\n        localStorage.setItem(\n            \"job_template\",\n            JSON.stringify(this.state.currentJobDetail),\n        );\n        this.props.history.push({ pathname: \"/admin/task/deploy_project\" });\n    }\n\n    onQueryDateChange = (moment) => {\n        if (moment == null) {\n            this.setState({ queryCreateTime: null });\n        } else {\n            this.setState({ queryCreateTime: moment.format(\"YYYY-MM-DD\") });\n        }\n    };\n\n    getStatusText(status) {\n        let content;\n        switch (status) {\n            case 1:\n                content = <Tag color=\"volcano\">待领取</Tag>;\n                break;\n            case 2:\n                content = <Tag color=\"geekblue\">处理中</Tag>;\n                break;\n            case 3:\n                content = <Tag color=\"green\">已完成</Tag>;\n                break;\n            case 0:\n                content = <Tag color=\"magenta\">已拒绝</Tag>;\n                break;\n            default:\n                content = <Tag color=\"lime\">已删除</Tag>;\n                break;\n        }\n        return content;\n    }\n\n    render() {\n        let waitContent;\n        if (this.state.status > 0 && this.state.status < 3) {\n            const m1 = moment(this.state.create_time);\n            const m2 = moment(moment().format(\"YYYY-MM-DD HH:mm:ss\"));\n            let du = moment.duration(m2 - m1, \"ms\");\n            waitContent =\n                this.state.creator_user_name + \" 已等待 \" + du.humanize();\n        } else {\n            const m1 = moment(this.state.create_time);\n            const m2 = moment(this.state.end_time);\n            let du = moment.duration(m2 - m1, \"ms\");\n            waitContent = \"工单用时: \" + du.humanize();\n        }\n        let k8sConfigContent = (\n            <Descriptions.Item label=\"无配置\">用户未设置</Descriptions.Item>\n        );\n        if (\n            this.state.open_deploy_auto_config !== undefined &&\n            this.state.open_deploy_auto_config !== \"\"\n        ) {\n            let ConfigList = JSON.parse(this.state.open_deploy_auto_config);\n            k8sConfigContent = ConfigList.map((item, index) => {\n                return (\n                    <Descriptions.Item key={index} label={item.key}>\n                        <Paragraph\n                            style={{ marginBottom: 0, width: \"300px\" }}\n                            ellipsis={true}\n                            copyable={item.value !== \"\"}\n                        >\n                            {item.value}\n                        </Paragraph>\n                    </Descriptions.Item>\n                );\n            });\n        }\n        let refuseContent = \"\";\n        if (this.state.status === 0) {\n            refuseContent = (\n                <Alert\n                    style={{ marginTop: 10 }}\n                    message={\n                        <Fragment>\n                            拒绝原因：{this.state.refuse_reason}\n                        </Fragment>\n                    }\n                    type=\"error\"\n                />\n            );\n        }\n        let titleContent = (\n            <div>\n                <span style={{ marginRight: \"20px\" }}>工单详情</span>\n            </div>\n        );\n        return (\n            <Content\n                stmayle={{\n                    background: \"#fff\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"工作协助\", \"工单列表\"]} />\n                <div style={{ marginBottom: 20 }}>\n                    <Row>\n                        <Col span={8} className=\"col-span\">\n                            <Input\n                                placeholder=\"输入工单名称、创建人、执行人查询\"\n                                value={this.state.queryKeyword}\n                                onChange={this.keywordOnChange}\n                            />\n                        </Col>\n                        <Col span={3} className=\"col-span\">\n                            <DatePicker\n                                style={{ width: \"100%\" }}\n                                defaultValue={this.state.queryCreateTime}\n                                placeholder=\"创建时间\"\n                                onChange={this.onQueryDateChange}\n                            />\n                        </Col>\n                        <Col span={3}>\n                            <Button\n                                type=\"primary\"\n                                icon={<SearchOutlined />}\n                                onClick={this.handleQuery}\n                            >\n                                查 询\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n\n                <Modal\n                    title=\"你正在拒绝他人工单，请谨慎操作！\"\n                    visible={this.state.refuseJobModalVisible}\n                    onOk={this.handlerRefuseJobCommit}\n                    onCancel={() => {\n                        this.setState({ refuseJobModalVisible: false });\n                    }}\n                    style={{ textAlign: \"center\" }}\n                >\n                    <Alert\n                        type=\"warning\"\n                        message=\"请详细填写你的拒绝理由，将反馈给工单创建者并留存！\"\n                        style={{ marginBottom: 10 }}\n                    />\n                    <TextArea\n                        rows={4}\n                        placeholder=\"填写详细拒绝原因，以便对方后续完善\"\n                        onChange={this.changeRefuseReason}\n                    />\n                </Modal>\n\n                <Drawer\n                    title={titleContent}\n                    placement=\"left\"\n                    closable={true}\n                    onClose={this.onDrawerClose}\n                    visible={this.state.drawerVisible}\n                    width={800}\n                >\n                    <Spin\n                        tip=\"数据加载中...\"\n                        spinning={this.state.drawerSpinning}\n                    >\n                        <Row style={{ marginBottom: 10 }}>\n                            <Col span={24} style={{ fontSize: 15 }}>\n                                <Alert\n                                    message={\n                                        <Fragment>\n                                            {this.getStatusText(\n                                                this.state.status,\n                                            )}\n                                            {this.state.job_name}\n                                        </Fragment>\n                                    }\n                                    type=\"info\"\n                                />\n                                {refuseContent}\n                            </Col>\n                        </Row>\n                        <Row style={{ marginBottom: 10 }}>\n                            <Col span={24}>\n                                <Alert\n                                    message={waitContent}\n                                    type=\"warning\"\n                                    showIcon\n                                />\n                            </Col>\n                        </Row>\n                        <Row style={{ marginTop: \"10px\" }}>\n                            <Card\n                                size=\"small\"\n                                title=\"工单基本信息\"\n                                style={{ marginBottom: 10, width: \"100%\" }}\n                            >\n                                <Descriptions bordered size=\"small\" column={2}>\n                                    <Descriptions.Item label=\"任务类型\">\n                                        {this.state.job_type}\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"紧急度\">\n                                        {this.state.important_degree}\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"发起时间\">\n                                        {this.state.create_time}\n                                    </Descriptions.Item>\n                                </Descriptions>\n                            </Card>\n                        </Row>\n                        <Row style={{ marginTop: \"10px\" }}>\n                            <Card\n                                size=\"small\"\n                                title=\"工作内容\"\n                                style={{ marginBottom: 10, width: \"100%\" }}\n                            >\n                                <Paragraph\n                                    style={{ marginBottom: 0 }}\n                                    ellipsis={true}\n                                    copyable={this.state.task_content !== \"\"}\n                                >\n                                    {this.state.task_content}\n                                </Paragraph>\n                            </Card>\n                            <Card\n                                size=\"small\"\n                                title=\"自定义项\"\n                                style={{ width: \"100%\" }}\n                            >\n                                <Descriptions\n                                    bordered\n                                    size=\"small\"\n                                    column={1}\n                                    style={{ marginTop: \"10px\" }}\n                                >\n                                    {k8sConfigContent}\n                                </Descriptions>\n                            </Card>\n                            <Card\n                                size=\"small\"\n                                title=\"用户备注\"\n                                style={{ width: \"100%\" }}\n                            >\n                                <Paragraph\n                                    style={{ marginBottom: 0 }}\n                                    ellipsis={true}\n                                    copyable={this.state.remark !== \"\"}\n                                >\n                                    {this.state.remark}\n                                </Paragraph>\n                            </Card>\n                        </Row>\n                        <Row style={{ textAlign: \"center\", marginTop: 20 }}>\n                            <Col span={7} />\n                            <Col span={4}>\n                                <Button\n                                    type=\"primary\"\n                                    disabled={\n                                        !this.state.currentJob.isGetEnable\n                                    }\n                                    onClick={this.startJob.bind(\n                                        this,\n                                        this.state.currentJob.id,\n                                    )}\n                                >\n                                    一键领取\n                                </Button>\n                            </Col>\n                            <Col offset={1} />\n                            <Col span={4}>\n                                <Button\n                                    type=\"danger\"\n                                    disabled={\n                                        !this.state.currentJob.isFinishEnable\n                                    }\n                                    onClick={this.finishJob.bind(\n                                        this,\n                                        this.state.currentJob.id,\n                                    )}\n                                >\n                                    我已完成\n                                </Button>\n                            </Col>\n                            <Col span={7} />\n                        </Row>\n                        <Row style={{ minHeight: 30 }} />\n                    </Spin>\n                </Drawer>\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default Jobs_content;\n","import React, { Component } from \"react\";\nimport { Layout } from \"antd/lib/index\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Deploy_project_content from \"./deploy_project_content\";\nimport Jobs_content from \"./jobs_content\";\n\nconst { Content } = Layout;\n\nclass TaskContent extends Component {\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Switch>\n                    <Route\n                        aclAuthMap={this.props.aclAuthMap}\n                        path=\"/admin/task/deploy_project\"\n                        component={Deploy_project_content}\n                    />\n                    <Route\n                        aclAuthMap={this.props.aclAuthMap}\n                        path=\"/admin/task/jobs\"\n                        component={Jobs_content}\n                    />\n                </Switch>\n            </Content>\n        );\n    }\n}\n\nexport default TaskContent;\n","import React, { Component } from \"react\";\nimport {\n    Layout,\n    Table,\n    Form,\n    message,\n    Button,\n    Tag,\n    Typography,\n    Row,\n    Col,\n    Divider,\n    Modal,\n    Input,\n} from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { getUsersList, postUserCreate, putUserCreate } from \"../../api/user\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\nconst { Text } = Typography;\n\nlet columnStyle = {\n    overFlow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass UserModal extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Modal\n                title=\"新增用户\"\n                destroyOnClose={true}\n                visible={this.props.userModalVisible}\n                onOk={this.props.handleAddUserSubmit}\n                onCancel={this.props.handleAddUserCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={600}\n            >\n                <Form ref={this.props.formRef}>\n                    <Form.Item\n                        label=\"邮箱\"\n                        {...formItemLayout}\n                        name=\"email\"\n                        rules={[\n                            { required: true, message: \"注册邮箱不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"用户名\"\n                        {...formItemLayout}\n                        name=\"username\"\n                        rules={[\n                            { required: true, message: \"用户名不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"初始密码\"\n                        {...formItemLayout}\n                        name=\"password\"\n                        rules={[\n                            { required: true, message: \"用户名不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"职位\"\n                        {...formItemLayout}\n                        name=\"position\"\n                        rules={[{ required: true, message: \"职位不能为空！\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nclass UserManager extends Component {\n    constructor(props) {\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleAddUserSubmit = this.handleAddUserSubmit.bind(this);\n        this.handleAddUserCancel = this.handleAddUserCancel.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"ID\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    width: 60,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"用户名\",\n                    dataIndex: \"username\",\n                    key: \"username\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"邮箱\",\n                    dataIndex: \"email\",\n                    key: \"email\",\n                    className: { columnStyle },\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"职位\",\n                    dataIndex: \"position\",\n                    key: \"position\",\n                    className: { columnStyle },\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"状态\",\n                    dataIndex: \"active\",\n                    key: \"active\",\n                    className: { columnStyle },\n                    width: 100,\n                    render: (value) => {\n                        return value === true ? (\n                            <Text ellipsis={true}>\n                                <Tag color=\"geekblue\">正常</Tag>\n                            </Text>\n                        ) : (\n                            <Text ellipsis={true}>\n                                <Tag color=\"red\">禁用</Tag>\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: 140,\n                    align: \"center\",\n                    render: (text, record) => {\n                        let disabled = false;\n                        if (record.count === 1 && record.email === \"admin@ops.com\") {\n                            disabled = true;\n                        }\n                        return (\n                            <div>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    disabled={disabled}\n                                    onClick={this.updateUserActiveStatus.bind(\n                                        this,\n                                        record.email,\n                                        true,\n                                    )}\n                                >\n                                    启用\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    disabled={disabled}\n                                    onClick={this.updateUserActiveStatus.bind(\n                                        this,\n                                        record.email,\n                                        false,\n                                    )}\n                                >\n                                    禁用\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            add_new_account_visible: false,\n            current_data_id: null,\n            current_user: {},\n            detailDrawerVisible: false,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            userModalVisible: false,\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        getUsersList(this.state.pagination.page, this.state.pagination.pageSize)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"users\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        ID: data[i][\"ID\"],\n                        username: data[i][\"username\"],\n                        email: data[i][\"email\"],\n                        position: data[i][\"position\"],\n                        active: data[i][\"active\"],\n                        count: data.length,\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    handleAdd() {\n        this.setState({ userModalVisible: true });\n    }\n\n    handleAddUserSubmit() {\n        this.formRef.current.validateFields().then((values) => {\n            postUserCreate({\n                ...values,\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        this.setState({ userModalVisible: false });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handleAddUserCancel() {\n        this.setState({ userModalVisible: false });\n    }\n\n    updateUserActiveStatus(email, activeStatus) {\n        putUserCreate({\n            email: email,\n            active: activeStatus,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"操作成功！\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"权限管理\", \"用户管理\", \"用户列表\"]}\n                />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAdd}\n                        >\n                            新 增\n                        </Button>\n                    </Col>\n                </Row>\n                <UserModal\n                    formRef={this.formRef}\n                    userModalVisible={this.state.userModalVisible}\n                    handleAddUserSubmit={this.handleAddUserSubmit}\n                    handleAddUserCancel={this.handleAddUserCancel}\n                />\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default UserManager;\n","import req from '../utils/axios';\n\n/*\n    权限管理 - 新建角色\n */\nconst postAddRole = (data) => {\n    return req.post('roles/addRole', data)\n};\nexport {postAddRole}\n\n/*\n    权限管理 - 更新角色\n */\nconst putUpdateRole = (data) => {\n    return req.put('roles/updateRole', data)\n};\nexport {putUpdateRole}\n\n/*\n    权限管理 - 删除角色\n */\nconst deleteRole = (data) => {\n    return req.delete('roles/deleteRole', data)\n};\nexport {deleteRole}\n\n/*\n    权限管理 - 获取角色的权限链接\n */\nconst getRoleAuthLinks = (roleId) => {\n    return req.get('roles/authLink', {roleId})\n};\nexport {getRoleAuthLinks}\n\n/*\n    权限管理 - 新增权限链接\n */\nconst postAddAuthLink = (data) => {\n    return req.post('roles/authLink', data)\n};\nexport {postAddAuthLink}\n\n/*\n    权限管理 - 新建角色的权限链接\n */\nconst postRoleAuthLinks = (data) => {\n    return req.post('roles/authLinks', data)\n};\nexport {postRoleAuthLinks}\n\n/*\n    权限管理 - 删除权限链接\n */\nconst deleteAuthLink = (data) => {\n    return req.delete('roles/authLink', data)\n};\nexport {deleteAuthLink}\n\n/*\n    权限管理 - 获取角色列表\n */\nconst getRolesList = (page, size) =>{\n    return req.get('roles/list', {page, size})\n};\nexport {getRolesList}\n\n/*\n    权限管理 - 获取角色对应的用户列表\n */\nconst getRoleUserList = (roleId) =>{\n    return req.get('roles/users', {roleId})\n};\nexport {getRoleUserList}\n\n/*\n    权限管理 - 新增角色对应的用户\n */\nconst postRoleUserList = (data) =>{\n    return req.post('roles/users', data)\n};\nexport {postRoleUserList}\n\n/*\n    权限管理 - 获取角色下的服务器资源列表\n */\nconst getRoleResourceList = (roleId, resourceType) =>{\n    return req.get('roles/resources', {roleId, resourceType})\n};\nexport {getRoleResourceList}\n\n/*\n    权限管理 - 新增角色下的服务器资源\n */\nconst postRoleResourcesList = (data) =>{\n    return req.post('roles/resources', data)\n};\nexport {postRoleResourcesList}\n\n/*\n    权限管理 - 获取所有的权限链接\n */\nconst getPermissionsList = (page, size) =>{\n    return req.get('permissions/list', {page, size})\n};\nexport {getPermissionsList}","import React, { Component, Fragment } from \"react\";\nimport {\n    Button,\n    Layout,\n    Table,\n    Modal,\n    Form,\n    Input,\n    Divider,\n    Transfer,\n} from \"antd\";\nimport { message, Row, Col, Spin, Tabs } from \"antd\";\nimport {\n    deleteRole,\n    getRoleAuthLinks,\n    getRoleResourceList,\n    getRolesList,\n    getRoleUserList,\n    postAddRole,\n    postRoleAuthLinks,\n    postRoleResourcesList,\n    postRoleUserList,\n    putUpdateRole,\n} from \"../../api/role\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\nconst confirm = Modal.confirm;\nconst { TabPane } = Tabs;\n\nlet columnStyle = {\n    overFlow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass RoleModal extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n        const { roleActionType } = this.props;\n        let title = \"新建角色\";\n        if (roleActionType === \"add\") {\n            title = \"新建角色\";\n        } else {\n            title = \"编辑角色\";\n        }\n        return (\n            <Fragment>\n                <Modal\n                    title={title}\n                    visible={this.props.roleModalVisible}\n                    closable={true}\n                    onOk={\n                        roleActionType === \"add\"\n                            ? this.props.handleAddRole\n                            : this.props.handleEditRole\n                    }\n                    onCancel={this.props.handleCancelAddRole}\n                    centered={true}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <Form ref={this.props.formRef}>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"角色名称\"\n                            name=\"roleName\"\n                            rules={[\n                                { required: true, message: \"请输入角色名称\" },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入角色名称\" />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"角色描述\"\n                            name=\"description\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请输入角色描述\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入角色描述\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Fragment>\n        );\n    }\n}\n\nclass UserManagerModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            roleId: 0,\n            inGroupData: [],\n            allGroupData: [],\n            transferLodding: false,\n        };\n    }\n\n    componentWillMount() {\n        const { roleId } = this.props;\n        this.loadRoleUsersData(roleId);\n    }\n\n    loadRoleUsersData(roleId) {\n        this.setState({\n            roleId: roleId,\n            transferLodding: true,\n        });\n        getRoleUserList(roleId)\n            .then((res) => {\n                if (res.code === 0) {\n                    let inGroupData = [];\n                    let allGroupData = [];\n                    res.data.all.forEach(function(item) {\n                        allGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            username: item.username,\n                            position: item.position,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        inGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        inGroupData: inGroupData,\n                        allGroupData: allGroupData,\n                        transferLodding: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    filterOption = (inputValue, option) =>\n        option.username.indexOf(inputValue) > -1;\n\n    handleTransferChange(targetKeys, direction, moveKeys) {\n        this.setState({\n            inGroupData: targetKeys,\n        });\n    }\n\n    handleConfirmUserManager() {\n        this.setState({ transferLodding: true });\n        postRoleUserList({\n            roleId: parseInt(this.state.roleId),\n            userIdList: this.state.inGroupData,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ transferLodding: false });\n                    this.props.hideModal();\n                    message.success(\"操作成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        return (\n            <Modal\n                title={\"管理用户角色 - \" + this.props.currentRoleName}\n                destroyOnClose=\"true\"\n                visible={this.props.userManagerModalVisible}\n                onOk={this.handleConfirmUserManager.bind(this)}\n                onCancel={this.props.handleCancelUserManager}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={680}\n                style={{ textAlign: \"center\" }}\n            >\n                <Spin spinning={this.state.transferLodding}>\n                    <Transfer\n                        dataSource={this.state.allGroupData}\n                        showSearch\n                        locale={{\n                            itemUnit: \"人\",\n                            itemsUnit: \"人\",\n                            searchPlaceholder: \"使用姓名搜索\",\n                        }}\n                        filterOption={this.filterOption}\n                        targetKeys={this.state.inGroupData}\n                        onChange={this.handleTransferChange.bind(this)}\n                        render={(item) => item.username + \"-\" + item.position}\n                        listStyle={{\n                            width: 250,\n                            height: \"60vh\",\n                            textAlign: \"left\",\n                        }}\n                        operations={[\"加入角色组\", \"移出角色组\"]}\n                    />\n                </Spin>\n            </Modal>\n        );\n    }\n}\n\nclass ResourceManagerModal extends Component {\n    constructor(props) {\n        super(props);\n        this.handleConfirmRoleResourceManager = this.handleConfirmRoleResourceManager.bind(\n            this,\n        );\n        this.state = {\n            roleId: 0,\n            tabSpinning: false,\n            ecsInGroupData: [],\n            ecsAllGroupData: [],\n            rdsInGroupData: [],\n            rdsAllGroupData: [],\n            kvInGroupData: [],\n            kvAllGroupData: [],\n            slbInGroupData: [],\n            slbAllGroupData: [],\n            otherAllGroupData: [],\n            otherInGroupData: [],\n        };\n    }\n\n    componentWillMount() {\n        const { roleId } = this.props;\n        this.setState({ roleId });\n        this.loadRoleEcsData(roleId);\n        this.loadRoleRdsData(roleId);\n        this.loadRoleKvData(roleId);\n        this.loadRoleSlbData(roleId);\n        this.loadRoleOtherResData(roleId);\n    }\n\n    loadRoleEcsData(roleId) {\n        this.setState({\n            ecsTransferLodding: true,\n        });\n        let ecsAllGroupData = [];\n        let ecsInGroupData = [];\n        getRoleResourceList(roleId, \"ecs\")\n            .then((res) => {\n                if (res.code === 0) {\n                    res.data.all.forEach(function(item) {\n                        ecsAllGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            instance_name: item.InstanceName,\n                            ip:\n                                item.InnerIpAddress +\n                                \" \" +\n                                item.PublicIpAddress,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        ecsInGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        ecsAllGroupData: ecsAllGroupData,\n                        ecsInGroupData: ecsInGroupData,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({ecsTransferLodding: false})\n            })\n    }\n\n    loadRoleRdsData(roleId) {\n        this.setState({\n            rdsTransferLodding: true,\n        });\n        let rdsAllGroupData = [];\n        let rdsInGroupData = [];\n        getRoleResourceList(roleId, \"rds\")\n            .then((res) => {\n                if (res.code === 0) {\n                    res.data.all.forEach(function(item) {\n                        rdsAllGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            db_instance_description: item.DBInstanceDescription,\n                            db_instance_id: item.DBInstanceId,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        rdsInGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        rdsAllGroupData: rdsAllGroupData,\n                        rdsInGroupData: rdsInGroupData,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({rdsTransferLodding: false})\n            })\n    }\n\n    loadRoleKvData(roleId) {\n        this.setState({\n            kvTransferLodding: true,\n        });\n        let kvAllGroupData = [];\n        let kvInGroupData = [];\n        getRoleResourceList(roleId, \"kv\")\n            .then((res) => {\n                if (res.code === 0) {\n                    res.data.all.forEach(function(item) {\n                        kvAllGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            instance_name: item.InstanceName,\n                            connection_domain: item.ConnectionDomain,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        kvInGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        kvAllGroupData,\n                        kvInGroupData,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({kvTransferLodding: false})\n            })\n    }\n\n    loadRoleSlbData(roleId) {\n        this.setState({\n            slbTransferLodding: true,\n        });\n        let slbAllGroupData = [];\n        let slbInGroupData = [];\n        getRoleResourceList(roleId, \"slb\")\n            .then((res) => {\n                if (res.code === 0) {\n                    res.data.all.forEach(function(item) {\n                        slbAllGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            load_balance_name: item.LoadBalancerName,\n                            address: item.Address,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        slbInGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        slbAllGroupData,\n                        slbInGroupData,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({slbTransferLodding: false})\n            })\n    }\n\n    loadRoleOtherResData(roleId) {\n        this.setState({\n            otherResTransferLodding: true,\n        });\n        let otherAllGroupData = [];\n        let otherInGroupData = [];\n        getRoleResourceList(roleId, \"other\")\n            .then((res) => {\n                if (res.code === 0) {\n                    res.data.all.forEach(function(item) {\n                        otherAllGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            instance_name: item.InstanceName,\n                            res_type: item.ResType,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        otherInGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        otherAllGroupData: otherAllGroupData,\n                        otherInGroupData: otherInGroupData,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({otherResTransferLodding: false})\n            })\n    }\n\n    ecsFilterOption = (inputValue, option) =>\n        option.instance_name.indexOf(inputValue) > -1 ||\n        option.ip.indexOf(inputValue) > -1;\n\n    rdsFilterOption = (inputValue, option) =>\n        option.db_instance_description.indexOf(inputValue) > -1 ||\n        option.db_instance_id.indexOf(inputValue) > -1;\n\n    kvFilterOption = (inputValue, option) =>\n        option.instance_name.indexOf(inputValue) > -1 ||\n        option.connection_domain.indexOf(inputValue) > -1;\n\n    slbFilterOption = (inputValue, option) =>\n        option.load_balance_name.indexOf(inputValue) > -1 ||\n        option.address.indexOf(inputValue) > -1;\n\n    otherResFilterOption = (inputValue, option) =>\n        option.instance_name.indexOf(inputValue) > -1 ||\n        option.address.indexOf(inputValue) > -1;\n\n    handleResTransferChange(resType, targetKeys) {\n        switch (resType) {\n            case \"ecs\":\n                this.setState({\n                    ecsInGroupData: targetKeys,\n                });\n                break;\n            case \"rds\":\n                this.setState({\n                    rdsInGroupData: targetKeys,\n                });\n                break;\n            case \"kv\":\n                this.setState({\n                    kvInGroupData: targetKeys,\n                });\n                break;\n            case \"slb\":\n                this.setState({\n                    slbInGroupData: targetKeys,\n                });\n                break;\n            case \"other\":\n                this.setState({\n                    otherInGroupData: targetKeys,\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    handleTabClick = (e) => {\n        // if(e===\"ecs\"){\n        //     this.loadRoleEcsData()\n        // } else if(e===\"rds\") {\n        //     this.loadRoleRdsData()\n        // } else if(e===\"kv\") {\n        //     this.loadRoleKvData()\n        // } else {\n        //     this.loadRoleSlbData()\n        // }\n    };\n\n    handleConfirmRoleResourceManager() {\n        this.setState({ tabSpinning: true });\n        postRoleResourcesList({\n            roleId: parseInt(this.state.roleId),\n            ecsIdList: this.state.ecsInGroupData,\n            rdsIdList: this.state.rdsInGroupData,\n            kvIdList: this.state.kvInGroupData,\n            slbIdList: this.state.slbInGroupData,\n            otherIdList: this.state.otherInGroupData,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ tabSpinning: false });\n                    this.props.hideModal();\n                    message.success(\"操作成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        return (\n            <Modal\n                title={\"管理角色组关联资源 - \" + this.props.currentRoleName}\n                destroyOnClose=\"true\"\n                visible={this.props.resourceManagerModalVisible}\n                onOk={this.handleConfirmRoleResourceManager}\n                onCancel={this.props.handleCancelResourceManager}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={1000}\n                style={{ textAlign: \"center\" }}\n            >\n                <Spin spinning={this.state.tabSpinning} tip=\"请求处理中...\">\n                    <Tabs\n                        defaultActiveKey=\"ecs\"\n                        tabPosition=\"left\"\n                        onTabClick={this.handleTabClick.bind(this)}\n                    >\n                        <TabPane tab=\"云服务器\" key=\"ecs\">\n                            <Spin spinning={this.state.ecsTransferLodding}>\n                                <Transfer\n                                    showSearch\n                                    locale={{\n                                        itemUnit: \"台\",\n                                        itemsUnit: \"台\",\n                                        searchPlaceholder:\n                                            \"使用ip或机器名称搜索\",\n                                    }}\n                                    filterOption={this.ecsFilterOption}\n                                    dataSource={this.state.ecsAllGroupData}\n                                    targetKeys={this.state.ecsInGroupData}\n                                    onChange={this.handleResTransferChange.bind(\n                                        this,\n                                        \"ecs\",\n                                    )}\n                                    render={(item) =>\n                                        item.ip + \" \" + item.instance_name\n                                    }\n                                    listStyle={{\n                                        width: 350,\n                                        height: \"60vh\",\n                                        textAlign: \"left\",\n                                    }}\n                                    operations={[\"加入角色组\", \"移出角色组\"]}\n                                />\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"云数据库\" key=\"rds\">\n                            <Spin spinning={this.state.rdsTransferLodding}>\n                                <Transfer\n                                    showSearch\n                                    locale={{\n                                        itemUnit: \"台\",\n                                        itemsUnit: \"台\",\n                                        searchPlaceholder:\n                                            \"使用连接串或名称搜索\",\n                                    }}\n                                    filterOption={this.rdsFilterOption}\n                                    dataSource={this.state.rdsAllGroupData}\n                                    targetKeys={this.state.rdsInGroupData}\n                                    onChange={this.handleResTransferChange.bind(\n                                        this,\n                                        \"rds\",\n                                    )}\n                                    render={(item) =>\n                                        item.db_instance_description +\n                                        \" \" +\n                                        item.db_instance_id\n                                    }\n                                    listStyle={{\n                                        width: 350,\n                                        height: \"60vh\",\n                                        textAlign: \"left\",\n                                    }}\n                                    operations={[\"加入角色组\", \"移出角色组\"]}\n                                />\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"KVStore\" key=\"kv\">\n                            <Spin spinning={this.state.kvTransferLodding}>\n                                <Transfer\n                                    showSearch\n                                    locale={{\n                                        itemUnit: \"台\",\n                                        itemsUnit: \"台\",\n                                        searchPlaceholder:\n                                            \"使用连接串或名称搜索\",\n                                    }}\n                                    filterOption={this.kvFilterOption}\n                                    dataSource={this.state.kvAllGroupData}\n                                    targetKeys={this.state.kvInGroupData}\n                                    onChange={this.handleResTransferChange.bind(\n                                        this,\n                                        \"kv\",\n                                    )}\n                                    render={(item) =>\n                                        item.instance_name +\n                                        \" \" +\n                                        item.connection_domain\n                                    }\n                                    listStyle={{\n                                        width: 350,\n                                        height: \"60vh\",\n                                        textAlign: \"left\",\n                                    }}\n                                    operations={[\"加入角色组\", \"移出角色组\"]}\n                                />\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"SLB\" key=\"slb\">\n                            <Spin spinning={this.state.slbTransferLodding}>\n                                <Transfer\n                                    showSearch\n                                    locale={{\n                                        itemUnit: \"个\",\n                                        itemsUnit: \"个\",\n                                        searchPlaceholder: \"使用ip或名称搜索\",\n                                    }}\n                                    filterOption={this.slbFilterOption}\n                                    dataSource={this.state.slbAllGroupData}\n                                    targetKeys={this.state.slbInGroupData}\n                                    onChange={this.handleResTransferChange.bind(\n                                        this,\n                                        \"slb\",\n                                    )}\n                                    render={(item) =>\n                                        item.load_balance_name +\n                                        \" \" +\n                                        item.address\n                                    }\n                                    listStyle={{\n                                        width: 350,\n                                        height: \"60vh\",\n                                        textAlign: \"left\",\n                                    }}\n                                    operations={[\"加入角色组\", \"移出角色组\"]}\n                                />\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"其它资源\" key=\"other\">\n                            <Spin spinning={this.state.otherResTransferLodding}>\n                                <Transfer\n                                    showSearch\n                                    locale={{\n                                        itemUnit: \"个\",\n                                        itemsUnit: \"个\",\n                                        searchPlaceholder: \"使用实例名称搜索\",\n                                    }}\n                                    filterOption={this.otherResFilterOption}\n                                    dataSource={this.state.otherAllGroupData}\n                                    targetKeys={this.state.otherInGroupData}\n                                    onChange={this.handleResTransferChange.bind(\n                                        this,\n                                        \"other\",\n                                    )}\n                                    render={(item) =>\n                                        item.res_type + \" \" + item.instance_name\n                                    }\n                                    listStyle={{\n                                        width: 350,\n                                        height: \"60vh\",\n                                        textAlign: \"left\",\n                                    }}\n                                    operations={[\"加入角色组\", \"移出角色组\"]}\n                                />\n                            </Spin>\n                        </TabPane>\n                    </Tabs>\n                </Spin>\n            </Modal>\n        );\n    }\n}\n\nclass AuthLinkManagerModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            roleId: 0,\n            inGroupData: [],\n            allGroupData: [],\n            transferLodding: false,\n        };\n    }\n\n    componentWillMount() {\n        const { roleId } = this.props;\n        this.loadRoleAuthLinksData(roleId);\n    }\n\n    loadRoleAuthLinksData(roleId) {\n        this.setState({\n            roleId: roleId,\n            transferLodding: true,\n        });\n        getRoleAuthLinks(roleId)\n            .then((res) => {\n                if (res.code === 0) {\n                    let inGroupData = [];\n                    let allGroupData = [];\n                    res.data.all.forEach(function(item) {\n                        allGroupData.push({\n                            key: String(item.Id),\n                            id: String(item.Id),\n                            name: item.name,\n                            url_path: item.urlPath,\n                            auth_type: item.authType,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        inGroupData.push(String(item.Id));\n                    });\n                    this.setState({\n                        inGroupData: inGroupData,\n                        allGroupData: allGroupData,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({transferLodding: false})\n            })\n    }\n\n    filterOption = (inputValue, option) =>\n        option.name.indexOf(inputValue) > -1 ||\n        option.url_path.indexOf(inputValue) > -1;\n\n    handleTransferChange(targetKeys, direction, moveKeys) {\n        this.setState({\n            inGroupData: targetKeys,\n        });\n    }\n\n    handleConfirmUserManager() {\n        this.setState({ transferLodding: true });\n        postRoleAuthLinks({\n            roleId: parseInt(this.state.roleId),\n            authLinkIdList: this.state.inGroupData,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ transferLodding: false });\n                    this.props.hideModal();\n                    message.success(\"操作成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    }\n\n    render() {\n        return (\n            <Modal\n                title={\"管理角色对应权限 - \" + this.props.currentRoleName}\n                destroyOnClose=\"true\"\n                visible={this.props.authLinkManagerModalVisible}\n                onOk={this.handleConfirmUserManager.bind(this)}\n                onCancel={this.props.handleCancelAuthLinkManager}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={800}\n                style={{ textAlign: \"center\" }}\n            >\n                <Spin spinning={this.state.transferLodding}>\n                    <Transfer\n                        dataSource={this.state.allGroupData}\n                        showSearch\n                        locale={{\n                            itemUnit: \"条\",\n                            itemsUnit: \"条\",\n                            searchPlaceholder: \"使用名称或路径搜索\",\n                        }}\n                        filterOption={this.filterOption}\n                        targetKeys={this.state.inGroupData}\n                        onChange={this.handleTransferChange.bind(this)}\n                        render={(item) => item.auth_type + \":\" + item.name + \"「\" + item.url_path+\"」\"}\n                        listStyle={{\n                            width: 300,\n                            height: \"60vh\",\n                            textAlign: \"left\",\n                        }}\n                        operations={[\"加入角色组\", \"移出角色组\"]}\n                    />\n                </Spin>\n            </Modal>\n        );\n    }\n}\n\nclass RolesManager extends Component {\n    constructor(props) {\n        super(props);\n        this.handleAddRole = this.handleAddRole.bind(this);\n        this.handleEditRole = this.handleEditRole.bind(this);\n        this.handleCancelAddRole = this.handleCancelAddRole.bind(this);\n        this.createRole = this.createRole.bind(this);\n        this.roleEdit = this.roleEdit.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"ID\",\n                    dataIndex: \"Id\",\n                    key: \"Id\",\n                    width: 60,\n                },\n                {\n                    title: \"角色名\",\n                    dataIndex: \"name\",\n                    key: \"name\",\n                    width: 160,\n                },\n                {\n                    title: \"角色描述\",\n                    dataIndex: \"description\",\n                    key: \"description\",\n                    className: { columnStyle },\n                    width: 160,\n                },\n                {},\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: 430,\n                    align: \"center\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    size=\"small\"\n                                    onClick={this.managerUser.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    管理用户\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    size=\"small\"\n                                    onClick={this.managerAuthLink.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    管理权限\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    size=\"small\"\n                                    onClick={this.managerResource.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    管理资源\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.roleEdit.bind(this, record)}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    onClick={this.confirmDeleteRole.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    删除\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            roleModalVisible: false,\n            roleActionType: \"add\",\n            editRoleId: 0,\n            userManagerModalVisible: false,\n            resourceManagerModalVisible: false,\n            authLinkManagerModalVisible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    managerUser = (record) => {\n        this.setState({\n            roleId: record.Id,\n            userManagerModalVisible: true,\n            currentRoleName: record.name,\n        });\n    };\n\n    confirmDeleteRole = (record) => {\n        let that = this;\n        confirm({\n            title: \"危险操作提示\",\n            content:\n                \"删除该角色组时该角色组和与之绑定的所有用户的关系、所有资源的关系和权限链接的关系也会被删除，请谨慎操作！\",\n            okText: \"确认删除\",\n            okType: \"danger\",\n            cancelText: \"取消\",\n            onOk() {\n                deleteRole({\n                    id: record[\"Id\"],\n                })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            message.success(\"删除成功\");\n                            that.refreshTableData();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n            },\n            onCancel() {},\n        });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    managerResource = (record) => {\n        this.setState(() => ({\n            roleId: record.Id,\n            resourceManagerModalVisible: true,\n            currentRoleName: record.name,\n        }));\n    };\n\n    managerAuthLink = (record) => {\n        this.setState(() => ({\n            roleId: record.Id,\n            authLinkManagerModalVisible: true,\n            currentRoleName: record.name,\n        }));\n    };\n\n    createRole() {\n        this.setState(() => ({\n            roleActionType: \"add\",\n            roleModalVisible: true,\n        }));\n    }\n\n    roleEdit(record) {\n        this.formRef.current.setFieldsValue({\n            roleName: record.name,\n            description: record.description,\n        });\n        this.setState(() => ({\n            roleActionType: \"update\",\n            roleModalVisible: true,\n            editRoleId: record.Id,\n        }));\n    }\n\n    handleAddRole() {\n        this.formRef.current.validateFields().then((values) => {\n            postAddRole(values)\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"创建成功\");\n                        this.setState({\n                            roleModalVisible: false,\n                        });\n                        this.formRef.current.resetFields();\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handleEditRole() {\n        this.formRef.current.validateFields().then((values) => {\n            putUpdateRole({\n                ...values,\n                id: this.state.editRoleId,\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"修改成功\");\n                        this.setState({\n                            roleModalVisible: false,\n                        });\n                        this.formRef.current.resetFields();\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handleCancelAddRole() {\n        this.setState(() => ({\n            roleModalVisible: false,\n            userManagerModalVisible: false,\n            resourceManagerModalVisible: false,\n            authLinkManagerModalVisible: false,\n        }));\n    }\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        getRolesList(this.state.pagination.page, this.state.pagination.pageSize)\n            .then((res) => {\n                if(res.code===0) {\n                    const pagination = this.state.pagination;\n                    pagination.total = parseInt(res.data.total);\n                    pagination.page = parseInt(res.data.page);\n                    pagination.showTotal(parseInt(res.data.total));\n                    this.setState({\n                        pagination,\n                    });\n                    this.setState({ tableData: res[\"data\"][\"roles\"]});\n                } else  {\n                    message.error(res.msg);\n                }\n                this.setState({tableLoading: false })\n            })\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"权限管理\", \"角色管理\", \"角色列表\"]}\n                />\n                <div style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Row>\n                        <Col>\n                            <Button type=\"primary\" onClick={this.createRole}>\n                                新建角色\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n                <RoleModal\n                    formRef={this.formRef}\n                    roleModalVisible={this.state.roleModalVisible}\n                    roleActionType={this.state.roleActionType}\n                    handleAddRole={this.handleAddRole}\n                    handleEditRole={this.handleEditRole}\n                    handleCancelAddRole={this.handleCancelAddRole}\n                />\n                {this.state.userManagerModalVisible ? (\n                    <UserManagerModal\n                        roleId={this.state.roleId}\n                        userManagerModalVisible={\n                            this.state.userManagerModalVisible\n                        }\n                        currentRoleName={this.state.currentRoleName}\n                        hideModal={() => {\n                            this.setState({ userManagerModalVisible: false });\n                        }}\n                        handleCancelUserManager={this.handleCancelAddRole.bind(\n                            this,\n                        )}\n                    />\n                ) : (\n                    \"\"\n                )}\n                {this.state.resourceManagerModalVisible ? (\n                    <ResourceManagerModal\n                        roleId={this.state.roleId}\n                        resourceManagerModalVisible={\n                            this.state.resourceManagerModalVisible\n                        }\n                        currentRoleName={this.state.currentRoleName}\n                        hideModal={() => {\n                            this.setState({\n                                resourceManagerModalVisible: false,\n                            });\n                        }}\n                        handleCancelResourceManager={this.handleCancelAddRole.bind(\n                            this,\n                        )}\n                    />\n                ) : (\n                    \"\"\n                )}\n                {this.state.authLinkManagerModalVisible ? (\n                    <AuthLinkManagerModal\n                        roleId={this.state.roleId}\n                        authLinkManagerModalVisible={\n                            this.state.authLinkManagerModalVisible\n                        }\n                        currentRoleName={this.state.currentRoleName}\n                        hideModal={() => {\n                            this.setState({\n                                authLinkManagerModalVisible: false,\n                            });\n                        }}\n                        handleCancelAuthLinkManager={this.handleCancelAddRole.bind(\n                            this,\n                        )}\n                    />\n                ) : (\n                    \"\"\n                )}\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    rowClassName=\"fixedHeight\"\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default RolesManager;\n","import React, { Component, Fragment } from \"react\";\nimport {\n    Layout,\n    Table,\n    Form,\n    Popconfirm,\n    Row,\n    Col,\n    Button,\n    Modal,\n    Input,\n    message,\n    Tag,\n} from \"antd\";\nimport {\n    deleteAuthLink,\n    getPermissionsList,\n    postAddAuthLink,\n} from \"../../api/role\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\n\nlet columnStyle = {\n    overFlow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass AuthLinkModal extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Fragment>\n                <Modal\n                    title=\"新建权限链接\"\n                    destroyOnClose=\"true\"\n                    visible={this.props.authLinkModalVisible}\n                    onOk={this.props.handleAddAuthLink}\n                    onCancel={this.props.handleCancelAddAuthLink}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <Form ref={this.props.formRef}>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"权限名称\"\n                            name=\"name\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请输入路径权限名称\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入路径权限名称\" />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"权限描述\"\n                            name=\"description\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请输入权限描述\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入权限描述\" />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"权限链接\"\n                            name=\"path\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请输入权限链接\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入权限链接\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Fragment>\n        );\n    }\n}\n\nclass PermissionsManager extends Component {\n    constructor(props) {\n        super(props);\n        this.refreshTableData = this.refreshTableData.bind(this);\n        this.createAuthLink = this.createAuthLink.bind(this);\n        this.handleAddAuthLink = this.handleAddAuthLink.bind(this);\n        this.handleCancelAddAuthLink = this.handleCancelAddAuthLink.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"ID\",\n                    dataIndex: \"Id\",\n                    key: \"Id\",\n                    width: 60,\n                },\n                {\n                    title: \"权限类型\",\n                    dataIndex: \"authType\",\n                    key: \"authType\",\n                    width: 100,\n                    render: (text => {\n                        if(text===\"菜单\") {\n                            return <Tag color=\"volcano\">{text}</Tag>;\n                        }\n                        return <Tag color=\"blue\">{text}</Tag>;\n                    })\n                },\n                {\n                    title: \"权限名称\",\n                    dataIndex: \"name\",\n                    key: \"name\",\n                    width: 200,\n                },\n                {\n                    title: \"权限描述\",\n                    dataIndex: \"description\",\n                    key: \"description\",\n                    className: { columnStyle },\n                    width: 260,\n                },\n                {\n                    title: \"权限路径\",\n                    dataIndex: \"urlPath\",\n                    key: \"urlPath\",\n                    className: { columnStyle },\n                    width: 360,\n                },\n                {},\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: 60,\n                    align: \"center\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Popconfirm\n                                    disabled={record['canDelete']===0}\n                                    title=\"确定删除该项内容吗?\"\n                                    onConfirm={this.confirmDeleteAuthLink.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\" disabled={record['canDelete']===0}>\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            authLinkModalVisible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    confirmDeleteAuthLink = (e) => {\n        deleteAuthLink({\n            id: e.Id,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        getPermissionsList(\n            this.state.pagination.page,\n            this.state.pagination.pageSize,\n        )\n            .then((res) => {\n                if(res.code===0) {\n                    const pagination = this.state.pagination;\n                    pagination.total = parseInt(res.data.total);\n                    pagination.page = parseInt(res.data.page);\n                    pagination.showTotal(parseInt(res.data.total));\n                    this.setState({\n                        pagination,\n                    });\n                    this.setState({ tableData: res[\"data\"][\"permissions\"]});\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({tableLoading: false });\n            })\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    createAuthLink() {\n        this.setState({\n            authLinkModalVisible: true,\n        });\n    }\n\n    handleCancelAddAuthLink() {\n        this.setState({\n            authLinkModalVisible: false,\n        });\n    }\n\n    handleAddAuthLink() {\n        this.formRef.current.validateFields().then((values) => {\n            postAddAuthLink(values)\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"创建成功\");\n                        this.setState({\n                            authLinkModalVisible: false,\n                        });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"权限管理\", \"链接权限\", \"权限链接列表\"]}\n                />\n                {/*<div style={{ padding: \"0px 0px 10px 0px\" }}>*/}\n                {/*    <Row>*/}\n                {/*        <Col>*/}\n                {/*            <Button*/}\n                {/*                type=\"primary\"*/}\n                {/*                onClick={this.createAuthLink}*/}\n                {/*            >*/}\n                {/*                新建权限链接*/}\n                {/*            </Button>*/}\n                {/*        </Col>*/}\n                {/*    </Row>*/}\n                {/*</div>*/}\n                <AuthLinkModal\n                    formRef={this.formRef}\n                    authLinkModalVisible={this.state.authLinkModalVisible}\n                    handleAddAuthLink={this.handleAddAuthLink}\n                    handleCancelAddAuthLink={this.handleCancelAddAuthLink}\n                />\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default PermissionsManager;\n","import React, { Component } from 'react';\nimport {Layout, Input, Form, Button, message} from 'antd';\nimport {postUpdatePassword} from \"../../api/user\";\n\nconst { Content } = Layout;\n\n\nclass PasswordManager extends Component {\n\n    constructor(props) {\n        super(props);\n        this.setState({\n\n        });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('两次密码不一致!');\n        } else {\n            callback();\n        }\n    };\n\n    updatePassword = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                let reqData = {\n                    \"password\": values['password'],\n                    \"confirm_password\": values['confirm_password']\n                };\n                postUpdatePassword(reqData).then((res)=>{\n                    if(res.code === 0){\n                        message.success(\"密码修改成功!\");\n                    }\n                }).catch((err)=>{\n                    console.log(err)\n                });\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 2 },\n            wrapperCol: { span: 6 },\n        };\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <Form onSubmit={this.updatePassword}>\n                    <Form.Item label=\"新密码\" hasFeedback {...formItemLayout}>\n                        {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入新密码',\n                                }\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item label=\"确认密码\" hasFeedback {...formItemLayout}>\n                        {getFieldDecorator('confirm_password', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请确认新密码',\n                                },\n                                {\n                                    validator: this.compareToFirstPassword\n                                }\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} style={{ textAlign: 'center' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            确 认\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Content>\n        );\n    }\n    \n}\n\nexport default PasswordManager;","import React, { Component } from \"react\";\nimport {Button, Card, Col, Layout, message, Row, Statistic} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    getAliyunStatisData,\n    getSyncAliyunEcs,\n    getSyncAliyunKv,\n    getSyncAliyunRds,\n    getSyncAliyunSlb\n} from \"../../api/data_api\";\n\nconst { Content } = Layout;\n\nclass SyncAliyunContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.syncAliyunEcs = this.syncAliyunEcs.bind(this);\n        this.syncAliyunRds = this.syncAliyunRds.bind(this);\n        this.syncAliyunKv = this.syncAliyunKv.bind(this);\n        this.syncAliyunSlb = this.syncAliyunSlb.bind(this);\n        this.state = {\n            syncEcsLoading: false,\n            syncRdsLoading: false,\n            syncKvLoading: false,\n            syncSlbLoading: false,\n        }\n    }\n\n    componentDidMount() {\n        this.syncAliyunStatisData();\n    }\n\n    syncAliyunStatisData() {\n        getAliyunStatisData().then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    ecsCount: res.data.ecsCount,\n                    rdsCount: res.data.rdsCount,\n                    kvCount: res.data.kvCount,\n                    slbCount: res.data.slbCount,\n                })\n            } else {\n                message.error(\"获取钉钉统计数据异常\")\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        })\n    }\n\n    syncAliyunEcs() {\n        const loadingType = \"syncEcsLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunEcs().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    syncAliyunRds() {\n        const loadingType = \"syncRdsLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunRds().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    syncAliyunKv() {\n        const loadingType = \"syncKvLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunKv().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    syncAliyunSlb() {\n        const loadingType = \"syncSlbLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunSlb().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"数据管理\", \"阿里云数据\"]} />\n                <div style={{ marginBottom: 20 }}>\n                    <Card size=\"small\" title=\"平台数据总览\">\n                        <Row>\n                            <Col span={5}>\n                                <Statistic title=\"ECS总数\" value={this.state.ecsCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncEcsLoading}\n                                        onClick={this.syncAliyunEcs}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                            <Col span={5}>\n                                <Statistic title=\"RDS总数\" value={this.state.rdsCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncRdsLoading}\n                                        onClick={this.syncAliyunRds}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                            <Col span={5}>\n                                <Statistic title=\"Redis总数\" value={this.state.kvCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncKvLoading}\n                                        onClick={this.syncAliyunKv}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                            <Col span={5}>\n                                <Statistic title=\"SLB总数\" value={this.state.slbCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncSlbLoading}\n                                        onClick={this.syncAliyunSlb}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Card>\n                </div>\n            </Content>\n        )\n    }\n\n}\n\nexport default SyncAliyunContent;","import req from \"../utils/axios\";\n\nconst SyncTimeOut = 90000;\n\nconst getSyncAliyunEcs = (params) =>{\n    return req.get('/data/syncAliyunEcs', params, SyncTimeOut)\n};\nexport {getSyncAliyunEcs}\n\nconst getSyncAliyunRds = (params) =>{\n    return req.get('/data/syncAliyunRds', params, SyncTimeOut)\n};\nexport {getSyncAliyunRds}\n\nconst getSyncAliyunKv = (params) =>{\n    return req.get('/data/syncAliyunKv', {}, SyncTimeOut)\n};\nexport {getSyncAliyunKv}\n\nconst getSyncAliyunSlb = (params) =>{\n    return req.get('/data/syncAliyunSlb', {}, SyncTimeOut)\n};\nexport {getSyncAliyunSlb}\n\nconst getAliyunStatisData = (params) =>{\n    return req.get('/data/syncAliyunStatisData')\n};\nexport {getAliyunStatisData}","import React, { Component } from \"react\";\nimport {\n    Button,\n    Col,\n    Input,\n    Row,\n    Table,\n    Layout,\n    DatePicker,\n    Select,\n    message,\n    Modal,\n    Form,\n    Typography,\n    Divider,\n    Popconfirm,\n    Tooltip,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteCloudOtherRes,\n    getCloudAccouts,\n    getCloudOtherRes,\n    postCloudOtherRes,\n    putCloudOtherRes,\n} from \"../../api/cloud\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\n\nconst { Option } = Select;\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\n\nclass OtherInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.switchChange = this.switchChange.bind(this);\n        this.state = {\n            sitesData: [],\n            renewSwitch: true,\n            cloudAccountList: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadCloudAccountData();\n    }\n\n    loadCloudAccountData() {\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    switchChange(value) {\n        this.setState({ renewSwitch: value });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 17 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n        const { actionType } = this.props;\n        let actionName = \"新增\";\n        if (actionType === \"update\") {\n            actionName = \"编辑\";\n        }\n        return (\n            <Modal\n                title={actionName + \" - 资源信息\"}\n                destroyOnClose={true}\n                visible={this.props.server_info_modal_visible}\n                onOk={this.props.handlePostServerInfoSubmit}\n                onCancel={this.props.handlePostServerInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={1000}\n            >\n                <Form ref={this.props.formRef}>\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"资源类型\"\n                                {...formItemLayout}\n                                name=\"resType\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"请选择资源类型\",\n                                    },\n                                ]}\n                            >\n                                <Select>\n                                    <Option value=\"MongoDB\">MongoDB</Option>\n                                    <Option value=\"MaxCompute\">\n                                        MaxCompute\n                                    </Option>\n                                    <Option value=\"SSL\">SSL</Option>\n                                    <Option value=\"带宽\">带宽</Option>\n                                    <Option value=\"后付费\">后付费</Option>\n                                    <Option value=\"弹性IP\">弹性IP</Option>\n                                    <Option value=\"Memcached\">Memcached</Option>\n                                    <Option value=\"Kafka\">Kafka</Option>\n                                    <Option value=\"NAS\">NAS</Option>\n                                    <Option value=\"PolarDB\">PolarDB</Option>\n                                    <Option value=\"HBase\">HBase</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"实例ID\"\n                                {...formItemLayout}\n                                name=\"instanceId\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"实例名称\"\n                                {...formItemLayout}\n                                name=\"instanceName\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"请输入实例名称\",\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"连接地址\"\n                                {...formItemLayout}\n                                name=\"connections\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"区域\"\n                                {...formItemLayout}\n                                name=\"region\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"Engine\"\n                                {...formItemLayout}\n                                name=\"engine\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"CPU\"\n                                {...formItemLayout}\n                                name=\"cpu\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"磁盘\"\n                                {...formItemLayout}\n                                name=\"disk\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"内存\"\n                                {...formItemLayout}\n                                name=\"memory\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"带宽\"\n                                {...formItemLayout}\n                                name=\"bandwidth\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"创建时间\"\n                                {...formItemLayout}\n                                name=\"createTime\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"请输入创建时间\",\n                                    },\n                                ]}\n                            >\n                                <DatePicker\n                                    format=\"YYYY-MM-DD\"\n                                    style={{ width: \"100%\" }}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"过期时间\"\n                                {...formItemLayout}\n                                name=\"expiredTime\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"请输入过期时间\",\n                                    },\n                                ]}\n                            >\n                                <DatePicker\n                                    format=\"YYYY-MM-DD\"\n                                    style={{ width: \"100%\" }}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"云账号\"\n                                {...formItemLayout}\n                                name=\"cloudAccountId\"\n                            >\n                                <Select>{accountOptions}</Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nclass OtherContent extends Component {\n    constructor(props) {\n        super(props);\n        this.keywordOnChange = this.keywordOnChange.bind(this);\n        this.handleQuery = this.handleQuery.bind(this);\n        this.handlePostOtherInfoSubmit = this.handlePostOtherInfoSubmit.bind(\n            this,\n        );\n        this.handlePostOtherInfoCancel = this.handlePostOtherInfoCancel.bind(\n            this,\n        );\n        this.changePage = this.changePage.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleResTypeChange = this.handleResTypeChange.bind(this);\n        this.handleCloudAccountChange = this.handleCloudAccountChange.bind(\n            this,\n        );\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"资源类型\",\n                    dataIndex: \"ResType\",\n                    key: \"ResType\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例名称\",\n                    dataIndex: \"InstanceName\",\n                    key: \"InstanceName\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true}>{value}</Text>\n                            </Tooltip>\n                        );\n                    },\n                },\n                {\n                    title: \"云账号\",\n                    dataIndex: \"CloudAccountName\",\n                    key: \"CloudAccountName\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例id\",\n                    dataIndex: \"InstanceId\",\n                    key: \"InstanceId\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"访问地址\",\n                    dataIndex: \"Connections\",\n                    key: \"Connections\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return (\n                            <Paragraph\n                                style={{ marginBottom: 0 }}\n                                copyable={value !== \"\"}\n                            >\n                                {value}\n                            </Paragraph>\n                        );\n                    },\n                },\n                {\n                    title: \"Region\",\n                    dataIndex: \"Region\",\n                    key: \"Region\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"Engine\",\n                    dataIndex: \"Engine\",\n                    key: \"Engine\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"Cpu\",\n                    dataIndex: \"Cpu\",\n                    key: \"Cpu\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"带宽\",\n                    dataIndex: \"Bandwidth\",\n                    key: \"Bandwidth\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    dataIndex: \"CreateTime\",\n                    key: \"CreateTime\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"过期时间\",\n                    dataIndex: \"ExpiredTime\",\n                    key: \"ExpiredTime\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    className: \"small_font\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.serverEdit.bind(this, record)}\n                                    disabled={!this.props.aclAuthMap[\"PUT:/cloud/other\"]}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.serverDelete.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                    disabled={!this.props.aclAuthMap[\"DELETE:/cloud/other\"]}\n                                >\n                                    <Button type=\"danger\" size=\"small\" disabled={!this.props.aclAuthMap[\"DELETE:/cloud/other\"]}>\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            actionType: \"add\",\n            editId: 0,\n            extraInfoModalVisible: false,\n            other_info_modal_visible: false,\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            cloudAccountList: [],\n            queryResType: \"所有\",\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n        };\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    }\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            queryKeyword: this.state.queryKeyword,\n            queryResType: this.state.queryResType,\n            queryExpiredTime:\n                this.state.queryExpiredTime === null\n                    ? null\n                    : this.state.queryExpiredTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            queryCloudAccount: this.state.queryCloudAccount,\n        };\n        getCloudOtherRes(queryParams)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination: { ...pagination },\n                });\n                let data = res[\"data\"][\"otherRes\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"ID\"],\n                        ID: data[i][\"ID\"],\n                        CloudAccountId: data[i][\"CloudAccountId\"],\n                        CloudAccountName: data[i][\"CloudAccountName\"],\n                        ResType: data[i][\"ResType\"],\n                        InstanceId: data[i][\"InstanceId\"],\n                        InstanceName: data[i][\"InstanceName\"],\n                        Connections: data[i][\"Connections\"],\n                        Region: data[i][\"Region\"],\n                        Engine: data[i][\"Engine\"],\n                        Cpu: data[i][\"Cpu\"],\n                        Bandwidth: data[i][\"Bandwidth\"],\n                        RenewStatus: data[i][\"RenewStatus\"],\n                        RenewSiteId: data[i][\"RenewSiteId\"],\n                        BankAccount: data[i][\"BankAccount\"],\n                        CreateTime: moment(data[i][\"CreateTime\"]).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                        ExpiredTime: moment(data[i][\"ExpiredTime\"]).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                message.error(err);\n            });\n    };\n\n    handleAdd() {\n        this.setState({\n            other_info_modal_visible: true,\n            actionType: \"add\",\n            editId: 0,\n        });\n    }\n\n    handleQuery() {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    onExpiredDateChange = (moment) => {\n        if (moment == null) {\n            this.setState({ queryExpiredTime: null });\n        } else {\n            this.setState({ queryExpiredTime: moment });\n        }\n    };\n\n    keywordOnChange(e) {\n        this.setState({ queryKeyword: e.target.value });\n    }\n\n    handleResTypeChange(value) {\n        this.setState({ queryResType: value });\n    }\n\n    handleCloudAccountChange(value) {\n        this.setState({ queryCloudAccount: value });\n    }\n\n    serverEdit(data) {\n        const that = this;\n        this.setState(\n            {\n                other_info_modal_visible: true,\n                editId: data.ID,\n                actionType: \"update\",\n                updateMode: \"single\",\n            },\n            () => {\n                setTimeout(() => {\n                    that.formRef.current.setFieldsValue({\n                        cloudAccountId:\n                            data.CloudAccountId !== 0\n                                ? data.CloudAccountId\n                                : null,\n                        resType: data.ResType,\n                        instanceId: data.InstanceId,\n                        instanceName: data.InstanceName,\n                        connections: data.Connections,\n                        region: data.Region,\n                        engine: data.Engine,\n                        cpu: data.Cpu,\n                        bandwidth: data.Bandwidth,\n                        createTime:\n                            data.CreateTime !== \"\"\n                                ? moment(data.CreateTime, \"YYYY-MM-DD\")\n                                : undefined,\n                        expiredTime:\n                            data.ExpiredTime !== \"\"\n                                ? moment(data.ExpiredTime, \"YYYY-MM-DD\")\n                                : undefined,\n                    });\n                }, 500);\n            },\n        );\n    }\n\n    serverDelete(data) {\n        deleteCloudOtherRes(data.ID)\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handlePostOtherInfoSubmit() {\n        this.formRef.current.validateFields().then((values) => {\n            postCloudOtherRes({\n                ...values,\n                id: this.state.editId,\n                createTime: values.createTime.format(\"YYYY-MM-DD\"),\n                expiredTime:\n                    values.expiredTime === undefined\n                        ? undefined\n                        : values.expiredTime.format(\"YYYY-MM-DD\"),\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        if (this.state.actionType === \"add\") {\n                            message.success(\n                                \"添加成功，请到权限管理中增加访问权限！\",\n                            );\n                        } else {\n                            message.success(\"编辑成功\");\n                        }\n                        this.setState({ other_info_modal_visible: false });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handlePostOtherInfoCancel() {\n        this.setState({ other_info_modal_visible: false });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if (this.state.updateMode === \"single\") {\n            targetId = String(this.state.editId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudOtherRes({\n            ...data,\n            id: targetId,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"修改成功\");\n                    this.setState({\n                        extraInfoModalVisible: false,\n                        selectedRowKeys: [],\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({ extraInfoModalVisible: false });\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"云资源\", \"其它资源\", \"其它资源汇总列表\"]}\n                />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={4} className=\"col-span\">\n                        <DatePicker\n                            style={{ width: \"100%\" }}\n                            defaultValue={this.state.queryExpiredTime}\n                            placeholder=\"到期截止时间\"\n                            onChange={this.onExpiredDateChange}\n                        />\n                    </Col>\n                    <Col span={4} className=\"col-span\">\n                        <Input\n                            placeholder=\"输入实例id/名称/地址查询\"\n                            value={this.state.queryKeyword}\n                            onChange={this.keywordOnChange}\n                        />\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Select\n                            defaultValue={this.state.queryResType}\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleResTypeChange}\n                        >\n                            <Option value=\"所有\">所有</Option>\n                            <Option value=\"MongoDB\">MongoDB</Option>\n                            <Option value=\"MaxCompute\">MaxCompute</Option>\n                            <Option value=\"SSL\">SSL</Option>\n                            <Option value=\"带宽\">带宽</Option>\n                            <Option value=\"后付费\">后付费</Option>\n                            <Option value=\"弹性IP\">弹性IP</Option>\n                            <Option value=\"Memcached\">Memcached</Option>\n                            <Option value=\"Kafka\">Kafka</Option>\n                            <Option value=\"NAS\">NAS</Option>\n                            <Option value=\"PolarDB\">PolarDB</Option>\n                            <Option value=\"HBase\">HBase</Option>\n                        </Select>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAdd}\n                            disabled={!this.props.aclAuthMap[\"POST:/cloud/other\"]}\n                        >\n                            新 增\n                        </Button>\n                    </Col>\n                </Row>\n\n                {/*完善信息组件*/}\n                <ExtraInfoModal\n                    wrappedComponentRef={(form) =>\n                        (this.extraInfoFormRef = form)\n                    }\n                    visible={this.state.extraInfoModalVisible}\n                    handleOk={this.handleExtraInfoOk}\n                    handleCancel={this.handleExtraInfoCancel}\n                />\n\n                <OtherInfoModal\n                    formRef={this.formRef}\n                    server_info_modal_visible={\n                        this.state.other_info_modal_visible\n                    }\n                    actionType={this.state.actionType}\n                    handlePostServerInfoSubmit={this.handlePostOtherInfoSubmit}\n                    handlePostServerInfoCancel={this.handlePostOtherInfoCancel}\n                />\n\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default OtherContent;\n","import req from \"../utils/axios\";\n\nconst getSettingsValue = (params) =>{\n    return req.get('settings/value', params)\n};\nexport {getSettingsValue}\n\nconst putSettingsValue = (data) => {\n    return req.put('settings/value', data)\n};\nexport {putSettingsValue}\n","import React, { Component } from 'react';\nimport {Card, Layout, Switch, message, Modal, Col, Row, DatePicker, Alert} from \"antd\";\nimport {getSettingsValue, putSettingsValue} from \"../../api/settings_api\";\n\nconst { Content } = Layout;\nconst { RangePicker } = DatePicker;\n\n\nclass SettingsContent extends Component {\n\n    constructor(props){\n        super(props);\n        this.onChangeAllowRenewConfirm = this.onChangeAllowRenewConfirm.bind(this);\n        this.dateOnChange = this.dateOnChange.bind(this);\n        this.handleSetExpireDateSubmit = this.handleSetExpireDateSubmit.bind(this);\n        this.handleSetExpireDateCancel = this.handleSetExpireDateCancel.bind(this);\n        this.state = {\n            expireSettingModalVisible: false,\n            isOpenRenewConfirm: false,\n            expireStartDate: null,\n            expireEndDate: null,\n        }\n    }\n\n    componentWillMount() {\n        this.loadAllowRenewConfirmStatus();\n    }\n\n    loadAllowRenewConfirmStatus() {\n        getSettingsValue({key_name: \"open_renew_confirm\"}).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    isOpenRenewConfirm: res.data[\"value\"]===\"true\"\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    onChangeAllowRenewConfirm(data) {\n        this.setState({isOpenRenewConfirm: data});\n        if(data===true) {\n            this.setState({expireSettingModalVisible: true})\n        } else {\n            putSettingsValue({\n                key_name: \"open_renew_confirm\",\n                value: data.toLocaleString(),\n            }).then((res)=>{\n                if(res.code===0){\n                    message.success(\"设置成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            }).catch((err)=>{\n                message.error(err.toLocaleString());\n            });\n        }\n    }\n\n    dateOnChange(date, dateString) {\n        this.setState({\n            expireStartDate: dateString[0],\n            expireEndDate: dateString[1],\n        })\n    };\n\n    handleSetExpireDateSubmit() {\n        putSettingsValue({\n            key_name: \"open_renew_confirm\",\n            value: this.state.isOpenRenewConfirm.toLocaleString(),\n        }).then((res)=>{\n            if(res.code===0){\n                message.success(\"设置成功\");\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n        putSettingsValue({\n            key_name: \"expire_start_date\",\n            value: this.state.expireStartDate,\n        }).then((res)=>{\n            if(res.code!==0){\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n        putSettingsValue({\n            key_name: \"expire_end_date\",\n            value: this.state.expireEndDate,\n        }).then((res)=>{\n            if(res.code!==0){\n                message.error(res.msg);\n            } else {\n                this.setState({expireSettingModalVisible: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    handleSetExpireDateCancel() {\n        this.setState({expireSettingModalVisible: false});\n    }\n\n    render() {\n        return (\n            <Content style={{\n            background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <Modal\n                    title=\"设置过期确认时间区间\"\n                    destroyOnClose={true}\n                    visible={this.state.expireSettingModalVisible}\n                    onOk={this.handleSetExpireDateSubmit}\n                    onCancel={this.handleSetExpireDateCancel}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                    width={700}\n                >\n                    <Alert message=\"负责人只可确认该时间段内过期的资源\" banner />\n\n                    <Row style={{ marginTop: 30, marginBottom: 30 }}>\n                        <Col span={4}/>\n                        <Col span={3} style={{textAlign: \"right\"}}>\n                            <label style={{fontSize:14, lineHeight: \"32px\", marginRight: 10, fontWeight: 500}}>过期时间: </label>\n                        </Col>\n                        <Col span={13}>\n                            <RangePicker\n                                style={{width: \"100%\"}}\n                                onChange={this.dateOnChange}\n                                format=\"YYYY-MM-DD\"\n                            />\n                        </Col>\n                        <Col span={4}>\n                        </Col>\n                    </Row>\n                </Modal>\n                <Card style={{ width: 200, textAlign: \"center\" }}>\n                    <Switch checked={this.state.isOpenRenewConfirm} onChange={this.onChangeAllowRenewConfirm} />\n                    <p style={{paddingTop: 20, fontWeight: 500}}>是否开启续费确认窗口</p>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\nexport default SettingsContent;","import React, {Component} from 'react';\nclass LogoutContent extends Component {\n    componentWillMount() {\n        localStorage.removeItem(\"ops_token\");\n        localStorage.removeItem(\"token_info\");\n        window.location.href = \"/login\";\n    }\n\n    render() {\n        return (\n            <div>\n                注销中...\n            </div>\n        )\n    }\n\n}\n\nexport default LogoutContent;","import req from \"../utils/axios\";\n\nconst getUserFeedbackList = (page, size) =>{\n    return req.get('user/feedback', {page, size})\n};\nexport {getUserFeedbackList}","import React, { Component } from \"react\";\nimport { Layout, Table, Button, Row, Col, message } from \"antd\";\nimport { getUserFeedbackList } from \"../../api/system\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\n\nlet columnStyle = {\n    overFlow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass UserFeedbackManager extends Component {\n    constructor(props) {\n        super(props);\n        this.refreshTableData = this.refreshTableData.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: \"ID\",\n                    dataIndex: \"id\",\n                    key: \"id\",\n                    width: 30,\n                    className: \"small_font\",\n                },\n                {\n                    title: \"用户\",\n                    dataIndex: \"username\",\n                    key: \"username\",\n                    className: \"small_font\",\n                },\n                {\n                    title: \"内容\",\n                    dataIndex: \"content\",\n                    key: \"content\",\n                    className: \"small_font \" + { columnStyle },\n                },\n                {\n                    title: \"评分\",\n                    dataIndex: \"score\",\n                    key: \"score\",\n                    className: \"small_font \" + { columnStyle },\n                },\n                {\n                    title: \"创建时间\",\n                    dataIndex: \"createTime\",\n                    key: \"createTime\",\n                    className: \"small_font \" + { columnStyle },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            authLinkModalVisible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                    pageSize: size,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    changePage = (e) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: e,\n                    current: e,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        getUserFeedbackList(\n            this.state.pagination.page,\n            this.state.pagination.pageSize,\n        )\n            .then((res) => {\n                if(res.code===0) {\n                    const pagination = this.state.pagination;\n                    pagination.total = parseInt(res.data.total);\n                    pagination.page = parseInt(res.data.page);\n                    pagination.showTotal(parseInt(res.data.total));\n                    this.setState({\n                        pagination,\n                    });\n                    let data = res[\"data\"][\"feedbacks\"];\n                    let tableData = [];\n                    for (let i = 0; i < data.length; i++) {\n                        tableData.push({\n                            id: data[i][\"id\"],\n                            createTime: data[i][\"createTime\"],\n                            username: data[i][\"username\"],\n                            content: data[i][\"content\"],\n                            score: data[i][\"score\"],\n                        });\n                    }\n                    this.setState({ tableData: tableData});\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({tableLoading: false })\n            })\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"系统管理\", \"用户反馈\"]} />\n                <div style={{ marginBottom: 20 }}>\n                    <Row>\n                        <Col span={3}>\n                            <Button\n                                type=\"primary\"\n                                onClick={this.refreshTableData}\n                            >\n                                刷 新\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    rowClassName=\"fixedHeight\"\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default UserFeedbackManager;\n","import React, { Component, Fragment } from \"react\";\nimport {\n    Card,\n    Layout,\n    Row,\n    message,\n    Button,\n    Col,\n    Tooltip,\n    Table,\n    Divider,\n    Typography,\n    Drawer,\n    Form,\n    Input,\n    Select,\n    Modal,\n    Menu,\n    Dropdown,\n    Collapse,\n    Popconfirm,\n    Empty,\n} from \"antd\";\nimport moment from \"moment\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport {\n    LeftCircleOutlined,\n    CloseCircleOutlined,\n    ClockCircleOutlined,\n    CheckCircleOutlined,\n    PlusOutlined,\n    InfoCircleOutlined,\n    SettingOutlined,\n} from \"@ant-design/icons\";\nimport { withRouter } from 'react-router-dom';\nimport {\n    getJobBuildList,\n    getJenkinsAllJobs,\n    postJenkinsStartJob,\n    getJenkinsJobBuildLog,\n    getJenkinsCredentialsList,\n    postJenkinsAddCredential,\n    postJenkinsJob,\n    getJenkinsJob,\n    putJenkinsJob,\n    deleteJenkinsJob,\n    deleteJenkinsJobBuildLog,\n    getJenkinsJobBuildStages,\n    getJenkinsJobBuildStageLog,\n    getJenkinsJobBuildArchiveArtifactsInfo,\n} from \"../../api/jenkins\";\n\nconst { Content } = Layout;\nconst { Option } = Select;\nconst { Text, Paragraph } = Typography;\nconst { Panel } = Collapse;\nconst { confirm } = Modal;\n\nclass JobsManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef();\n        this.addCredentialFormRef = React.createRef();\n        this.state = {\n            jobs: [],\n            createJobDrawerVisible: false,\n            addCredentialModalVisible: false,\n            updateJobConfigDrawerVisible: false,\n            jobLoading: false,\n            credentialsList: [],\n            env: {\n                GIT_REPO: \"\",\n                GIT_BRANCH: \"\",\n                GIT_CREDENTIALSId: \"\",\n                DOCKER_IMAGE_REPO: \"\",\n                DOCKER_IAMGE_CREDENTIALSId: \"\",\n                DOCKER_IMAGE_NAME: \"\",\n            },\n            currentJobName: \"\",\n            currentJobConfigXml: \"\",\n        };\n    }\n\n    componentDidMount() {\n        this.loadJenkinsAllJobs();\n        this.loadAllJenkinsCredentialsList();\n    }\n\n    loadJenkinsAllJobs() {\n        this.setState({ jobLoading: true });\n        getJenkinsAllJobs()\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ jobs: res.data[\"jobs\"] });\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({ jobLoading: false });\n            })\n    }\n\n    loadAllJenkinsCredentialsList() {\n        getJenkinsCredentialsList().then((res) => {\n            if (res.code === 0) {\n                this.setState({ credentialsList: res.data[\"credentials\"] });\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    jumpJobDetail(jobName) {\n        this.props.history.push({\n            pathname: \"/admin/cicd/ci/jobs\",\n            state: { jobName: jobName },\n        });\n    }\n\n    editJobConfig(jobName) {\n        this.setState({ updateJobConfigDrawerVisible: true });\n        getJenkinsJob({ jobName: jobName }).then((res) => {\n            if (res.code === 0) {\n                let script = res.data.match(\n                    /<script\\b[^>]*>([\\s\\S]*)<\\/script>/,\n                );\n                let temp = document.createElement(\"div\");\n                temp.innerHTML = script[1];\n                let scriptContent = temp.innerText || temp.textContent;\n                this.setState({\n                    currentJobName: jobName,\n                    currentJobConfigXml: scriptContent,\n                });\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    deleteJobItem(jobName) {\n        deleteJenkinsJob({ jobName: jobName }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"删除成功!\");\n                this.loadJenkinsAllJobs();\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    onCloseUpdateJobDrawer() {\n        this.setState({\n            currentJobName: \"\",\n            currentJobConfigXml: \"\",\n            updateJobConfigDrawerVisible: false,\n        });\n    }\n\n    updateJenkinsFile() {\n        putJenkinsJob({\n            jobName: this.state.currentJobName,\n            pipelineScript: this.state.currentJobConfigXml,\n        }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"更新成功!\");\n                this.onCloseUpdateJobDrawer();\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    onCloseCreateJobDrawer() {\n        this.setState({ createJobDrawerVisible: false });\n    }\n\n    createNewBuildJob() {\n        this.setState({ createJobDrawerVisible: true });\n    }\n\n    addNewCredential() {\n        this.setState({ addCredentialModalVisible: true });\n    }\n\n    handleAddCredentialOk() {\n        this.addCredentialFormRef.current.validateFields().then((values) => {\n            postJenkinsAddCredential(values).then((res) => {\n                if (res.code === 0) {\n                    message.success(\"创建成功\");\n                    this.loadAllJenkinsCredentialsList();\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({ addCredentialModalVisible: false });\n            });\n        });\n    }\n\n    handleAddCredentialCancel() {\n        this.setState({ addCredentialModalVisible: false });\n    }\n\n    handelAddNewJob() {\n        this.formRef.current.validateFields().then((values) => {\n            postJenkinsJob(values).then((res) => {\n                if (res.code === 0) {\n                    message.success(\"创建成功\");\n                    this.loadJenkinsAllJobs();\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({ createJobDrawerVisible: false });\n            });\n        });\n    }\n\n    onChangeGitRepo(e) {\n        this.setState({\n            env: {\n                ...this.state.env,\n                GIT_REPO: e.target.value.trim(),\n            },\n        });\n    }\n\n    onChangeGitBranch(e) {\n        this.setState({\n            env: {\n                ...this.state.env,\n                GIT_BRANCH: e.target.value.trim(),\n            },\n        });\n    }\n\n    onChangeGitCredentials(e) {\n        this.setState({\n            env: {\n                ...this.state.env,\n                GIT_CREDENTIALSId: e.trim(),\n            },\n        });\n    }\n\n    onChangeDockerImageRepo(e) {\n        this.setState({\n            env: {\n                ...this.state.env,\n                DOCKER_IMAGE_REPO: e.target.value.trim(),\n            },\n        });\n    }\n\n    onChangeDockerImageCredentials(e) {\n        this.setState({\n            env: {\n                ...this.state.env,\n                DOCKER_IAMGE_CREDENTIALSId: e.trim(),\n            },\n        });\n    }\n\n    onChangeDockerImageName(e) {\n        this.setState({\n            env: {\n                ...this.state.env,\n                DOCKER_IMAGE_NAME: e.target.value.trim(),\n            },\n        });\n    }\n\n    render() {\n        let env = this.state.env;\n        let configTemplate = String.raw`\npipeline {\n  agent any\n  tools {\n    maven &apos;maven_3.3.3&apos;\n  }\n  environment {\n    GIT_REPO = <span class=\"flashing\">\"${env.GIT_REPO}\"</span>\n    BRANCH = <span class=\"flashing\">\"${env.GIT_BRANCH}\"</span>\n    GIT_CREDENTIALSId = <span class=\"flashing\">\"${env.GIT_CREDENTIALSId}\"</span>\n    DOCKER_IMAGE_REPO = <span class=\"flashing\">\"${env.DOCKER_IMAGE_REPO}\"</span>\n    DOCKER_IAMGE_CREDENTIALSId = <span class=\"flashing\">\"${env.DOCKER_IAMGE_CREDENTIALSId}\"</span>\n    IMAGE_NAME = <span class=\"flashing\">\"${env.DOCKER_IMAGE_NAME}\"</span>\n  }\n  stages {\n    stage(&quot;检出&quot;) {\n      steps {\n        checkout(\n          [$class: &apos;GitSCM&apos;,\n          userRemoteConfigs: [[\n            url: &quot;${env.GIT_REPO}&quot;,\n            credentialsId: &quot;${env.GIT_CREDENTIALSId}&quot;\n          ]],\n          branches: [[name: &quot;${env.GIT_BRANCH}&quot;]],\n          ]\n        )\n      }\n    }\n\n    stage(&apos;Maven Build&apos;) {\n        steps {\n            sh &apos;cd test; mvn -B -DskipTests clean package&apos;\n        }\n    }\n\n    stage(&apos;构建镜像并推送到镜像库&apos;) {\n      steps {\n        script {\n          sh &apos;echo &quot;build and push&quot;&apos;\n          docker.withRegistry(\n            &quot;${env.DOCKER_IMAGE_REPO}&quot;,\n            &quot;${env.DOCKER_IAMGE_CREDENTIALSId}&quot;\n          ) {\n            def dockerImage = docker.build(&quot;${env.DOCKER_IMAGE_NAME}:<BUILD_NUMBER>&quot;, &quot;-f Dockerfile .&quot;)\n            dockerImage.push()\n          }\n        }\n      }\n    }\n  }\n}`;\n        const formItemLayout = {\n            labelCol: { span: 24 },\n            wrapperCol: { span: 24 },\n        };\n        const formHorizontalItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 16 },\n        };\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    margin: 0,\n                }}\n            >\n                <Row>\n                    <Col span={24}>\n                        <Card\n                            title=\"当前任务\"\n                            loading={this.state.jobLoading}\n                            size=\"small\"\n                            extra={\n                                <Fragment>\n                                    <Button\n                                        size=\"small\"\n                                        onClick={this.loadJenkinsAllJobs.bind(\n                                            this,\n                                        )}\n                                    >\n                                        刷新\n                                    </Button>\n                                    <Divider type=\"vertical\" />\n                                    <Button\n                                        type=\"primary\"\n                                        size=\"small\"\n                                        onClick={this.createNewBuildJob.bind(\n                                            this,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"POST:/ci/job\"]}\n                                    >\n                                        新建计划\n                                    </Button>\n                                </Fragment>\n                            }\n                        >\n                            {this.state.jobs.map((item, index) => {\n                                return (\n                                    <Card.Grid\n                                        key={index}\n                                        style={{\n                                            width: \"25%\",\n                                            textAlign: \"center\",\n                                            padding: 10,\n                                        }}\n                                    >\n                                        <Row>\n                                            <Col span={8} offset={8}>\n                                                <Tooltip\n                                                    placement=\"top\"\n                                                    title={\"点击查看详情\"}\n                                                >\n                                                    <Button\n                                                        type=\"link\"\n                                                        onClick={this.jumpJobDetail.bind(\n                                                            this,\n                                                            item.name,\n                                                        )}\n                                                    >\n                                                        {item.name}\n                                                    </Button>\n                                                </Tooltip>\n                                            </Col>\n                                            <Col span={4} offset={4}>\n                                                <div\n                                                    style={{\n                                                        float: \"right\",\n                                                        paddingTop: 5,\n                                                    }}\n                                                >\n                                                    <Dropdown\n                                                        overlay={\n                                                            <Menu>\n                                                                <Menu.Item>\n                                                                    <Button\n                                                                        type=\"text\"\n                                                                        size=\"small\"\n                                                                        onClick={this.editJobConfig.bind(\n                                                                            this,\n                                                                            item.name,\n                                                                        )}\n                                                                    >\n                                                                        编辑任务\n                                                                    </Button>\n                                                                </Menu.Item>\n                                                                <Menu.Item\n                                                                    danger\n                                                                >\n                                                                    <Popconfirm\n                                                                        title=\"删除后不可恢复! 确认删除吗?\"\n                                                                        onConfirm={this.deleteJobItem.bind(\n                                                                            this,\n                                                                            item.name,\n                                                                        )}\n                                                                        okText=\"确定\"\n                                                                        cancelText=\"取消\"\n                                                                    >\n                                                                        <Button\n                                                                            type=\"text\"\n                                                                            size=\"small\"\n                                                                        >\n                                                                            删除任务\n                                                                        </Button>\n                                                                    </Popconfirm>\n                                                                </Menu.Item>\n                                                            </Menu>\n                                                        }\n                                                    >\n                                                        <a\n                                                            className=\"ant-dropdown-link\"\n                                                            onClick={(e) =>\n                                                                e.preventDefault()\n                                                            }\n                                                        >\n                                                            <SettingOutlined />\n                                                        </a>\n                                                    </Dropdown>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Card.Grid>\n                                );\n                            })}\n                        </Card>\n                    </Col>\n                </Row>\n\n                <Drawer\n                    title=\"新建构建计划\"\n                    placement=\"left\"\n                    width={800}\n                    destroyOnClose={true}\n                    closable={true}\n                    onClose={this.onCloseCreateJobDrawer.bind(this)}\n                    visible={this.state.createJobDrawerVisible}\n                >\n                    <Row>\n                        <Col span={8}>\n                            <Form\n                                {...formItemLayout}\n                                layout=\"vertical\"\n                                ref={this.formRef}\n                                initialValues={{}}\n                            >\n                                <Form.Item\n                                    label=\"构建计划名称\"\n                                    name=\"jobName\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"输入构建计划名称!\",\n                                        },\n                                    ]}\n                                >\n                                    <Input placeholder=\"输入构建计划名称\" />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Git项目地址\"\n                                    name=\"gitRepo\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"输入代码仓库地址!\",\n                                        },\n                                    ]}\n                                >\n                                    <Input\n                                        placeholder=\"输入代码仓库地址\"\n                                        onChange={this.onChangeGitRepo.bind(\n                                            this,\n                                        )}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"构建分支\"\n                                    name=\"gitBranch\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"输入代码构建分支!\",\n                                        },\n                                    ]}\n                                >\n                                    <Input\n                                        placeholder=\"输入代码构建分支\"\n                                        onChange={this.onChangeGitBranch.bind(\n                                            this,\n                                        )}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Git访问凭证\"\n                                    name=\"gitCredentials\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"选择Git访问凭证!\",\n                                        },\n                                    ]}\n                                >\n                                    <Select\n                                        onChange={this.onChangeGitCredentials.bind(\n                                            this,\n                                        )}\n                                        placeholder=\"选择Git访问凭证\"\n                                        dropdownRender={(menu) => (\n                                            <div>\n                                                {menu}\n                                                <Divider\n                                                    style={{ margin: \"4px 0\" }}\n                                                />\n                                                <div\n                                                    style={{\n                                                        display: \"flex\",\n                                                        flexWrap: \"nowrap\",\n                                                    }}\n                                                >\n                                                    <a\n                                                        style={{\n                                                            flex: \"none\",\n                                                            display: \"block\",\n                                                            padding: 5,\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={this.addNewCredential.bind(\n                                                            this,\n                                                        )}\n                                                    >\n                                                        <PlusOutlined />{\" \"}\n                                                        新建凭证\n                                                    </a>\n                                                </div>\n                                            </div>\n                                        )}\n                                    >\n                                        {this.state.credentialsList.map(\n                                            (item, index) => {\n                                                return (\n                                                    <Option\n                                                        key={index}\n                                                        value={item.id}\n                                                    >\n                                                        <Text\n                                                            style={{\n                                                                fontSize: 13,\n                                                            }}\n                                                        >\n                                                            {item.displayName}\n                                                        </Text>\n                                                    </Option>\n                                                );\n                                            },\n                                        )}\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Docker镜像仓库地址\"\n                                    name=\"dockerImageRepo\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"输入Docker镜像仓库地址!\",\n                                        },\n                                    ]}\n                                >\n                                    <Input\n                                        placeholder=\"输入Docker镜像仓库地址\"\n                                        onChange={this.onChangeDockerImageRepo.bind(\n                                            this,\n                                        )}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Docker镜像名称\"\n                                    name=\"dockerImageName\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"输入Docker镜像名称!\",\n                                        },\n                                    ]}\n                                >\n                                    <Input\n                                        placeholder=\"输入Docker镜像名称\"\n                                        onChange={this.onChangeDockerImageName.bind(\n                                            this,\n                                        )}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Docker镜像仓库访问凭证\"\n                                    name=\"dockerImageCredentials\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                \"选择Docker镜像仓库访问凭证!\",\n                                        },\n                                    ]}\n                                >\n                                    <Select\n                                        onChange={this.onChangeDockerImageCredentials.bind(\n                                            this,\n                                        )}\n                                        placeholder=\"选择Docker镜像仓库访问凭证\"\n                                        dropdownRender={(menu) => (\n                                            <div>\n                                                {menu}\n                                                <Divider\n                                                    style={{ margin: \"4px 0\" }}\n                                                />\n                                                <div\n                                                    style={{\n                                                        display: \"flex\",\n                                                        flexWrap: \"nowrap\",\n                                                    }}\n                                                >\n                                                    <a\n                                                        style={{\n                                                            flex: \"none\",\n                                                            display: \"block\",\n                                                            padding: 5,\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={this.addNewCredential.bind(\n                                                            this,\n                                                        )}\n                                                    >\n                                                        <PlusOutlined />{\" \"}\n                                                        新建凭证\n                                                    </a>\n                                                </div>\n                                            </div>\n                                        )}\n                                    >\n                                        {this.state.credentialsList.map(\n                                            (item, index) => {\n                                                return (\n                                                    <Option\n                                                        key={index}\n                                                        value={item.id}\n                                                    >\n                                                        <Text\n                                                            style={{\n                                                                fontSize: 13,\n                                                            }}\n                                                        >\n                                                            {item.displayName}\n                                                        </Text>\n                                                    </Option>\n                                                );\n                                            },\n                                        )}\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button\n                                        type=\"primary\"\n                                        onClick={this.handelAddNewJob.bind(\n                                            this,\n                                        )}\n                                    >\n                                        提交\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                        <Col span={15}>\n                            <pre\n                                style={{\n                                    color: \"#687168\",\n                                    fontSize: \"11px\",\n                                    paddingLeft: 10,\n                                    marginLeft: 20,\n                                }}\n                            >\n                                <code\n                                    dangerouslySetInnerHTML={{\n                                        __html: configTemplate,\n                                    }}\n                                ></code>\n                            </pre>\n                        </Col>\n                    </Row>\n                </Drawer>\n\n                <Drawer\n                    title=\"配置详情\"\n                    placement=\"left\"\n                    width={800}\n                    destroyOnClose={true}\n                    closable={true}\n                    onClose={this.onCloseUpdateJobDrawer.bind(this)}\n                    visible={this.state.updateJobConfigDrawerVisible}\n                    bodyStyle={{ paddingBottom: 30 }}\n                    footer={\n                        <div\n                            style={{\n                                textAlign: \"right\",\n                            }}\n                        >\n                            <Button\n                                type=\"primary\"\n                                onClick={this.updateJenkinsFile.bind(this)}\n                            >\n                                更新\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Row>\n                        <Col span={24}>\n                            <CodeMirror\n                                className=\"jenkinsEditor\"\n                                value={this.state.currentJobConfigXml}\n                                onBeforeChange={(editor, data, value) => {\n                                    this.setState({\n                                        currentJobConfigXml: value,\n                                    });\n                                }}\n                                onChange={(editor, data, value) => {\n                                    this.setState({\n                                        currentJobConfigXml: value,\n                                    });\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                </Drawer>\n\n                <Modal\n                    title=\"添加凭证\"\n                    destroyOnClose={true}\n                    visible={this.state.addCredentialModalVisible}\n                    onOk={this.handleAddCredentialOk.bind(this)}\n                    onCancel={this.handleAddCredentialCancel.bind(this)}\n                >\n                    <Form\n                        {...formHorizontalItemLayout}\n                        initialValues={{}}\n                        ref={this.addCredentialFormRef}\n                    >\n                        <Form.Item\n                            label=\"凭证ID\"\n                            name=\"credentialId\"\n                            tooltip={{\n                                title: \"输入自定义的唯一凭证标识\",\n                                icon: <InfoCircleOutlined />,\n                            }}\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"输入凭证ID!\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"输入凭证ID\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"用户名\"\n                            name=\"username\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"输入用户名!\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"输入用户名\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"输入密码!\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"输入密码\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"凭证描述\"\n                            name=\"description\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"输入凭证描述!\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"输入凭证描述\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Content>\n        );\n    }\n}\n\nclass BuildsManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recordColumns: [\n                {\n                    title: \"构建记录\",\n                    dataIndex: \"fullDisplayName\",\n                    key: \"fullDisplayName\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"构建结果\",\n                    dataIndex: \"result\",\n                    key: \"result\",\n                    align: \"center\",\n                    render: (value, record) => {\n                        let resultIcon = (\n                            <ClockCircleOutlined\n                                style={{ color: \"blue\", fontSize: 15 }}\n                            />\n                        );\n                        if (record.building === false && value === \"FAILURE\") {\n                            resultIcon = (\n                                <CloseCircleOutlined\n                                    style={{ color: \"red\", fontSize: 15 }}\n                                />\n                            );\n                        }\n                        if (record.building === false && value === \"SUCCESS\") {\n                            resultIcon = (\n                                <CheckCircleOutlined\n                                    style={{ color: \"green\", fontSize: 15 }}\n                                />\n                            );\n                        }\n                        return <Text>{resultIcon}</Text>;\n                    },\n                },\n                // {\n                //     title: \"任务描述\",\n                //     dataIndex: \"description\",\n                //     key: \"description\",\n                //     render: (value) => {\n                //         return <Text ellipsis={true}>{value}</Text>;\n                //     },\n                // },\n                {\n                    title: \"代码信息\",\n                    dataIndex: \"git\",\n                    key: \"git\",\n                    render: (value, record) => {\n                        let branch = \"\";\n                        let commitId = \"\";\n                        let gitUrl = \"\";\n                        for (let i = 0; i < record.actions.length; i++) {\n                            if (\n                                record.actions[i][\"_class\"] ===\n                                \"hudson.plugins.git.util.BuildData\"\n                            ) {\n                                gitUrl = record.actions[i][\"remoteUrls\"][0];\n                                commitId =\n                                    record.actions[i][\"lastBuiltRevision\"][\n                                        \"branch\"\n                                    ][0][\"SHA1\"];\n                                branch =\n                                    record.actions[i][\"lastBuiltRevision\"][\n                                        \"branch\"\n                                    ][0][\"name\"];\n                            }\n                        }\n                        return (\n                            <Text\n                                ellipsis={true}\n                                style={{ fontSize: 0, color: \"#3385ff\" }}\n                            >\n                                <span style={{ fontSize: 11 }}>\n                                    {branch}-{commitId}\n                                </span>\n                                <br />\n                                <span style={{ fontSize: 11 }}>{gitUrl}</span>\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    dataIndex: \"timestamp\",\n                    key: \"timestamp\",\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true}>\n                                {moment.unix(value / 1000).format(\"MM/DD/YYYY\")}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"耗时\",\n                    dataIndex: \"duration\",\n                    key: \"duration\",\n                    render: (value) => {\n                        let du = moment.duration(value, \"ms\");\n                        let mins = du.get(\"minutes\");\n                        let ss = du.get(\"seconds\");\n                        return (\n                            <Text ellipsis={true}>\n                                {mins + \"分\" + ss + \"秒\"}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.showBuildProgress.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    构建日志\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.showBuildStageInfo.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    阶段日志\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.getBuildArchiveArtifactsInfo.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    制品发布\n                                </Button>\n\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.deleteBuildItem.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    删除记录\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            recordPagination: {\n                showSizeChanger: false,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                total: 0,\n            },\n            jobName: this.props.location.state.jobName,\n            buildNum: 0,\n            buildInfo: undefined,\n            buildList: [],\n            recordTableLoading: false,\n            buildStageInfo: {},\n            buildStageDrawerVisible: false,\n            currentFlowNodesLog: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadCurrentJobBuildList();\n    }\n\n    loadCurrentJobBuildList() {\n        this.setState({ recordTableLoading: true });\n        getJobBuildList({ jobName: this.state.jobName })\n            .then((res) => {\n                if (res.code === 0) {\n                    if (res.data.buildsDetails) {\n                        this.setState({\n                            buildList: res.data.buildsDetails,\n                            recordPagination: {\n                                ...this.state.recordPagination,\n                                total: res.data.buildsDetails.length,\n                            },\n                        });\n                    } else {\n                        this.setState({\n                            buildList: [],\n                            recordPagination: {\n                                ...this.state.recordPagination,\n                                total: 0,\n                            },\n                        });\n                    }\n                    this.setState({ buildInfo: res.data });\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({ recordTableLoading: false });\n            })\n            .catch((err) => {\n                this.setState({ recordTableLoading: false });\n                message.error(err.toLocaleString());\n            });\n    }\n\n    backToJobsContent() {\n        this.props.history.push({\n            pathname: \"/admin/cicd/ci/\",\n        });\n    }\n\n    startBuild() {\n        postJenkinsStartJob({ jobName: this.state.jobName }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"构建请求已提交，可手动刷新查看构建记录\");\n                setTimeout(() => {\n                    this.loadCurrentJobBuildList();\n                }, 1000);\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    showBuildProgress(number) {\n        this.setState({ buildDetailDrawerVisible: true });\n        getJenkinsJobBuildLog({\n            jobName: this.state.jobName,\n            number: number,\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    buildLog: res.data,\n                });\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    showBuildStageInfo(number) {\n        this.setState({\n            buildStageDrawerVisible: true,\n            buildNum: Number(number),\n        });\n        getJenkinsJobBuildStages({\n            jobName: this.state.jobName,\n            number: number,\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    buildStageInfo: JSON.parse(res.data),\n                });\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    getBuildArchiveArtifactsInfo(number) {\n        let that = this;\n        getJenkinsJobBuildArchiveArtifactsInfo({\n            jobName: this.state.jobName,\n            number: number,\n        }).then((res) => {\n            if (res.code === 0) {\n                confirm({\n                    title: \"容器镜像制品信息\",\n                    width: 500,\n                    content: (\n                        <div style={{ fontSize: 12 }}>\n                            <Paragraph copyable={{ tooltips: false }}>\n                                {res.data}\n                            </Paragraph>\n                        </div>\n                    ),\n                    okText: \"去发布\",\n                    cancelText: \"关闭\",\n                    onOk() {\n                        that.props.history.push({\n                            pathname: \"/admin/cicd/cd/\",\n                            state: {\n                                jobName: that.state.jobName,\n                                buildNumber: number,\n                                imageName: res.data,\n                            },\n                        });\n                    },\n                });\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    closeBuildDetailDrawer() {\n        this.setState({ buildDetailDrawerVisible: false });\n    }\n\n    closeBuildStageDrawer() {\n        this.setState({ buildStageDrawerVisible: false });\n    }\n\n    deleteBuildItem(number) {\n        deleteJenkinsJobBuildLog({\n            jobName: this.state.jobName,\n            buildNum: Number(number),\n        }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"删除成功!\");\n                this.loadCurrentJobBuildList();\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    onChangeStageCollapse(nodeId) {\n        this.setState({ currentFlowNodesLog: [] });\n        if (!nodeId) {\n            return;\n        }\n        getJenkinsJobBuildStageLog({\n            jobName: this.state.jobName,\n            buildNum: Number(this.state.buildNum),\n            nodeId: Number(nodeId),\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    currentFlowNodesLog: res.data[\"stageFlowNodes\"],\n                });\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    margin: 0,\n                }}\n            >\n                <Row>\n                    <Col span={24}>\n                        <Card\n                            title={\n                                <span>\n                                    <LeftCircleOutlined\n                                        onClick={this.backToJobsContent.bind(\n                                            this,\n                                        )}\n                                    />\n                                    &nbsp;&nbsp; 构建记录\n                                </span>\n                            }\n                            extra={\n                                <Fragment>\n                                    <Button\n                                        size=\"small\"\n                                        onClick={this.loadCurrentJobBuildList.bind(\n                                            this,\n                                        )}\n                                    >\n                                        刷新\n                                    </Button>\n                                    <Divider type=\"vertical\" />\n                                    <Button\n                                        type=\"primary\"\n                                        size=\"small\"\n                                        onClick={this.startBuild.bind(this)}\n                                    >\n                                        立即构建\n                                    </Button>\n                                </Fragment>\n                            }\n                            size=\"small\"\n                        >\n                            <Table\n                                columns={this.state.recordColumns}\n                                dataSource={this.state.buildList}\n                                scroll={{ x: \"max-content\" }}\n                                pagination={this.state.recordPagination}\n                                loading={this.state.recordTableLoading}\n                                bordered\n                                size=\"small\"\n                            />\n                        </Card>\n                    </Col>\n                </Row>\n                <Drawer\n                    title=\"构建日志\"\n                    placement=\"left\"\n                    width={800}\n                    bodyStyle={{ paddingTop: 0 }}\n                    destroyOnClose={true}\n                    closable={true}\n                    onClose={this.closeBuildDetailDrawer.bind(this)}\n                    visible={this.state.buildDetailDrawerVisible}\n                >\n                    <Text>\n                        <pre class=\"preJenkinsLog\">{this.state.buildLog}</pre>\n                    </Text>\n                </Drawer>\n\n                <Drawer\n                    title=\"阶段日志\"\n                    placement=\"left\"\n                    width={800}\n                    destroyOnClose={true}\n                    closable={true}\n                    onClose={this.closeBuildStageDrawer.bind(this)}\n                    visible={this.state.buildStageDrawerVisible}\n                >\n                    <Text style={{ fontSize: 11 }}>\n                        {this.state.buildStageInfo &&\n                        this.state.buildStageInfo[\"stages\"] &&\n                        this.state.buildStageInfo[\"stages\"].length > 0 ? (\n                            <Collapse\n                                accordion={true}\n                                bordered={false}\n                                onChange={this.onChangeStageCollapse.bind(this)}\n                            >\n                                {this.state.buildStageInfo[\"stages\"].map(\n                                    (item, index) => {\n                                        return (\n                                            <Panel\n                                                header={item.name}\n                                                key={item.id}\n                                            >\n                                                {this.state.currentFlowNodesLog\n                                                    ? this.state.currentFlowNodesLog.map(\n                                                          (item, index) => {\n                                                              return (\n                                                                  <div>\n                                                                      {item.log !==\n                                                                      \"\" ? (\n                                                                          <pre className=\"preJenkinsLog\">\n                                                                              {\n                                                                                  item.log\n                                                                              }\n                                                                          </pre>\n                                                                      ) : (\n                                                                          \"当前阶段无日志\"\n                                                                      )}\n                                                                  </div>\n                                                              );\n                                                          },\n                                                      )\n                                                    : \"暂无日志\"}\n                                            </Panel>\n                                        );\n                                    },\n                                )}\n                            </Collapse>\n                        ) : (\n                            <Empty />\n                        )}\n                    </Text>\n                </Drawer>\n            </Content>\n        );\n    }\n}\n\nJobsManageContent = withRouter(JobsManageContent);\nBuildsManageContent = withRouter(BuildsManageContent);\n\nexport { JobsManageContent, BuildsManageContent};\n","import req from \"../utils/axios\";\n\nconst getJenkinsJob = (params) => {\n    return req.get(\"ci/job\", params);\n};\nexport { getJenkinsJob };\n\nconst postJenkinsJob = (params) => {\n    return req.post(\"ci/job\", params);\n};\nexport { postJenkinsJob };\n\nconst putJenkinsJob = (params) => {\n    return req.put(\"ci/job\", params);\n};\nexport { putJenkinsJob };\n\nconst deleteJenkinsJob = (params) => {\n    return req.delete(\"ci/job\", params);\n};\nexport { deleteJenkinsJob };\n\nconst getJenkinsAllJobs = (params) => {\n    return req.get(\"ci/jobList\", params);\n};\nexport { getJenkinsAllJobs };\n\nconst getJobBuildList = (params) => {\n    return req.get(\"ci/buildList\", params);\n};\nexport { getJobBuildList };\n\nconst postJenkinsStartJob = (params) => {\n    return req.post(\"ci/build\", params);\n};\nexport { postJenkinsStartJob };\n\nconst deleteJenkinsJobBuildLog = (params) => {\n    return req.delete(\"ci/build\", params);\n};\nexport { deleteJenkinsJobBuildLog };\n\nconst getJenkinsJobBuildLog = (params) => {\n    return req.get(\"ci/buildLog\", params);\n};\nexport { getJenkinsJobBuildLog };\n\nconst getJenkinsJobBuildStages = (params) => {\n    return req.get(\"ci/build/stages\", params);\n};\nexport { getJenkinsJobBuildStages };\n\nconst getJenkinsJobBuildStageLog = (params) => {\n    return req.get(\"ci/build/stage/log\", params);\n};\nexport { getJenkinsJobBuildStageLog };\n\nconst getJenkinsJobBuildArchiveArtifactsInfo = (params) => {\n    return req.get(\"ci/build/archiveArtifactsInfo\", params);\n};\nexport { getJenkinsJobBuildArchiveArtifactsInfo };\n\nconst getJenkinsCredentialsList = (params) => {\n    return req.get(\"ci/credentials/list\", params);\n};\nexport { getJenkinsCredentialsList };\n\nconst postJenkinsAddCredential = (params) => {\n    return req.post(\"ci/credential\", params);\n};\nexport { postJenkinsAddCredential };\n\nconst postJenkinsEnableJob = (params) => {\n    return req.post(\"jenkins/enableJob\", params);\n};\nexport { postJenkinsEnableJob };\n\nconst postJenkinsDisableJob = (params) => {\n    return req.post(\"jenkins/disableJob\", params);\n};\nexport { postJenkinsDisableJob };\n","import React, { Component } from \"react\";\nimport { Layout } from \"antd\";\nimport { Route, Switch } from \"react-router-dom\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport { JobsManageContent, BuildsManageContent } from \"./jenkins_jobs\";\n\nconst { Content } = Layout;\n\nclass CiContent extends Component {\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"集成部署\", \"持续构建\"]} />\n                <Switch>\n                    <Route\n                        exact={true}\n                        path=\"/admin/cicd/ci/\"\n                    >\n                        <JobsManageContent {...this.props}/>\n                    </Route>\n                    <Route\n                        path=\"/admin/cicd/ci/jobs\"\n                    >\n                        <BuildsManageContent {...this.props}/>\n                    </Route>\n                </Switch>\n            </Content>\n        );\n    }\n}\n\nexport default CiContent;\n","import req from \"../utils/axios\";\n\nconst getNodes = (params) => {\n    return req.get(\"/kubernetes/nodes\", params);\n};\nexport { getNodes };\n\nconst getNamespaces = (params) => {\n    return req.get(\"/kubernetes/namespaces\", params);\n};\nexport { getNamespaces };\n\nconst getDeployments = (params) => {\n    return req.get(\"/kubernetes/deployments\", params);\n};\nexport { getDeployments };\n\nconst restartDeployments = (params) => {\n    return req.put(\"/kubernetes/deployment/restart\", params);\n};\nexport { restartDeployments };\n\nconst getReplicationControllers = (params) => {\n    return req.get(\"/kubernetes/replication_controllers\", params);\n};\nexport { getReplicationControllers };\n\nconst getReplicaSets = (params) => {\n    return req.get(\"/kubernetes/replica_sets\", params);\n};\nexport { getReplicaSets };\n\nconst getServices = (params) => {\n    return req.get(\"/kubernetes/services\", params);\n};\nexport { getServices };\n\nconst getIngresses = (params) => {\n    return req.get(\"/kubernetes/ingress\", params);\n};\nexport { getIngresses };\n\nconst getPods = (params) => {\n    return req.get(\"/kubernetes/pods\", params);\n};\nexport { getPods };\n\nconst getPodLogs = (params) => {\n    return req.get(\"/kubernetes/pod/log\", params);\n};\nexport { getPodLogs };\n\nconst postApplyYaml = (data) => {\n    return req.post(\"/kubernetes/yaml_resource\", data);\n};\nexport { postApplyYaml };\n\nconst putApplyYaml = (data) => {\n    return req.put(\"/kubernetes/yaml_resource\", data);\n};\nexport { putApplyYaml };\n\nconst getResourceYaml = (params) => {\n    return req.get(\"/kubernetes/yaml\", params);\n};\nexport { getResourceYaml };\n\nconst putResourceScale = (data) => {\n    return req.put(\"/kubernetes/scale\", data);\n};\nexport { putResourceScale };\n\nconst deleteResource = (data) => {\n    return req.delete(\"/kubernetes/resource\", data);\n};\nexport { deleteResource };\n\nconst getConfigDict = (params) => {\n    return req.get(\"/kubernetes/config_dict\", params);\n};\nexport { getConfigDict };\n\nconst getSecretDict = (params) => {\n    return req.get(\"/kubernetes/secret_dict\", params);\n};\nexport { getSecretDict };\n\nconst deleteConfigMap = (data) => {\n    return req.delete(\"/kubernetes/config_map\", data);\n};\nexport { deleteConfigMap };\n\nconst deleteSecret = (data) => {\n    return req.delete(\"/kubernetes/secret\", data);\n};\nexport { deleteSecret };\n\nconst getClusterData = (params) => {\n    return req.get(\"/kubernetes/cluster\", params);\n};\nexport { getClusterData };\n\nconst postCluster = (data) => {\n    return req.post(\"/kubernetes/cluster\", data);\n};\nexport { postCluster };\n\nconst deleteCluster = (data) => {\n    return req.delete(\"/kubernetes/cluster\", data);\n};\nexport { deleteCluster };\n\nconst getNodeMetrics = (params) => {\n    return req.get(\"/kubernetes/metrics/node\", params);\n};\nexport { getNodeMetrics };\n\nconst getPodMetrics = (params) => {\n    return req.get(\"/kubernetes/metrics/pod\", params);\n};\nexport { getPodMetrics };\n","import React, { Component } from \"react\";\nimport { Button, Card, Icon, Layout, Alert } from \"antd\";\nimport { Terminal } from \"xterm\";\nimport { AttachAddon } from \"xterm-addon-attach\";\nimport \"xterm/css/xterm.css\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\nimport { WSBase } from \"../../config\";\n\nconst { Content } = Layout;\nlet attachAddon;\n\nclass WebTerminalContent extends Component {\n    constructor(props) {\n        super(props);\n        this.goBack = this.goBack.bind(this);\n        this.rws = new ReconnectingWebSocket(\n            WSBase + \"ws/kubernetes/container_terminal\",\n        );\n        this.terminal = new Terminal({\n            rows: 36,\n            fontSize: 14,\n            cursorBlink: true,\n            cursorStyle: \"block\",\n            bellStyle: \"sound\",\n            theme: \"Console\",\n        });\n        this.terminal.prompt = () => {\n            this.terminal.write(\"\\r\\n$ \");\n        };\n        this.state = {\n            containerDetail: this.props.location.state,\n            connectionStatus: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.terminal.open(document.getElementById(\"terminal\"));\n        this.terminal.writeln(\"Welcome to use Web Terminal.\");\n        this.terminal.prompt();\n        this.initWsConnection();\n        attachAddon = new AttachAddon(this.rws);\n        this.terminal.loadAddon(attachAddon);\n        this.terminal.focus();\n    }\n\n    componentWillUnmount() {\n        this.rws.send(\n            JSON.stringify({\n                action: \"connection_close\",\n                clusterId: localStorage.getItem(\"clusterId\"),\n                namespace: this.state.containerDetail.namespace,\n                podName: this.state.containerDetail.podName,\n                containerName: this.state.containerDetail.containerName,\n            }),\n        );\n        this.rws.close();\n        this.terminal.dispose();\n    }\n\n    initWsConnection() {\n        let that = this;\n        this.rws.addEventListener(\"open\", () => {\n            that.rws.send(\n                JSON.stringify({\n                    action: \"init_connection\",\n                    clusterId: localStorage.getItem(\"clusterId\"),\n                    namespace: that.state.containerDetail.namespace,\n                    podName: that.state.containerDetail.podName,\n                    containerName: that.state.containerDetail.containerName,\n                }),\n            );\n            that.setState({ connectionStatus: 1 });\n        });\n\n        this.rws.addEventListener(\"close\", () => {\n            that.setState({ connectionStatus: 0 });\n        });\n\n        this.rws.addEventListener(\"error\", () => {\n            that.setState({ connectionStatus: 0 });\n        });\n    }\n\n    goBack() {\n        this.rws.send(\n            JSON.stringify({\n                action: \"connection_close\",\n                clusterId: localStorage.getItem(\"clusterId\"),\n                namespace: this.state.containerDetail.namespace,\n                podName: this.state.containerDetail.podName,\n                containerName: this.state.containerDetail.containerName,\n            }),\n        );\n        this.rws.close();\n        this.props.history.goBack();\n    }\n\n    render() {\n        let connectContent = (\n            <Alert message=\"远程连接未建立\" type=\"error\" showIcon />\n        );\n        if (this.state.connectionStatus === 1) {\n            connectContent = (\n                <Alert message=\"远程连接成功\" type=\"success\" showIcon />\n            );\n        }\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Button type=\"link\" onClick={this.goBack}>\n                    <Icon type=\"left\" />\n                    返回上级\n                </Button>\n                {connectContent}\n                <Card\n                    size=\"small\"\n                    title=\"终端\"\n                    style={{ width: \"100%\" }}\n                    bodyStyle={{ padding: 0 }}\n                >\n                    <div id=\"terminal\" style={{ width: \"100%\" }} />\n                </Card>\n            </Content>\n        );\n    }\n}\n\nexport default WebTerminalContent;\n","import React, { Component, Fragment } from \"react\";\nimport {\n    Card,\n    Layout,\n    Row,\n    message,\n    Button,\n    Divider,\n    Col,\n    Descriptions,\n    Typography,\n    Steps,\n    Result,\n    Select,\n    Form,\n    Carousel,\n    Tabs,\n    Input,\n    InputNumber,\n    Collapse,\n} from \"antd\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport { withRouter } from 'react-router-dom';\nimport {\n    getClusterData,\n    getNamespaces,\n    postApplyYaml,\n} from \"../../api/kubernetes\";\nimport {\n    postCdProcessTemplate,\n    getCdProcessTemplateData,\n    postCdProcessLog,\n} from \"../../api/cd\";\nimport { getClusterId } from \"../../utils/axios\";\n\nconst { Paragraph, Text } = Typography;\nconst { Content } = Layout;\nconst { Step } = Steps;\nconst { Option } = Select;\nconst { TabPane } = Tabs;\nconst { Panel } = Collapse;\n\nclass ClusterConfigContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clusterData: [],\n            namespaceData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadClusterData();\n    }\n\n    loadClusterData() {\n        getClusterData()\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ clusterData: res.data['k8sData'] });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    }\n\n    getK8sNamespaces() {\n        getNamespaces()\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ namespaceData: res.data.items });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    }\n\n    clusterOnChange(clusterId) {\n        localStorage.setItem(\"clusterId\", clusterId);\n        this.getK8sNamespaces();\n    }\n\n    render() {\n        const layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 10 },\n        };\n        return (\n            <div>\n                <Form {...layout} ref={this.props.formRef}>\n                    <Form.Item\n                        label=\"流程名称\"\n                        name=\"processName\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"请输入部署名称!\",\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"输入部署名称\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"发布集群\"\n                        name=\"clusterId\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"请选择要发布到的集群!\",\n                            },\n                        ]}\n                    >\n                        <Select\n                            style={{ width: \"100%\" }}\n                            onChange={this.clusterOnChange.bind(this)}\n                        >\n                            {this.state.clusterData.map((item, index) => {\n                                return (\n                                    <Option\n                                        key={item.clusterId}\n                                        value={item.clusterId}\n                                    >\n                                        {item.name}\n                                    </Option>\n                                );\n                            })}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"命名空间\"\n                        name=\"namespace\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"请选择要发布到的命名空间!\",\n                            },\n                        ]}\n                    >\n                        <Select style={{ width: \"100%\" }}>\n                            {this.state.namespaceData.map((item, index) => {\n                                return (\n                                    <Option\n                                        key={item[\"metadata\"][\"name\"]}\n                                        value={item[\"metadata\"][\"name\"]}\n                                    >\n                                        {item[\"metadata\"][\"name\"]}\n                                    </Option>\n                                );\n                            })}\n                        </Select>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}\n\nclass K8sResConfigContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            PROJECT_NAME: this.props.cdInfo.jobName,\n            REPLICAS: 1,\n            IMAGE_NAME: this.props.cdInfo.imageName.trim(),\n            CONTAINER_PORT: \"\",\n            SERVICE_PORT: \"\",\n            SERVICE_TARGET_PORT: \"\",\n            INGRESS_HOST: \"\",\n            deployYAML: \"\",\n            serviceYAML: \"\",\n            configMapYAML: \"\",\n            ingressYAML: \"\",\n        };\n    }\n\n    componentDidMount() {\n        this.updateDeployYAMLTemplate();\n        this.updateServiceYAMLTemplate();\n        this.updateConfigMapYAMLTemplate();\n        this.updateIngressYAMLTemplate();\n    }\n\n    updateYAMLTemplateCallback() {\n        console.log(\"update: \", this.state.deployYAML);\n        this.props.yamlCallback(\n            this.state.deployYAML,\n            this.state.serviceYAML,\n            this.state.configMapYAML,\n            this.state.ingressYAML,\n        );\n    }\n\n    contianerPortOnChange(e) {\n        this.setState(\n            {\n                CONTAINER_PORT: e.target.value.trim(),\n            },\n            () => {\n                this.updateDeployYAMLTemplate();\n            },\n        );\n    }\n\n    replicasOnChange(value) {\n        this.setState(\n            {\n                REPLICAS: value,\n            },\n            () => {\n                this.updateDeployYAMLTemplate();\n            },\n        );\n    }\n\n    servicePortOnChange(e) {\n        this.setState(\n            {\n                SERVICE_PORT: e.target.value.trim(),\n            },\n            () => {\n                this.updateServiceYAMLTemplate();\n            },\n        );\n    }\n\n    serviceTargetPortOnChange(e) {\n        this.setState(\n            {\n                SERVICE_TARGET_PORT: e.target.value.trim(),\n            },\n            () => {\n                this.updateServiceYAMLTemplate();\n            },\n        );\n    }\n\n    ingressHostOnChange(e) {\n        this.setState(\n            {\n                INGRESS_HOST: e.target.value.trim(),\n            },\n            () => {\n                this.updateIngressYAMLTemplate();\n            },\n        );\n    }\n\n    updateDeployYAMLTemplate() {\n        let yaml = String.raw`apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ${this.state.PROJECT_NAME}-deploy\nspec:\n  replicas: ${this.state.REPLICAS}\n  selector:\n    matchLabels:\n      app: ${this.state.PROJECT_NAME}\n  template:\n    metadata:\n      labels:\n        app: ${this.state.PROJECT_NAME}\n    spec:\n      containers:\n        - image: >-\n            ${this.state.IMAGE_NAME}\n          name: ${this.state.PROJECT_NAME}\n          ports:\n            - containerPort: ${this.state.CONTAINER_PORT}\n      imagePullSecrets:\n        - name: deploy-image-pull-cred-7993294`;\n        this.setState({ deployYAML: yaml }, () => {\n            this.updateYAMLTemplateCallback();\n        });\n    }\n\n    updateServiceYAMLTemplate() {\n        let yaml = String.raw`apiVersion: v1\nkind: Service\nmetadata:\n  name: ${this.state.PROJECT_NAME}-service\nspec:\n  ports:\n  - name: http\n    port: ${this.state.SERVICE_PORT}\n    protocol: TCP\n    targetPort: ${this.state.SERVICE_TARGET_PORT}\n  selector:\n    app: ${this.state.PROJECT_NAME}\n  type: ClusterIP`;\n        this.setState({ serviceYAML: yaml }, () => {\n            this.updateYAMLTemplateCallback();\n        });\n    }\n\n    updateConfigMapYAMLTemplate() {\n        let yaml = String.raw`apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ${this.state.PROJECT_NAME}\ndata:\n  # 类属性键；每一个键都映射到一个值`;\n        this.setState({ configMapYAML: yaml }, () => {\n            this.updateYAMLTemplateCallback();\n        });\n    }\n\n    updateIngressYAMLTemplate() {\n        let yaml = String.raw`apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: ${this.state.PROJECT_NAME}-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /$1\nspec:\n  rules:\n  - host: ${this.state.INGRESS_HOST}\n    http:\n      paths:\n      - backend:\n          serviceName: ${this.state.PROJECT_NAME}-service\n          servicePort: ${this.state.SERVICE_PORT}\n        path: /\n  tls:\n  - hosts:\n    - ${this.state.INGRESS_HOST}\n    secretName: ${this.state.INGRESS_HOST}-ssl`;\n        this.setState({ ingressYAML: yaml }, () => {\n            this.updateYAMLTemplateCallback();\n        });\n    }\n\n    render() {\n        const layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 12 },\n        };\n        return (\n            <div style={{ marginTop: \"-15px\", marginLeft: \"20px\" }}>\n                <Tabs defaultActiveKey=\"1\" style={{ textAlign: \"left\" }}>\n                    <TabPane tab=\"Deployment\" key=\"1\">\n                        <Row>\n                            <Col span={8}>\n                                <Form {...layout}>\n                                    <Form.Item\n                                        label=\"容器端口\"\n                                        name=\"containerPort\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: \"请输入容器端口!\",\n                                            },\n                                        ]}\n                                    >\n                                        <Input\n                                            placeholder=\"请输入容器端口\"\n                                            onChange={this.contianerPortOnChange.bind(\n                                                this,\n                                            )}\n                                        />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"副本数\"\n                                        name=\"replicas\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: \"请输入副本数!\",\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber\n                                            min={1}\n                                            max={10}\n                                            defaultValue={1}\n                                            onChange={this.replicasOnChange.bind(\n                                                this,\n                                            )}\n                                        />\n                                    </Form.Item>\n                                </Form>\n                            </Col>\n                            <Col span={16} style={{ overflowX: \"scroll\" }}>\n                                <Collapse bordered={false} ghost>\n                                    <Panel\n                                        header=\"查看或编辑YAML\"\n                                        key=\"1\"\n                                        style={{ marginTop: \"-10px\" }}\n                                    >\n                                        <CodeMirror\n                                            className=\"jenkinsEditor\"\n                                            style={{ overflowX: \"scroll\" }}\n                                            value={this.state.deployYAML}\n                                            onBeforeChange={(\n                                                editor,\n                                                data,\n                                                value,\n                                            ) => {\n                                                this.setState({\n                                                    deployYAML: value,\n                                                });\n                                            }}\n                                            onChange={(editor, data, value) => {\n                                                this.setState(\n                                                    {\n                                                        deployYAML: value,\n                                                    },\n                                                    () => {\n                                                        this.updateYAMLTemplateCallback();\n                                                    },\n                                                );\n                                            }}\n                                        />\n                                    </Panel>\n                                </Collapse>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tab=\"Service\" key=\"2\">\n                        <Row>\n                            <Col span={8}>\n                                <Form {...layout}>\n                                    <Form.Item\n                                        label=\"服务端口\"\n                                        name=\"servicePort\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: \"请输入服务端口!\",\n                                            },\n                                        ]}\n                                    >\n                                        <Input\n                                            placeholder=\"请输入容器端口\"\n                                            onChange={this.servicePortOnChange.bind(\n                                                this,\n                                            )}\n                                        />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"目标端口\"\n                                        name=\"serviceTargetPort\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: \"请输入目标端口!\",\n                                            },\n                                        ]}\n                                    >\n                                        <Input\n                                            placeholder=\"请输入目标端口\"\n                                            onChange={this.serviceTargetPortOnChange.bind(\n                                                this,\n                                            )}\n                                        />\n                                    </Form.Item>\n                                </Form>\n                            </Col>\n                            <Col span={16} style={{ overflowX: \"scroll\" }}>\n                                <Collapse bordered={false} ghost>\n                                    <Panel\n                                        header=\"查看或编辑YAML\"\n                                        key=\"1\"\n                                        style={{ marginTop: \"-10px\" }}\n                                    >\n                                        <CodeMirror\n                                            className=\"jenkinsEditor\"\n                                            style={{ overflowX: \"scroll\" }}\n                                            value={this.state.serviceYAML}\n                                            onBeforeChange={(\n                                                editor,\n                                                data,\n                                                value,\n                                            ) => {\n                                                this.setState({\n                                                    serviceYAML: value,\n                                                });\n                                            }}\n                                            onChange={(editor, data, value) => {\n                                                this.setState(\n                                                    {\n                                                        serviceYAML: value,\n                                                    },\n                                                    () => {\n                                                        this.updateYAMLTemplateCallback();\n                                                    },\n                                                );\n                                            }}\n                                        />\n                                    </Panel>\n                                </Collapse>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tab=\"ConfigMap\" key=\"3\">\n                        <Row>\n                            <Col span={24} style={{ overflowX: \"scroll\" }}>\n                                <Collapse bordered={false} ghost>\n                                    <Panel\n                                        header=\"查看或编辑YAML\"\n                                        key=\"1\"\n                                        style={{ marginTop: \"-10px\" }}\n                                    >\n                                        <CodeMirror\n                                            className=\"jenkinsEditor\"\n                                            style={{ overflowX: \"scroll\" }}\n                                            value={this.state.configMapYAML}\n                                            onBeforeChange={(\n                                                editor,\n                                                data,\n                                                value,\n                                            ) => {\n                                                this.setState({\n                                                    configMapYAML: value,\n                                                });\n                                            }}\n                                            onChange={(editor, data, value) => {\n                                                this.setState(\n                                                    {\n                                                        configMapYAML: value,\n                                                    },\n                                                    () => {\n                                                        this.updateYAMLTemplateCallback();\n                                                    },\n                                                );\n                                            }}\n                                        />\n                                    </Panel>\n                                </Collapse>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tab=\"Ingress\" key=\"4\">\n                        <Row>\n                            <Col span={8}>\n                                <Form {...layout}>\n                                    <Form.Item\n                                        label=\"配置域名\"\n                                        name=\"ingressHost\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: \"请输入域名!\",\n                                            },\n                                        ]}\n                                    >\n                                        <Input\n                                            placeholder=\"请输入域名\"\n                                            onChange={this.ingressHostOnChange.bind(\n                                                this,\n                                            )}\n                                        />\n                                    </Form.Item>\n                                </Form>\n                            </Col>\n                            <Col span={16} style={{ overflowX: \"scroll\" }}>\n                                <Collapse bordered={false} ghost>\n                                    <Panel\n                                        header=\"查看或编辑YAML\"\n                                        key=\"1\"\n                                        style={{ marginTop: \"-10px\" }}\n                                    >\n                                        <CodeMirror\n                                            className=\"jenkinsEditor\"\n                                            style={{ overflowX: \"scroll\" }}\n                                            value={this.state.ingressYAML}\n                                            onBeforeChange={(\n                                                editor,\n                                                data,\n                                                value,\n                                            ) => {\n                                                this.setState({\n                                                    ingressYAML: value,\n                                                });\n                                            }}\n                                            onChange={(editor, data, value) => {\n                                                this.setState(\n                                                    {\n                                                        ingressYAML: value,\n                                                    },\n                                                    () => {\n                                                        this.updateYAMLTemplateCallback();\n                                                    },\n                                                );\n                                            }}\n                                        />\n                                    </Panel>\n                                </Collapse>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nclass CdContent extends Component {\n    constructor(props) {\n        super(props);\n        this.clusterFormRef = React.createRef();\n        this.deployYAML = \"\";\n        this.serviceYAML = \"\";\n        this.configMapYAML = \"\";\n        this.ingressYAML = \"\";\n        this.state = {\n            jobs: [],\n            ableToCd: false,\n            cdInfo: {\n                jobName: \"\",\n                buildNumber: \"\",\n                imageName: \"\",\n                ...this.props.location.state,\n            },\n            currentStep: 0,\n            clusterId: \"\",\n            namespace: \"\",\n            processName: \"\",\n            deployProcessType: \"1\",\n            deployProcessRecord: 0,\n            processTemplateList: [],\n        };\n    }\n\n    componentDidMount() {\n        if (\n            this.state.cdInfo.imageName === \"\" ||\n            this.state.cdInfo.imageName === \"暂无资源\"\n        ) {\n            message.warn(\"没有构建的镜像制品，无法进行发布!\");\n        } else {\n            this.setState({ ableToCd: true });\n        }\n        this.loadCdProcessTemplateList();\n    }\n\n    yamlCallback(deploy, service, cm, ingress) {\n        this.deployYAML = deploy;\n        this.serviceYAML = service;\n        this.configMapYAML = cm;\n        this.ingressYAML = ingress;\n    }\n\n    next() {\n        let current = this.state.currentStep + 1;\n        if (this.state.currentStep === 0) {\n            this.clusterFormRef.current\n                .validateFields()\n                .then((values) => {\n                    console.log(\"表单验证: \", values);\n                    this.setState({\n                        currentStep: current,\n                        clusterId: values[\"clusterId\"],\n                        namespace: values[\"namespace\"],\n                        processName: values[\"processName\"],\n                    });\n                    this.carousel.next();\n                })\n                .catch((errorInfo) => {\n                    message.warn(\"请填写必填项中的内容!\");\n                });\n        } else {\n            this.setState({ currentStep: current });\n            this.carousel.next();\n        }\n    }\n\n    prev() {\n        let current = this.state.currentStep - 1;\n        this.setState({ currentStep: current });\n        this.carousel.prev();\n        // if (current === 0) {\n        //     console.log(\"设置值\");\n        //     this.clusterFormRef.current.setFieldsValue({\n        //         clusterId: this.state.clusterId,\n        //         namespace: this.state.namespace,\n        //         processName: this.state.processName,\n        //     });\n        // }\n    }\n\n    loadCdProcessTemplateList() {\n        getCdProcessTemplateData().then((res) => {\n            if (res.code === 0) {\n                this.setState({ processTemplateList: res.data });\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    deployToK8sByYAML() {\n        if (this.state.deployProcessType === \"1\") {\n            let reqParams = {\n                templateId: this.state.deployProcessRecord,\n                imageName: this.state.cdInfo.imageName.trim(),\n            };\n            postCdProcessLog(reqParams).then((res) => {\n                if (res.code === 0) {\n                    message.success(\"项目发布成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            });\n        } else {\n            let reqParams = {\n                jobName: this.state.cdInfo.jobName,\n                templateName: this.state.processName,\n                clusterId: getClusterId(),\n                namespace: this.state.namespace,\n                imageName: this.state.cdInfo.imageName,\n                deployYaml: this.deployYAML,\n                configmapYaml: this.configMapYAML,\n                serviceYaml: this.serviceYAML,\n                ingressYaml: this.ingressYAML,\n            };\n            postCdProcessTemplate(reqParams).then((res) => {\n                if (res.code === 0) {\n                    message.success(\"项目发布成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            });\n        }\n    }\n\n    submitToDeploy() {\n        this.deployToK8sByYAML();\n        message.success(\"已提交部署\");\n    }\n\n    onDeployProcessChange(e) {\n        this.setState({ deployProcessType: e });\n    }\n\n    onDeployProcessRecordChange(e) {\n        this.setState({ deployProcessRecord: e });\n    }\n\n    render() {\n        const layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 10 },\n        };\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"CI & CD\", \"项目部署\"]} />\n                <Row>\n                    <Col span={24}>\n                        <Card title=\"项目部署\" size=\"small\">\n                            <Descriptions bordered size=\"small\" column={1}>\n                                <Descriptions.Item label=\"部署项目\">\n                                    {this.state.cdInfo.jobName}\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"构建编号\">\n                                    {this.state.cdInfo.buildNumber}\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"部署镜像\">\n                                    <Paragraph copyable>\n                                        {this.state.cdInfo.imageName}\n                                    </Paragraph>\n                                </Descriptions.Item>\n                            </Descriptions>\n                            <Tabs\n                                defaultActiveKey=\"1\"\n                                onChange={this.onDeployProcessChange.bind(this)}\n                            >\n                                <TabPane tab=\"已有部署\" key=\"1\">\n                                    <Divider orientation=\"left\" plain>\n                                        选择已有部署流程\n                                    </Divider>\n                                    <Form {...layout} ref={this.props.formRef}>\n                                        <Form.Item\n                                            label=\"选择流程\"\n                                            name=\"processRecord\"\n                                            rules={[\n                                                {\n                                                    required: true,\n                                                    message: \"请选择部署流程!\",\n                                                },\n                                            ]}\n                                        >\n                                            <Select\n                                                style={{ width: \"100%\" }}\n                                                onChange={this.onDeployProcessRecordChange.bind(\n                                                    this,\n                                                )}\n                                            >\n                                                {this.state.processTemplateList.map(\n                                                    (item) => {\n                                                        return (\n                                                            <Option\n                                                                key={\n                                                                    item.TemplateName\n                                                                }\n                                                                value={item.ID}\n                                                            >\n                                                                {\n                                                                    item.TemplateName\n                                                                }\n                                                            </Option>\n                                                        );\n                                                    },\n                                                )}\n                                            </Select>\n                                        </Form.Item>\n                                    </Form>\n                                    {this.state.ableToCd === true ? (\n                                        <Fragment>\n                                            {this.state.deployProcessType ===\n                                                \"1\" && (\n                                                <Button\n                                                    type=\"primary\"\n                                                    size=\"small\"\n                                                    onClick={this.submitToDeploy.bind(\n                                                        this,\n                                                    )}\n                                                >\n                                                    确认发布\n                                                </Button>\n                                            )}\n                                        </Fragment>\n                                    ) : (\n                                        <Result\n                                            status=\"warning\"\n                                            title={\n                                                <Text\n                                                    type=\"danger\"\n                                                    style={{ fontSize: \"14px\" }}\n                                                >\n                                                    该次构建未生成镜像制品，不可发布!\n                                                </Text>\n                                            }\n                                        />\n                                    )}\n                                </TabPane>\n                                <TabPane tab=\"新建部署\" key=\"2\">\n                                    <Divider orientation=\"left\" plain>\n                                        新建部署配置\n                                    </Divider>\n                                    {this.state.ableToCd === true ? (\n                                        <Fragment>\n                                            <Steps\n                                                current={this.state.currentStep}\n                                                size=\"small\"\n                                            >\n                                                <Step\n                                                    key=\"K8S集群选择\"\n                                                    title=\"K8S集群选择\"\n                                                />\n                                                <Step\n                                                    key=\"K8S资源配置\"\n                                                    title=\"K8S资源配置\"\n                                                />\n                                                <Step key=\"发布\" title=\"发布\" />\n                                            </Steps>\n                                            <div\n                                                className=\"steps-content\"\n                                                style={{ paddingTop: \"20px\" }}\n                                            >\n                                                <Carousel\n                                                    ref={(carousel) => {\n                                                        this.carousel = carousel;\n                                                    }}\n                                                    dots={false}\n                                                >\n                                                    <div>\n                                                        <ClusterConfigContent\n                                                            formRef={\n                                                                this\n                                                                    .clusterFormRef\n                                                            }\n                                                        />\n                                                    </div>\n                                                    <div>\n                                                        <K8sResConfigContent\n                                                            yamlCallback={this.yamlCallback.bind(\n                                                                this,\n                                                            )}\n                                                            cdInfo={\n                                                                this.state\n                                                                    .cdInfo\n                                                            }\n                                                        />\n                                                    </div>\n                                                    <div>\n                                                        <Collapse\n                                                            ghost\n                                                            style={{\n                                                                textAlign:\n                                                                    \"left\",\n                                                            }}\n                                                        >\n                                                            <Panel\n                                                                header=\"Deployment YAML确认\"\n                                                                key=\"1\"\n                                                            >\n                                                                <pre\n                                                                    style={{\n                                                                        textAlign:\n                                                                            \"left\",\n                                                                        fontSize: 10,\n                                                                    }}\n                                                                >\n                                                                    {\n                                                                        this\n                                                                            .deployYAML\n                                                                    }\n                                                                </pre>\n                                                            </Panel>\n                                                            <Panel\n                                                                header=\"Service YAML确认\"\n                                                                key=\"2\"\n                                                            >\n                                                                <pre\n                                                                    style={{\n                                                                        textAlign:\n                                                                            \"left\",\n                                                                        fontSize: 10,\n                                                                    }}\n                                                                >\n                                                                    {\n                                                                        this\n                                                                            .serviceYAML\n                                                                    }\n                                                                </pre>\n                                                            </Panel>\n                                                            <Panel\n                                                                header=\"ConfigMap YAML确认\"\n                                                                key=\"3\"\n                                                            >\n                                                                <pre\n                                                                    style={{\n                                                                        textAlign:\n                                                                            \"left\",\n                                                                        fontSize: 10,\n                                                                    }}\n                                                                >\n                                                                    {\n                                                                        this\n                                                                            .configMapYAML\n                                                                    }\n                                                                </pre>\n                                                            </Panel>\n                                                            <Panel\n                                                                header=\"Ingress YAML确认\"\n                                                                key=\"4\"\n                                                            >\n                                                                <pre\n                                                                    style={{\n                                                                        textAlign:\n                                                                            \"left\",\n                                                                        fontSize: 10,\n                                                                    }}\n                                                                >\n                                                                    {\n                                                                        this\n                                                                            .ingressYAML\n                                                                    }\n                                                                </pre>\n                                                            </Panel>\n                                                        </Collapse>\n                                                    </div>\n                                                </Carousel>\n                                            </div>\n                                            <div style={{ marginTop: 20 }}>\n                                                {this.state.currentStep < 2 && (\n                                                    <Button\n                                                        size=\"small\"\n                                                        type=\"primary\"\n                                                        onClick={this.next.bind(\n                                                            this,\n                                                        )}\n                                                    >\n                                                        下一步\n                                                    </Button>\n                                                )}\n                                                {this.state.currentStep ===\n                                                    2 && (\n                                                    <Button\n                                                        type=\"primary\"\n                                                        size=\"small\"\n                                                        onClick={this.submitToDeploy.bind(\n                                                            this,\n                                                        )}\n                                                    >\n                                                        确认发布\n                                                    </Button>\n                                                )}\n                                                {this.state.currentStep > 0 && (\n                                                    <Button\n                                                        size=\"small\"\n                                                        style={{\n                                                            margin: \"0 8px\",\n                                                        }}\n                                                        onClick={this.prev.bind(\n                                                            this,\n                                                        )}\n                                                    >\n                                                        上一步\n                                                    </Button>\n                                                )}\n                                            </div>\n                                        </Fragment>\n                                    ) : (\n                                        <Result\n                                            status=\"warning\"\n                                            title={\n                                                <Text\n                                                    type=\"danger\"\n                                                    style={{ fontSize: \"14px\" }}\n                                                >\n                                                    该次构建未生成镜像制品，不可发布!\n                                                </Text>\n                                            }\n                                        />\n                                    )}\n                                </TabPane>\n                            </Tabs>\n                        </Card>\n                    </Col>\n                </Row>\n            </Content>\n        );\n    }\n}\n\nexport default withRouter(CdContent);\n","import req from \"../utils/axios\";\n\nconst postCdProcessTemplate = (params) => {\n    return req.post(\"cd/processTemplate\", params);\n};\nexport { postCdProcessTemplate };\n\nconst getCdProcessTemplateData = (params) => {\n    return req.get(\"cd/processTemplateList\", params);\n};\nexport { getCdProcessTemplateData };\n\nconst postCdProcessLog = (params) => {\n    return req.post(\"cd/processLog\", params);\n};\nexport { postCdProcessLog };\n\nconst getCdProcessLog = (params) => {\n    return req.get(\"cd/processLog\", params);\n};\nexport { getCdProcessLog };","import React, { Component } from \"react\";\nimport { Layout, Table, Typography } from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport { getCdProcessLog } from \"../../api/cd\";\nconst { Content } = Layout;\nconst { Text } = Typography;\n\nclass CdRecordContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [\n                {\n                    title: \"id\",\n                    dataIndex: \"id\",\n                    width: 30,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"发布镜像\",\n                    dataIndex: \"imageName\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    dataIndex: \"namespace\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"项目名称\",\n                    dataIndex: \"jobName\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"发布状态\",\n                    dataIndex: \"success\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"发布日志\",\n                    dataIndex: \"result\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n            ],\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            tableLoading: false,\n        };\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    refreshTableData() {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n        };\n        getCdProcessLog(queryParams).then((res) => {\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination,\n            });\n            let tableData = res[\"data\"][\"logs\"];\n            this.setState({\n                tableData: tableData,\n                tableLoading: false,\n            });\n        });\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"CI & CD\", \"部署记录\"]} />\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default CdRecordContent;\n","import React, { Component } from \"react\";\nimport { Layout } from \"antd\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CiContent from \"./ci_content\";\nimport CdContent from \"./cd_content\";\nimport CdRecordContent from \"./cd_record_content\";\n\nconst { Content } = Layout;\n\nclass CiCdContent extends Component {\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 0,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Switch>\n                    <Route path=\"/admin/cicd/ci\">\n                        <CiContent aclAuthMap={this.props.aclAuthMap}/>\n                    </Route>\n                    <Route path=\"/admin/cicd/cd\">\n                        <CdContent aclAuthMap={this.props.aclAuthMap}/>\n                    </Route>\n                    <Route path=\"/admin/cicd/cd_record\">\n                        <CdRecordContent aclAuthMap={this.props.aclAuthMap}/>\n                    </Route>\n                </Switch>\n            </Content>\n        );\n    }\n}\n\nexport default CiCdContent;\n","const K8sTemplate = {\n    rc: `apiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: redis-rc\nspec:\n  replicas: 1\n  selector:\n    app: redis\n  template:\n    metadata:\n      name: redis\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis\n        ports:\n        - containerPort: 6379`,\n\n    rs: `apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: redis-rs\n  labels:\n    app: redis\nspec:\n  replicas: 1\n  selector:\n    app: redis\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis\n        ports:\n        - containerPort: 6379`,\n\n    deployment: `apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - containerPort: 80`,\n\n    statefull_rs: `kind: StatefulSet\nmetadata:\n  name: web\nspec:\n  selector:\n    matchLabels:\n      app: nginx # has to match .spec.template.metadata.labels\n  serviceName: \"nginx\"\n  replicas: 3 # by default is 1\n  template:\n    metadata:\n      labels:\n        app: nginx # has to match .spec.selector.matchLabels\n    spec:\n      terminationGracePeriodSeconds: 10\n      containers:\n      - name: nginx\n        image: k8s.gcr.io/nginx-slim:0.8\n        ports:\n        - containerPort: 80\n          name: web\n        volumeMounts:\n        - name: www\n          mountPath: /usr/share/nginx/html\n  volumeClaimTemplates:\n  - metadata:\n      name: www\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"my-storage-class\"\n      resources:\n        requests:\n          storage: 1Gi`,\n\n    daemonset: `apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: fluentd-elasticsearch\n  namespace: kube-system\n  labels:\n    k8s-app: fluentd-logging\nspec:\n  selector:\n    matchLabels:\n      name: fluentd-elasticsearch\n  template:\n    metadata:\n      labels:\n        name: fluentd-elasticsearch\n    spec:\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n      containers:\n      - name: fluentd-elasticsearch\n        image: gcr.io/fluentd-elasticsearch/fluentd:v2.5.1\n        resources:\n          limits:\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        volumeMounts:\n        - name: varlog\n          mountPath: /var/log\n        - name: varlibdockercontainers\n          mountPath: /var/lib/docker/containers\n          readOnly: true\n      terminationGracePeriodSeconds: 30\n      volumes:\n      - name: varlog\n        hostPath:\n          path: /var/log\n      - name: varlibdockercontainers\n        hostPath:\n          path: /var/lib/docker/containers`,\n\n    service: `apiVersion: v1\nkind: Service\nmetadata:\n  name: redis\nspec:\n  type: NodePort\n  ports:\n   - port: 6379\n     nodePort: 30003\n  selector:\n    app: redis`,\n\n    ingress: `apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: minimal-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /testpath\n        pathType: Prefix\n        backend:\n          service:\n            name: test\n            port:\n              number: 80`,\n\n    configmap: `apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: example-config\ndata:\n  example.property.1: hello`,\n\n    secret: `apiVersion: v1\nkind: Secret\nmetadata:\n  name: example-config\ntype: Opaque\nstringData:\n  example.property.1: test`,\n};\n\nexport default K8sTemplate;\n","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass RcDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rcDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.rcDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rcDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.rcDetail.data.spec.selector){\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rcDetail.data.spec.selector[key]}\n            </Tag></div>)\n        }\n        let images = [];\n        const containersData = this.state.rcDetail.data.spec.template.spec.containers;\n        for(let i=0; i<containersData.length; i++){\n            images.push(<div key={i}><Tag color=\"geekblue\">\n                {containersData[i][\"image\"]}\n            </Tag></div>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"Replication Controller 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.rcDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.rcDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.rcDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择器\">{selectors}</Descriptions.Item>\n                        <Descriptions.Item label=\"镜像\">{images}</Descriptions.Item>\n                        <Descriptions.Item label=\"副本数\">{this.state.rcDetail.data.status.replicas}</Descriptions.Item>\n                        <Descriptions.Item label=\"运行中\">{this.state.rcDetail.data.status.readyReplicas}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\n\nexport default RcDetailContent;","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass ServiceDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            serviceDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.serviceDetail.data.metadata.labels) {\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.serviceDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.serviceDetail.data.spec.selector) {\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.serviceDetail.data.spec.selector[key]}\n            </Tag></div>)\n        }\n        let portsList = [];\n        let ports = this.state.serviceDetail.data.spec.ports;\n        for(let i=0; i<ports.length; i++){\n            let portContent = \"\";\n            if(ports[i].hasOwnProperty(\"port\")){\n                portContent += ports[i][\"port\"]+\"(port) \";\n            }\n            if(ports[i].hasOwnProperty(\"targetPort\")){\n                portContent += ports[i][\"targetPort\"]+\"(targetPort) \";\n            }\n            if(ports[i].hasOwnProperty(\"nodePort\")){\n                portContent += ports[i][\"nodePort\"]+\"(nodePort) \";\n            }\n            portsList.push(<Tag color=\"geekblue\">\n                {ports[i][\"protocol\"] + \": \" +portContent}\n             </Tag>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"Service 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.serviceDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.serviceDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.serviceDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"clusterIP\">{this.state.serviceDetail.data.spec.clusterIP}</Descriptions.Item>\n                        <Descriptions.Item label=\"类型\">{this.state.serviceDetail.data.spec.type}</Descriptions.Item>\n                        <Descriptions.Item label=\"sessionAffinity\">{this.state.serviceDetail.data.spec.sessionAffinity}</Descriptions.Item>\n                        <Descriptions.Item label=\"端口\">{portsList}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择标签\">{selectors}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\n\nexport default ServiceDetailContent;","import React, { Component } from \"react\";\nimport { Area } from \"@antv/g2plot\";\n\nclass AreaChart extends Component {\n    constructor(props) {\n        super(props);\n        this.id = this.uuid();\n    }\n\n    uuid() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(\n            c,\n        ) {\n            var r = (Math.random() * 16) | 0,\n                v = c === \"x\" ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n\n    componentDidMount() {\n        let id = this.id;\n        let data = this.props.data;\n        let xField = this.props.xField ? this.props.xField : \"date\";\n        let yField = this.props.yField ? this.props.yField : \"value\";\n        setTimeout(() => {\n            this.area = new Area(id, {\n                data,\n                width: this.props.width,\n                height: this.props.height,\n                xField: xField,\n                yField: yField,\n                padding: \"auto\",\n                isStack: false,\n                yAxis: {\n                    label: {\n                        formatter: (v) => {\n                            return v + \" \" + this.props.unit;\n                        },\n                        style: {\n                            fill: \"#FE740C\",\n                        },\n                    },\n                },\n            });\n            this.area.render();\n        }, 300);\n    }\n\n    componentDidUpdate() {\n        this.area.changeData(this.props.data);\n    }\n\n    render() {\n        return (\n            <div\n                id={this.id}\n                style={{ height: this.props.height, width: this.props.width }}\n            ></div>\n        );\n    }\n}\n\nexport default AreaChart;\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Card,\n    Descriptions,\n    Layout,\n    Tag,\n    message,\n    List,\n    Typography,\n    Row,\n    Col,\n    Tabs,\n} from \"antd\";\nimport AreaChart from \"../cloud_resource/common/area_chart.js\";\nimport { getPodMetrics } from \"../../api/kubernetes\";\nimport { ReloadOutlined } from \"@ant-design/icons\";\nimport { K8sContainerIconSvg } from \"../../assets/Icons\";\n\nconst { Text } = Typography;\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nclass PodDetailContent extends Component {\n    constructor(props) {\n        super(props);\n        this.loadPodLog = this.loadPodLog.bind(this);\n        this.handleCancelLogModal = this.handleCancelLogModal.bind(this);\n        this.openWebTerminal = this.openWebTerminal.bind(this);\n        this.state = {\n            serviceDetail: this.props.location.state,\n            memoryChartData: [],\n            cpuChartData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.refreshPodCpuMetrics();\n        this.refreshPodMemoryMetrics();\n    }\n\n    refreshPodCpuMetrics() {\n        getPodMetrics({\n            clusterId: localStorage.getItem(\"clusterId\"),\n            metricName: \"cpu\",\n            namespace: this.props.location.state.data.metadata.namespace,\n            podName: this.props.location.state.data.metadata.name,\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    cpuChartData: res.data.items[0].metricPoints,\n                });\n            }\n        });\n    }\n\n    refreshPodMemoryMetrics() {\n        getPodMetrics({\n            clusterId: localStorage.getItem(\"clusterId\"),\n            metricName: \"memory\",\n            namespace: this.props.location.state.data.metadata.namespace,\n            podName: this.props.location.state.data.metadata.name,\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    memoryChartData: res.data.items[0].metricPoints,\n                });\n            }\n        });\n    }\n\n    loadPodLog(containerName) {\n        if (this.state.serviceDetail.data.status.phase !== \"Running\") {\n            message.error(\"当前pod未运行，无法查看日志！\");\n            return;\n        }\n        this.props.history.push({\n            pathname: \"/admin/k8s_cluster/manage/container_log\",\n            state: {\n                namespace: this.state.serviceDetail.data.metadata.namespace,\n                podName: this.state.serviceDetail.data.metadata.name,\n                containerName: containerName,\n            },\n        });\n    }\n\n    handleCancelLogModal() {\n        this.setState({ logModalVisible: false, logLoading: false });\n    }\n\n    openWebTerminal(containerName) {\n        if (this.state.serviceDetail.data.status.phase !== \"Running\") {\n            message.error(\"当前pod未运行，无法使用终端！\");\n            return;\n        }\n        this.props.history.push({\n            pathname: \"/admin/k8s_cluster/manage/container_terminal\",\n            state: {\n                namespace: this.state.serviceDetail.data.metadata.namespace,\n                podName: this.state.serviceDetail.data.metadata.name,\n                containerName: containerName,\n            },\n        });\n    }\n\n    render() {\n        let labels = [];\n        for (let key in this.state.serviceDetail.data.metadata.labels) {\n            labels.push(\n                <div key={key}>\n                    <Tag color=\"geekblue\">\n                        {key +\n                            \":\" +\n                            this.state.serviceDetail.data.metadata.labels[key]}\n                    </Tag>\n                </div>,\n            );\n        }\n        let containersList = this.state.serviceDetail.data.spec.containers.map(\n            (item) => {\n                let portsList = [];\n                if (item.hasOwnProperty(\"ports\")) {\n                    for (let i = 0; i < item.ports.length; i++) {\n                        portsList.push(\n                            <Tag color=\"geekblue\">\n                                {item.ports[i][\"containerPort\"] +\n                                    \"(\" +\n                                    item.ports[i][\"protocol\"] +\n                                    \")\"}\n                            </Tag>,\n                        );\n                    }\n                }\n                return (\n                    <Row\n                        style={{\n                            width: \"100%\",\n                            borderBottom: \"1px solid #e8e8e8\",\n                        }}\n                    >\n                        <Col span={24}>\n                            <List itemLayout=\"horizontal\">\n                                <List.Item style={{ width: \"100%\" }}>\n                                    <List.Item.Meta\n                                        avatar={<K8sContainerIconSvg />}\n                                        title={\n                                            <Text type=\"secondary\">\n                                                容器名：{item.name} &nbsp;&nbsp;\n                                                <Button\n                                                    type=\"link\"\n                                                    onClick={this.loadPodLog.bind(\n                                                        this,\n                                                        item.name,\n                                                    )}\n                                                    disabled={!this.state.serviceDetail.aclAuthMap[\"GET:/kubernetes/pod/log\"]}\n                                                >\n                                                    查看日志\n                                                </Button>\n                                                <Button\n                                                    type=\"link\"\n                                                    onClick={this.openWebTerminal.bind(\n                                                        this,\n                                                        item.name,\n                                                    )}\n                                                    disabled={!this.state.serviceDetail.aclAuthMap[\"WebSSH:K8S-Pod\"]}\n                                                >\n                                                    执行命令\n                                                </Button>\n                                            </Text>\n                                        }\n                                        description={\n                                            <Text type=\"secondary\">\n                                                镜像：{item.image} &nbsp;&nbsp;\n                                                端口: {portsList}\n                                            </Text>\n                                        }\n                                    />\n                                </List.Item>\n                            </List>\n                        </Col>\n                    </Row>\n                );\n            },\n        );\n\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Tabs defaultActiveKey=\"Pod详情\">\n                    <TabPane tab=\"Pod详情\" key=\"Pod详情\">\n                        <Descriptions bordered size=\"small\" column={2}>\n                            <Descriptions.Item label=\"Pod名称\">\n                                {this.state.serviceDetail.data.metadata.name}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"命名空间\">\n                                {\n                                    this.state.serviceDetail.data.metadata\n                                        .namespace\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"创建时间\">\n                                {\n                                    this.state.serviceDetail.data.metadata\n                                        .creationTimestamp\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"标签\">\n                                {labels}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"状态\">\n                                {this.state.serviceDetail.data.status.phase}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Host IP\">\n                                {this.state.serviceDetail.data.status.hostIP}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Pod IP\">\n                                {this.state.serviceDetail.data.status.podIP}\n                            </Descriptions.Item>\n                        </Descriptions>\n                        <Card\n                            size=\"small\"\n                            title=\"容器列表\"\n                            style={{ width: \"100%\", marginTop: \"10px\" }}\n                        >\n                            {containersList}\n                        </Card>\n                    </TabPane>\n                    <TabPane tab=\"Pod监控\" key=\"Pod监控\">\n                        <Card\n                            size=\"small\"\n                            title=\"CPU\"\n                            extra={\n                                <ReloadOutlined\n                                    onClick={this.refreshPodCpuMetrics.bind(\n                                        this,\n                                    )}\n                                />\n                            }\n                            style={{ marginBottom: 20 }}\n                        >\n                            <AreaChart\n                                width=\"100%\"\n                                height={200}\n                                xField=\"timestamp\"\n                                unit=\"m\"\n                                data={this.state.cpuChartData}\n                            />\n                        </Card>\n                        <Card\n                            size=\"small\"\n                            title=\"Memory\"\n                            extra={\n                                <ReloadOutlined\n                                    onClick={this.refreshPodMemoryMetrics.bind(\n                                        this,\n                                    )}\n                                />\n                            }\n                        >\n                            <AreaChart\n                                width=\"100%\"\n                                height={200}\n                                xField=\"timestamp\"\n                                unit=\"Mi\"\n                                data={this.state.memoryChartData}\n                            />\n                        </Card>\n                    </TabPane>\n                </Tabs>\n            </Content>\n        );\n    }\n}\n\nexport default PodDetailContent;\n","import React, { Component } from \"react\";\nimport { Button, Icon, Layout, message, Row, Spin } from \"antd\";\nimport { ReloadOutlined } from \"@ant-design/icons\";\nimport { getPodLogs } from \"../../api/kubernetes\";\n\nconst { Content } = Layout;\n\nclass ContainerLogContent extends Component {\n    constructor(props) {\n        super(props);\n        this.goBack = this.goBack.bind(this);\n        this.syncLogs = this.syncLogs.bind(this);\n        this.state = {\n            logLoading: false,\n            containerInfo: this.props.location.state,\n        };\n    }\n\n    componentDidMount() {\n        this.syncLogs();\n    }\n\n    goBack() {\n        this.setState({ logContent: \"\" }, () => {\n            this.props.history.goBack();\n        });\n    }\n\n    syncLogs() {\n        this.setState({ logLoading: true });\n        getPodLogs({\n            namespace: this.state.containerInfo.namespace,\n            podName: this.state.containerInfo.podName,\n            containerName: this.state.containerInfo.containerName,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState(\n                        { logContent: res.data, logLoading: false },\n                        () => {\n                            this.scrollToBottom();\n                        },\n                    );\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    scrollToBottom() {\n        let panel = document.getElementById(\"logPanel\");\n        panel.scrollTop = panel.scrollHeight;\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Button type=\"link\" onClick={this.goBack}>\n                        <Icon type=\"left\" />\n                        返回上级\n                    </Button>\n                    <Button\n                        type=\"link\"\n                        icon={<ReloadOutlined />}\n                        onClick={this.syncLogs}\n                        style={{ float: \"right\" }}\n                    >\n                        刷 新\n                    </Button>\n                </Row>\n                <Spin spinning={this.state.logLoading}>\n                    <div style={{ height: \"85vh\" }}>\n                        <div\n                            id=\"logPanel\"\n                            style={{\n                                whiteSpace: \"pre-line\",\n                                backgroundColor: \"rgb(19, 19, 19)\",\n                                color: \"#fff\",\n                                fontSize: \"14px\",\n                                lineHeight: \"20px\",\n                                height: \"100%\",\n                                padding: \"10px\",\n                                overflow: \"scroll\",\n                            }}\n                        >\n                            {this.state.logContent}\n                        </div>\n                    </div>\n                </Spin>\n            </Content>\n        );\n    }\n}\n\nexport default ContainerLogContent;\n","import React, { Component } from \"react\";\nimport { Descriptions, Layout, Tag, Typography, Tabs, Card } from \"antd\";\nimport { ReloadOutlined } from \"@ant-design/icons\";\nimport AreaChart from \"../cloud_resource/common/area_chart.js\";\nimport { getNodeMetrics } from \"../../api/kubernetes\";\n\nconst { Content } = Layout;\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\nclass NodeDetailContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nodeDetail: this.props.location.state,\n            memoryChartData: [],\n            cpuChartData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.refreshNodeCpuMetrics();\n        this.refreshNodeMemoryMetrics();\n    }\n\n    refreshNodeCpuMetrics() {\n        getNodeMetrics({\n            clusterId: localStorage.getItem(\"clusterId\"),\n            metricName: \"cpu\",\n            nodeName: this.props.location.state.data.metadata.name,\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    cpuChartData: res.data.items[0].metricPoints,\n                });\n            }\n        });\n    }\n\n    refreshNodeMemoryMetrics() {\n        getNodeMetrics({\n            clusterId: localStorage.getItem(\"clusterId\"),\n            metricName: \"memory\",\n            nodeName: this.props.location.state.data.metadata.name,\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    memoryChartData: res.data.items[0].metricPoints,\n                });\n            }\n        });\n    }\n\n    render() {\n        let labels = [];\n        for (let key in this.state.nodeDetail.data.metadata.labels) {\n            labels.push(\n                <div key={key}>\n                    <Tag color=\"geekblue\">\n                        {key +\n                            \":\" +\n                            this.state.nodeDetail.data.metadata.labels[key]}\n                    </Tag>\n                </div>,\n            );\n        }\n        let annotations = [];\n        for (let key in this.state.nodeDetail.data.metadata.annotations) {\n            annotations.push(\n                <div key={key}>\n                    <Tag color=\"geekblue\">\n                        {key +\n                            \":\" +\n                            this.state.nodeDetail.data.metadata.annotations[\n                                key\n                            ]}\n                    </Tag>\n                </div>,\n            );\n        }\n        let addresses = [];\n        const addressesData = this.state.nodeDetail.data.status.addresses;\n        for (let i = 0; i < addressesData.length; i++) {\n            addresses.push(\n                <Text>\n                    {addressesData[i][\"type\"] +\n                        \":  \" +\n                        addressesData[i][\"address\"]}\n                </Text>,\n            );\n            addresses.push(<br />);\n        }\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Tabs defaultActiveKey=\"Node信息\">\n                    <TabPane tab=\"Node信息\" key=\"Node信息\">\n                        <Descriptions bordered size=\"small\" column={1}>\n                            <Descriptions.Item label=\"名称\">\n                                {this.state.nodeDetail.data.metadata.name}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"创建时间\">\n                                {\n                                    this.state.nodeDetail.data.metadata\n                                        .creationTimestamp\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"标签\">\n                                {labels}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"注解\">\n                                {annotations}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"地址\">\n                                {addresses}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"kubelet端口\">\n                                {\n                                    this.state.nodeDetail.data.status\n                                        .daemonEndpoints.kubeletEndpoint.Port\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"容器版本\">\n                                {\n                                    this.state.nodeDetail.data.status.nodeInfo\n                                        .containerRuntimeVersion\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"kubelet版本\">\n                                {\n                                    this.state.nodeDetail.data.status.nodeInfo\n                                        .kubeletVersion\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"kubeProxy版本\">\n                                {\n                                    this.state.nodeDetail.data.status.nodeInfo\n                                        .kubeProxyVersion\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"系统\">\n                                {\n                                    this.state.nodeDetail.data.status.nodeInfo\n                                        .operatingSystem\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"架构\">\n                                {\n                                    this.state.nodeDetail.data.status.nodeInfo\n                                        .architecture\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </TabPane>\n                    <TabPane tab=\"Node监控\" key=\"Node监控\">\n                        <Card\n                            size=\"small\"\n                            title=\"CPU\"\n                            extra={\n                                <ReloadOutlined\n                                    onClick={this.refreshNodeCpuMetrics.bind(\n                                        this,\n                                    )}\n                                />\n                            }\n                            style={{ marginBottom: 20 }}\n                        >\n                            <AreaChart\n                                width=\"100%\"\n                                height={200}\n                                xField=\"timestamp\"\n                                unit=\"m\"\n                                data={this.state.cpuChartData}\n                            />\n                        </Card>\n                        <Card\n                            size=\"small\"\n                            title=\"Memory\"\n                            extra={\n                                <ReloadOutlined\n                                    onClick={this.refreshNodeMemoryMetrics.bind(\n                                        this,\n                                    )}\n                                />\n                            }\n                        >\n                            <AreaChart\n                                width=\"100%\"\n                                height={200}\n                                xField=\"timestamp\"\n                                unit=\"Mi\"\n                                data={this.state.memoryChartData}\n                            />\n                        </Card>\n                    </TabPane>\n                </Tabs>\n            </Content>\n        );\n    }\n}\n\nexport default NodeDetailContent;\n","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass RsDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rsDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.rsDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let annotations = [];\n        for(let key in this.state.rsDetail.data.metadata.annotations){\n            annotations.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.annotations[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.rsDetail.data.spec.selector.matchLabels){\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.spec.selector.matchLabels[key]}\n            </Tag></div>)\n        }\n        let images = [];\n        const containersData = this.state.rsDetail.data.spec.template.spec.containers;\n        for(let i=0; i<containersData.length; i++){\n            images.push(<div key={i}><Tag color=\"geekblue\">\n                {containersData[i][\"image\"]}\n            </Tag></div>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"ReplicaSet 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.rsDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.rsDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.rsDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"注解\">{annotations}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择器\">{selectors}</Descriptions.Item>\n                        <Descriptions.Item label=\"镜像\">{images}</Descriptions.Item>\n                        <Descriptions.Item label=\"副本数\">{this.state.rsDetail.data.status.replicas}</Descriptions.Item>\n                        <Descriptions.Item label=\"运行中\">{this.state.rsDetail.data.status.readyReplicas}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\n\nexport default RsDetailContent;","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass DeploymentDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rsDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.rsDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let annotations = [];\n        for(let key in this.state.rsDetail.data.metadata.annotations){\n            annotations.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.annotations[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.rsDetail.data.spec.selector.matchLabels){\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.spec.selector.matchLabels[key]}\n            </Tag></div>)\n        }\n        let images = [];\n        const containersData = this.state.rsDetail.data.spec.template.spec.containers;\n        for(let i=0; i<containersData.length; i++){\n            images.push(<div key={i}><Tag color=\"geekblue\">\n                {containersData[i][\"image\"]}\n            </Tag></div>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"Deployment 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.rsDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.rsDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.rsDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"注解\">{annotations}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择器\">{selectors}</Descriptions.Item>\n                        <Descriptions.Item label=\"镜像\">{images}</Descriptions.Item>\n                        <Descriptions.Item label=\"副本数\">{this.state.rsDetail.data.status.replicas}</Descriptions.Item>\n                        <Descriptions.Item label=\"运行中\">{this.state.rsDetail.data.status.readyReplicas}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n}\n\nexport default DeploymentDetailContent;","import React, { Component } from \"react\";\nimport { Card, Descriptions, Layout, List } from \"antd\";\nimport moment from \"moment\";\n\nconst { Content } = Layout;\n\nclass IngressDetailContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ingressDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let certContent = this.state.ingressDetail.data.spec.tls.map(\n            (item, index) => {\n                return (\n                    <span>\n                        {item.secretName}\n                        <br />\n                    </span>\n                );\n            },\n        );\n        let domainContent = this.state.ingressDetail.data.spec.rules.map(\n            (item, index) => {\n                return (\n                    <List\n                        header={<div>{item.host}</div>}\n                        bordered\n                        dataSource={item.http.paths}\n                        renderItem={(item) => (\n                            <List.Item>\n                                <Descriptions column={2}>\n                                    <Descriptions.Item label=\"path\">\n                                        {item.path}\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"pathType\">\n                                        {item.pathType}\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"backend\">\n                                        {item.backend.serviceName}:\n                                        {item.backend.servicePort}\n                                    </Descriptions.Item>\n                                </Descriptions>\n                            </List.Item>\n                        )}\n                    />\n                );\n            },\n        );\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Card\n                    size=\"small\"\n                    title=\"Ingress 详情\"\n                    style={{ width: \"100%\" }}\n                >\n                    <Descriptions bordered size=\"small\" column={2}>\n                        <Descriptions.Item label=\"名称\">\n                            {this.state.ingressDetail.data.metadata.name}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">\n                            {this.state.ingressDetail.data.metadata.namespace}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">\n                            {moment(\n                                this.state.ingressDetail.data.metadata\n                                    .creationTimestamp,\n                            ).format(\"YYYY-MM-DD HH:mm:ss\")}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"证书\">\n                            {certContent}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"域名配置\">\n                            {domainContent}\n                        </Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        );\n    }\n}\n\nexport default IngressDetailContent;\n","import React, { Component } from \"react\";\nimport {\n    Layout,\n    Row,\n    message,\n    Col,\n    Select,\n    Tabs,\n    Card,\n    Table,\n    Tag,\n    Button,\n    Modal,\n    Alert,\n    Spin,\n    Icon,\n    Tooltip,\n    Drawer,\n    Menu,\n    Dropdown,\n    InputNumber,\n    Collapse,\n    Divider,\n    Input,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport { withRouter } from 'react-router-dom';\nimport {\n    deleteConfigMap,\n    deleteResource,\n    deleteSecret,\n    getConfigDict,\n    getDeployments,\n    getNamespaces,\n    getNodes,\n    getPods,\n    getReplicaSets,\n    getReplicationControllers,\n    getResourceYaml,\n    getSecretDict,\n    getServices,\n    postApplyYaml,\n    putResourceScale,\n    getIngresses,\n    putApplyYaml,\n    restartDeployments,\n} from \"../../api/kubernetes\";\nimport moment from \"moment\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport K8sTemplate from \"../../utils/k8s_template\";\nimport { Route, Switch } from \"react-router-dom\";\nimport RcDetailContent from \"./rc_detail\";\nimport ServiceDetailContent from \"./service_detail\";\nimport PodDetailContent from \"./pod_detail\";\nimport WebTerminalContent from \"./web_terminal\";\nimport ContainerLogContent from \"./container_log\";\nimport NodeDetailContent from \"./node_detail\";\nimport RsDetailContent from \"./rs_detail\";\nimport DeploymentDetailContent from \"./deployment_detail\";\nimport IngressDetailContent from \"./ingress_detail\";\nimport { StatusDoneSvg, StatusProgressSvg } from \"../../assets/Icons\";\nimport Highlighter from \"react-highlight-words\";\n\nconst { TabPane } = Tabs;\nconst { Content } = Layout;\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { confirm } = Modal;\n\nconst customPanelStyle = {\n    background: \"#f7f7f7\",\n    borderRadius: 4,\n    marginBottom: 24,\n    border: 0,\n    overflow: \"hidden\",\n};\n\nclass K8sNamespacesContent extends Component {\n    constructor(props) {\n        super(props);\n        this.refreshNamespaceResources = this.refreshNamespaceResources.bind(\n            this,\n        );\n        this.selectChange = this.selectChange.bind(this);\n        this.yarmCreateK8sResource = this.yarmCreateK8sResource.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.selectTemplateChange = this.selectTemplateChange.bind(this);\n        this.onDrawerClose = this.onDrawerClose.bind(this);\n        this.handleYamlDetailCancel = this.handleYamlDetailCancel.bind(this);\n        this.handleScaleCancel = this.handleScaleCancel.bind(this);\n        this.handleScaleCommit = this.handleScaleCommit.bind(this);\n        this.onInputNumberChange = this.onInputNumberChange.bind(this);\n        this.handleConfigCancel = this.handleConfigCancel.bind(this);\n        this.updateYamlContent = this.updateYamlContent.bind(this);\n        this.state = {\n            nodeColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return (\n                            <Button\n                                type=\"link\"\n                                size=\"small\"\n                                onClick={this.showDetail.bind(\n                                    this,\n                                    \"node\",\n                                    record,\n                                )}\n                            >\n                                {record.metadata.name}\n                            </Button>\n                        );\n                    },\n                },\n                {\n                    title: \"标签\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        let labels = [];\n                        for (let key in record.metadata.labels) {\n                            labels.push(\n                                <div key={key}>\n                                    <Tag color=\"geekblue\">\n                                        {key +\n                                            \":\" +\n                                            record.metadata.labels[key]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"已就绪\",\n                    key: \"ready\",\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color=\"#f50\">False</Tag>;\n                        for (let i = 0; i < data.length; i++) {\n                            if (data[i][\"type\"] === \"Ready\") {\n                                if (data[i][\"status\"] !== \"False\") {\n                                    content = <Tag color=\"#87d068\">True</Tag>;\n                                }\n                                break;\n                            }\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"磁盘压力\",\n                    key: \"disk\",\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color=\"#87d068\">无压力</Tag>;\n                        for (let i = 0; i < data.length; i++) {\n                            if (data[i][\"type\"] === \"DiskPressure\") {\n                                if (data[i][\"status\"] !== \"False\") {\n                                    content = <Tag color=\"#f50\">有压力</Tag>;\n                                }\n                                break;\n                            }\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"内存压力\",\n                    key: \"memory\",\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color=\"#87d068\">无压力</Tag>;\n                        for (let i = 0; i < data.length; i++) {\n                            if (data[i][\"type\"] === \"MemoryPressure\") {\n                                if (data[i][\"status\"] !== \"False\") {\n                                    content = <Tag color=\"#f50\">有压力</Tag>;\n                                }\n                                break;\n                            }\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"PID压力\",\n                    key: \"pid\",\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color=\"#87d068\">无压力</Tag>;\n                        for (let i = 0; i < data.length; i++) {\n                            if (data[i][\"type\"] === \"PIDPressure\") {\n                                if (data[i][\"status\"] !== \"False\") {\n                                    content = <Tag color=\"#f50\">有压力</Tag>;\n                                }\n                                break;\n                            }\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n            ],\n            rcColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        let icon = <StatusDoneSvg />;\n                        if (\n                            record.status.readyReplicas === undefined ||\n                            record.status.readyReplicas < record.status.replicas\n                        ) {\n                            icon = <StatusProgressSvg />;\n                        }\n                        return (\n                            <div>\n                                <span\n                                    style={{ position: \"relative\", top: \"5px\" }}\n                                >\n                                    {icon}\n                                </span>\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.showDetail.bind(\n                                        this,\n                                        \"rc\",\n                                        record,\n                                    )}\n                                >\n                                    {record.metadata.name}\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"标签\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        let labels = [];\n                        for (let key in record.metadata.labels) {\n                            labels.push(\n                                <div key={key}>\n                                    <Tag color=\"geekblue\">\n                                        {key +\n                                            \":\" +\n                                            record.metadata.labels[key]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"容器组\",\n                    key: \"replicas\",\n                    render: (text, record) => {\n                        let readyReplicas = \" - \";\n                        if (record.status.hasOwnProperty(\"readyReplicas\")) {\n                            readyReplicas = record.status.readyReplicas;\n                        }\n                        return readyReplicas + \" / \" + record.status.replicas;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"镜像\",\n                    key: \"image\",\n                    render: (text, record) => {\n                        let data = record.spec.template.spec.containers;\n                        let labels = [];\n                        for (let i = 0; i < data.length; i++) {\n                            labels.push(\n                                <div key={i}>\n                                    <Tag color=\"geekblue\">{data[i].image}</Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.autoScaleHandler.bind(\n                                            this,\n                                            \"rc\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"PUT:/kubernetes/scale\"]}\n                                    >\n                                        {\" \"}\n                                        伸缩\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"rc\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"DELETE:/kubernetes/resource\"]}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"rc\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"GET:/kubernetes/yaml\"]}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    className=\"ant-dropdown-link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            rsColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        let icon = <StatusDoneSvg />;\n                        if (\n                            record.status.readyReplicas === undefined ||\n                            record.status.readyReplicas < record.status.replicas\n                        ) {\n                            icon = <StatusProgressSvg />;\n                        }\n                        return (\n                            <div>\n                                <span\n                                    style={{ position: \"relative\", top: \"5px\" }}\n                                >\n                                    {icon}\n                                </span>\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.showDetail.bind(\n                                        this,\n                                        \"rs\",\n                                        record,\n                                    )}\n                                >\n                                    {record.metadata.name}\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"标签\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        let labels = [];\n                        for (let key in record.metadata.labels) {\n                            labels.push(\n                                <div key={key}>\n                                    <Tag color=\"geekblue\">\n                                        {key +\n                                            \":\" +\n                                            record.metadata.labels[key]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"容器组\",\n                    key: \"replicas\",\n                    render: (text, record) => {\n                        let readyReplicas = \" - \";\n                        if (record.status.hasOwnProperty(\"readyReplicas\")) {\n                            readyReplicas = record.status.readyReplicas;\n                        }\n                        return readyReplicas + \" / \" + record.status.replicas;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"镜像\",\n                    key: \"image\",\n                    render: (text, record) => {\n                        let data = record.spec.template.spec.containers;\n                        let labels = [];\n                        for (let i = 0; i < data.length; i++) {\n                            labels.push(\n                                <div key={i}>\n                                    <Tag color=\"geekblue\">{data[i].image}</Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.autoScaleHandler.bind(\n                                            this,\n                                            \"rs\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"PUT:/kubernetes/scale\"]}\n                                    >\n                                        伸缩\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"rs\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"DELETE:/kubernetes/resource\"]}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"rs\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"GET:/kubernetes/yaml\"]}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    type=\"link\"\n                                    className=\"ant-dropdown-link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            serviceColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return (\n                            <Button\n                                type=\"link\"\n                                size=\"small\"\n                                onClick={this.showDetail.bind(\n                                    this,\n                                    \"service\",\n                                    record,\n                                )}\n                            >\n                                {record.metadata.name}\n                            </Button>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"标签\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        let labels = [];\n                        for (let key in record.metadata.labels) {\n                            labels.push(\n                                <div key={key}>\n                                    <Tag color=\"geekblue\">\n                                        {key +\n                                            \":\" +\n                                            record.metadata.labels[key]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"集群IP\",\n                    key: \"replicas\",\n                    render: (text, record) => {\n                        return record.spec.clusterIP;\n                    },\n                },\n                {\n                    title: \"内部端点\",\n                    key: \"image\",\n                    render: (text, record) => {\n                        let data = record.spec.ports;\n                        let labels = [];\n                        for (let i = 0; i < data.length; i++) {\n                            labels.push(\n                                <div key={i}>\n                                    <Tag color=\"geekblue\">\n                                        {record.metadata.name +\n                                            \".\" +\n                                            record.metadata.namespace +\n                                            \":\" +\n                                            data[i][\"port\"] +\n                                            \" \" +\n                                            data[i][\"protocol\"]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"service\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"DELETE:/kubernetes/resource\"]}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"service\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"GET:/kubernetes/yaml\"]}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    size=\"small\"\n                                    className=\"ant-dropdown-link\"\n                                    type=\"link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            ingressColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return (\n                            <Button\n                                type=\"link\"\n                                size=\"small\"\n                                onClick={this.showDetail.bind(\n                                    this,\n                                    \"ingress\",\n                                    record,\n                                )}\n                            >\n                                {record.metadata.name}\n                            </Button>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"域名\",\n                    key: \"domain\",\n                    render: (text, record) => {\n                        let content = record.spec.rules.map((item, index) => {\n                            return (\n                                <span>\n                                    {item.host}\n                                    <br />\n                                </span>\n                            );\n                        });\n                        return <span>{content}</span>;\n                    },\n                },\n                {\n                    title: \"证书\",\n                    key: \"cert\",\n                    render: (text, record) => {\n                        if (record.spec.tls === undefined) {\n                            return <span>-</span>;\n                        }\n                        let content = record.spec.tls.map((item, index) => {\n                            return (\n                                <span>\n                                    {item.secretName}\n                                    <br />\n                                </span>\n                            );\n                        });\n                        return <span>{content}</span>;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"ingress\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"DELETE:/kubernetes/resource\"]}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"ingress\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"GET:/kubernetes/yaml\"]}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    size=\"small\"\n                                    className=\"ant-dropdown-link\"\n                                    type=\"link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            deploymentColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        let icon = <StatusDoneSvg />;\n                        if (\n                            record.status.readyReplicas === undefined ||\n                            record.status.readyReplicas < record.status.replicas\n                        ) {\n                            icon = <StatusProgressSvg />;\n                        }\n                        return (\n                            <div>\n                                <span\n                                    style={{ position: \"relative\", top: \"5px\" }}\n                                >\n                                    {icon}\n                                </span>\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.showDetail.bind(\n                                        this,\n                                        \"deployment\",\n                                        record,\n                                    )}\n                                >\n                                    {record.metadata.name}\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"标签\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        let labels = [];\n                        for (let key in record.metadata.labels) {\n                            labels.push(\n                                <div key={key}>\n                                    <Tag color=\"geekblue\">\n                                        {key +\n                                            \":\" +\n                                            record.metadata.labels[key]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"容器组\",\n                    key: \"replicas\",\n                    render: (text, record) => {\n                        let readyReplicas = \" - \";\n                        if (record.status.hasOwnProperty(\"readyReplicas\")) {\n                            readyReplicas = record.status.readyReplicas;\n                        }\n                        return readyReplicas + \" / \" + record.status.replicas;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"镜像\",\n                    key: \"image\",\n                    render: (text, record) => {\n                        let data = record.spec.template.spec.containers;\n                        let labels = [];\n                        for (let i = 0; i < data.length; i++) {\n                            labels.push(\n                                <div key={i}>\n                                    <Tag color=\"geekblue\">{data[i].image}</Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.autoScaleHandler.bind(\n                                            this,\n                                            \"deployment\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"PUT:/kubernetes/scale\"]}\n                                    >\n                                        伸缩\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.restartDeployHandler.bind(\n                                            this,\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"PUT:/kubernetes/deployment/restart\"]}\n                                    >\n                                        重启\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"deployment\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"DELETE:/kubernetes/resource\"]}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"3\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"deployment\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"GET:/kubernetes/yaml\"]}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    size=\"small\"\n                                    className=\"ant-dropdown-link\"\n                                    type=\"link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            podColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return (\n                            <Button\n                                type=\"link\"\n                                size=\"small\"\n                                onClick={this.showDetail.bind(\n                                    this,\n                                    \"pod\",\n                                    record,\n                                )}\n                            >\n                                {record.metadata.name}\n                            </Button>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"节点\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        return <span>{record.spec.nodeName}</span>;\n                    },\n                },\n                {\n                    title: \"状态\",\n                    key: \"status\",\n                    dataIndex: \"\",\n                    render: (text, record) => {\n                        let value = record.status.phase;\n                        let statusContent = <Tag color=\"#87d068\">{value}</Tag>;\n                        if (value === \"Failed\") {\n                            statusContent = <Tag color=\"#f50\">{value}</Tag>;\n                        }\n                        if (value === \"Pending\") {\n                            statusContent = <Tag color=\"#108ee9\">{value}</Tag>;\n                        }\n                        return statusContent;\n                    },\n                },\n                {\n                    title: \"重启次数\",\n                    key: \"count\",\n                    render: (text, record) => {\n                        if (record.status.phase === \"Failed\") {\n                            return \"0\";\n                        }\n                        let data = record.status.containerStatuses;\n                        let labels = [];\n                        for (let i = 0; i < data.length; i++) {\n                            labels.push(\n                                <div key={i}>\n                                    <Tag color=\"geekblue\">\n                                        {data[i][\"name\"] +\n                                            \" - \" +\n                                            data[i][\"restartCount\"]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"pod\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"DELETE:/kubernetes/resource\"]}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                {/* <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"pod\",\n                                            record,\n                                        )}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item> */}\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    className=\"ant-dropdown-link\"\n                                    type=\"link\"\n                                    size=\"small\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            configDictColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return <span>{record.metadata.name}</span>;\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"creationTimestamp\",\n                    render: (text, record) => {\n                        return (\n                            <span>\n                                {moment(\n                                    record.metadata.creationTimestamp,\n                                ).format(\"YYYY-MM-DD\")}\n                            </span>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"data\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.showDictValue.bind(\n                                            this,\n                                            record,\n                                        )}\n                                    >\n                                        查看\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.deleteDictValue.bind(\n                                            this,\n                                            \"configmap\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"DELETE:/kubernetes/resource\"]}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        size=\"small\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"configmap\",\n                                            record,\n                                        )}\n                                        disabled={!this.props.aclAuthMap[\"GET:/kubernetes/yaml\"]}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    size=\"small\"\n                                    className=\"ant-dropdown-link\"\n                                    type=\"link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            secretDictColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return <span>{record.metadata.name}</span>;\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"类型\",\n                    dataIndex: \"type\",\n                    key: \"type\",\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"creationTimestamp\",\n                    render: (text, record) => {\n                        return (\n                            <span>\n                                {moment(\n                                    record.metadata.creationTimestamp,\n                                ).format(\"YYYY-MM-DD\")}\n                            </span>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"data\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.showDictValue.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    查看\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.deleteDictValue.bind(\n                                        this,\n                                        \"secret\",\n                                        record,\n                                    )}\n                                    disabled={!this.props.aclAuthMap[\"DELETE:/kubernetes/resource\"]}\n                                >\n                                    删除\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            namespaceList: [],\n            replicationControllerList: [],\n            deploymentList: [],\n            replicaSetList: [],\n            serviceList: [],\n            ingressList: [],\n            podList: [],\n            nodeList: [],\n            configDictList: [],\n            secretDictList: [],\n            dictConfigValue: {},\n            refreshDataLoading: false,\n            detailDrawerVisible: false,\n            yamlModalVisible: false,\n            scaleModalVisible: false,\n            configModalVisible: false,\n            yamlDetail: \"\",\n            currentNamespace: \"default\",\n            yamlCode: \"\",\n            yamlType: \"\",\n            replicaCount: 0,\n            scaleResType: \"\",\n            scaleResData: {\n                spec: {\n                    replicas: 0,\n                },\n            },\n        };\n    }\n\n    componentDidMount() {\n        this.getK8sNamespaces();\n        this.refreshNamespaceResources();\n        this.getK8sNodes();\n    }\n\n    selectChange(value) {\n        this.setState({ currentNamespace: value }, () => {\n            this.refreshNamespaceResources();\n        });\n    }\n\n    getK8sNamespaces() {\n        getNamespaces()\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ namespaceList: res.data.items });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getK8sNodes() {\n        getNodes()\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        nodeList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    refreshNamespaceResources() {\n        this.getNamespaceDeployments();\n        this.getNamespaceReplicationControllers();\n        this.getNamespaceReplicaSets();\n        this.getNamespaceServices();\n        this.getNamespaceIngress();\n        this.getNamespacePods();\n        this.getNamespaceConfigDict();\n        this.getNamespaceSecretDict();\n        this.showLoading();\n    }\n\n    showLoading = () => {\n        this.setState({ refreshDataLoading: true });\n        setTimeout(() => {\n            this.setState({ refreshDataLoading: false });\n        }, 800);\n    };\n\n    getNamespaceDeployments() {\n        getDeployments({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        deploymentList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceReplicationControllers() {\n        getReplicationControllers({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        replicationControllerList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceReplicaSets() {\n        getReplicaSets({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        replicaSetList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceServices() {\n        getServices({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        serviceList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespacePods() {\n        getPods({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        podList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceIngress() {\n        getIngresses({ namespace: this.state.currentNamespace })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        ingressList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceConfigDict() {\n        getConfigDict({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        configDictList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceSecretDict() {\n        getSecretDict({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        secretDictList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getColumnSearchProps = (dataIndex) => ({\n        filterDropdown: ({\n            setSelectedKeys,\n            selectedKeys,\n            confirm,\n            clearFilters,\n        }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={(node) => {\n                        this.searchInput = node;\n                    }}\n                    value={selectedKeys[0]}\n                    onChange={(e) =>\n                        setSelectedKeys(e.target.value ? [e.target.value] : [])\n                    }\n                    onPressEnter={() =>\n                        this.handleSearch(selectedKeys, confirm)\n                    }\n                    style={{ width: 188, marginBottom: 8, display: \"block\" }}\n                />\n                <Button\n                    type=\"primary\"\n                    onClick={() => this.handleSearch(selectedKeys, confirm)}\n                    icon=\"search\"\n                    size=\"small\"\n                    style={{ width: 90, marginRight: 8 }}\n                >\n                    查找\n                </Button>\n                <Button\n                    onClick={() => this.handleReset(clearFilters)}\n                    size=\"small\"\n                    style={{ width: 90 }}\n                >\n                    重置\n                </Button>\n            </div>\n        ),\n        filterIcon: (filtered) => (\n            <Icon\n                type=\"search\"\n                style={{ color: filtered ? \"#1890ff\" : \"#40a9ff\" }}\n            />\n        ),\n        onFilter: (value, record) => {\n            return record[\"metadata\"][dataIndex]\n                .toString()\n                .toLowerCase()\n                .includes(value.toLowerCase());\n        },\n        onFilterDropdownVisibleChange: (visible) => {\n            if (visible) {\n                setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: (text) => (\n            <Highlighter\n                highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n                searchWords={[this.state.searchText]}\n                autoEscape\n                textToHighlight={text.toString()}\n            />\n        ),\n    });\n\n    handleSearch = (selectedKeys, confirm) => {\n        confirm();\n        this.setState({ searchText: selectedKeys[0] });\n    };\n\n    handleReset = (clearFilters) => {\n        clearFilters();\n        this.setState({ searchText: \"\" });\n    };\n\n    showDictValue(data) {\n        this.setState({\n            configModalVisible: true,\n            dictConfigValue: data.data,\n        });\n    }\n\n    deleteDictValue(type, data) {\n        switch (type) {\n            case \"configmap\":\n                deleteConfigMap({\n                    namespace: this.state.currentNamespace,\n                    resName: data.metadata.name,\n                })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            message.success(\"删除成功\");\n                            this.refreshNamespaceResources();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n                break;\n            case \"secret\":\n                deleteSecret({\n                    namespace: this.state.currentNamespace,\n                    resName: data.metadata.name,\n                })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            message.success(\"删除成功\");\n                            this.refreshNamespaceResources();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n                break;\n            default:\n                message.warn(\"不支持的类型\");\n                break;\n        }\n    }\n\n    handleConfigCancel() {\n        this.setState({\n            configModalVisible: false,\n        });\n    }\n\n    yarmCreateK8sResource() {\n        this.setState({ createModalVisible: true });\n    }\n\n    handleOk() {\n        if (this.state.yamlCode.trim() === \"\") {\n            message.warn(\"需要填写文件内容！\");\n            return;\n        }\n        postApplyYaml({\n            namespace: this.state.currentNamespace,\n            yamlContent: this.state.yamlCode,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ createModalVisible: false });\n                    message.success(\"提交成功，请到对应资源栏查看详情\");\n                    this.refreshNamespaceResources();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleCancel() {\n        this.setState({ createModalVisible: false });\n    }\n\n    selectTemplateChange(data) {\n        this.setState({ yamlCode: K8sTemplate[data] });\n    }\n\n    showDetail(resourceType, data) {\n        this.setState({ detailDrawerVisible: true });\n        switch (resourceType) {\n            case \"node\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/node_detail\",\n                    state: { data, aclAuthMap: this.props.aclAuthMap },\n                });\n                break;\n            case \"rc\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/rc_detail\",\n                    state: { data },\n                });\n                break;\n            case \"rs\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/rs_detail\",\n                    state: { data },\n                });\n                break;\n            case \"deployment\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/deployment_detail\",\n                    state: { data },\n                });\n                break;\n            case \"service\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/service_detail\",\n                    state: { data },\n                });\n                break;\n            case \"ingress\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/ingress_detail\",\n                    state: { data },\n                });\n                break;\n            case \"pod\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/pod_detail\",\n                    state: { data, aclAuthMap: this.props.aclAuthMap },\n                });\n                break;\n            default:\n                message.error(\"不支持的类型：\" + resourceType);\n                break;\n        }\n    }\n\n    onDrawerClose() {\n        this.setState({ detailDrawerVisible: false });\n    }\n\n    autoScaleHandler(resType, data) {\n        this.setState({\n            scaleModalVisible: true,\n            scaleResType: resType,\n            scaleResData: data,\n        });\n    }\n\n    restartDeployHandler(record) {\n        restartDeployments({\n            namespace: record.metadata.namespace,\n            resName: record.metadata.name,\n        }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"重启成功!\");\n                this.refreshNamespaceResources();\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    deleteHandler(resType, data) {\n        const that = this;\n        confirm({\n            title: \"操作警告?\",\n            content: \"确定删除该 kubernetes 资源吗？\",\n            icon: <Icon type=\"warning\" />,\n            onOk() {\n                deleteResource({\n                    namespace: data.metadata.namespace,\n                    resType: resType,\n                    resName: data.metadata.name,\n                })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            message.success(\"删除成功\");\n                            that.showLoading();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n            },\n            onCancel() {\n                console.log(\"Cancel\");\n            },\n        });\n    }\n\n    showYamlHandler(resType, data) {\n        this.setState({ yamlModalVisible: true, yamlType: resType });\n        getResourceYaml({\n            namespace: data.metadata.namespace,\n            resType: resType,\n            resName: data.metadata.name,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ yamlDetail: res.data });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    }\n\n    updateYamlContent() {\n        putApplyYaml({\n            namespace: this.state.currentNamespace,\n            resName: this.state.yamlType,\n            yamlContent: this.state.yamlDetail,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ yamlModalVisible: false });\n                    message.success(\"更新成功\");\n                    this.refreshNamespaceResources();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleYamlDetailCancel() {\n        this.setState({ yamlModalVisible: false });\n    }\n\n    handleScaleCancel() {\n        this.setState({ scaleModalVisible: false });\n    }\n\n    handleScaleCommit() {\n        putResourceScale({\n            namespace: this.state.scaleResData.metadata.namespace,\n            resType: this.state.scaleResType,\n            resName: this.state.scaleResData.metadata.name,\n            replicaCount: this.state.replicaCount,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ scaleModalVisible: false });\n                    message.success(\"提交成功\");\n                    this.showLoading();\n                    switch (this.state.scaleResType) {\n                        case \"rc\":\n                            this.getNamespaceReplicationControllers();\n                            break;\n                        default:\n                            break;\n                    }\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    onInputNumberChange(data) {\n        this.setState({ replicaCount: data });\n    }\n\n    render() {\n        let modelTitle = \"新建资源 - \" + this.state.currentNamespace;\n        let alertTitle = (\n            <div>\n                填入 YAML 文件内容，将指定资源部署到当前所选命名空间。\n                <Tooltip\n                    title={\n                        <div>\n                            更多配置信息请查看:{\" \"}\n                            <a\n                                href=\"https://kubernetes.io/docs/home/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                官方文档\n                            </a>\n                        </div>\n                    }\n                >\n                    <Icon type=\"question-circle\" />\n                </Tooltip>\n            </div>\n        );\n        let configList = [];\n        for (let key in this.state.dictConfigValue) {\n            configList.push(\n                <Panel header={key} key={key} style={customPanelStyle}>\n                    <CodeMirror value={this.state.dictConfigValue[key]} />\n                </Panel>,\n            );\n        }\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"Kubernetes\", \"集群管理\"]} />\n\n                <Row>\n                    <span\n                        style={{\n                            lineHeight: \"30px\",\n                            fontWeight: \"500\",\n                            marginRight: \"20px\",\n                        }}\n                    >\n                        命名空间:{\" \"}\n                    </span>\n                    <Select\n                        defaultValue=\"default\"\n                        style={{ width: \"200px\", marginRight: \"20px\" }}\n                        onChange={this.selectChange}\n                    >\n                        {this.state.namespaceList.map((item, index) => {\n                            let disabled = false;\n                            if (item[\"status\"][\"phase\"] !== \"Active\") {\n                                disabled = true;\n                            }\n                            return (\n                                <Option\n                                    key={index}\n                                    value={item.metadata.name}\n                                    disabled={disabled}\n                                >\n                                    {item.metadata.name}\n                                </Option>\n                            );\n                        })}\n                    </Select>\n                    <Button\n                        onClick={this.refreshNamespaceResources}\n                        style={{ marginRight: \"20px\" }}\n                    >\n                        刷 新\n                    </Button>\n                    <Button type=\"primary\" onClick={this.yarmCreateK8sResource} disabled={!this.props.aclAuthMap[\"POST:/kubernetes/yaml_resource\"]}>\n                        新 建\n                    </Button>\n                </Row>\n\n                <Modal\n                    title={modelTitle}\n                    destroyOnClose={true}\n                    visible={this.state.createModalVisible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={700}\n                    centered={true}\n                >\n                    <Alert\n                        message={alertTitle}\n                        banner\n                        style={{ marginBottom: \"10px\", marginTop: \"-20px\" }}\n                    />\n                    <Row style={{ marginBottom: \"10px\" }}>\n                        <Col span={4}>\n                            <span\n                                style={{\n                                    lineHeight: \"30px\",\n                                    fontWeight: \"500\",\n                                }}\n                            >\n                                选择资源模板:{\" \"}\n                            </span>\n                        </Col>\n                        <Col span={6} style={{ marginRight: \"20px\" }}>\n                            <Select\n                                defaultValue=\"\"\n                                style={{ width: \"100%\" }}\n                                onChange={this.selectTemplateChange}\n                            >\n                                <Option key=\"0\" value=\"\">\n                                    无\n                                </Option>\n                                <Option key=\"1\" value=\"deployment\">\n                                    Deployment\n                                </Option>\n                                <Option key=\"2\" value=\"rc\">\n                                    ReplicationController\n                                </Option>\n                                <Option key=\"3\" value=\"rs\">\n                                    ReplicaSet\n                                </Option>\n                                <Option key=\"4\" value=\"statefull_rs\">\n                                    StatefulSets\n                                </Option>\n                                <Option key=\"5\" value=\"service\">\n                                    Service\n                                </Option>\n                                <Option key=\"6\" value=\"ingress\">\n                                    Ingress\n                                </Option>\n                                <Option key=\"7\" value=\"daemonset\">\n                                    DaemonSet\n                                </Option>\n                                <Option key=\"8\" value=\"configmap\">\n                                    ConfigMap\n                                </Option>\n                                <Option key=\"9\" value=\"secret\">\n                                    Secret\n                                </Option>\n                            </Select>\n                        </Col>\n                    </Row>\n                    <CodeMirror\n                        value={this.state.yamlCode}\n                        options={{\n                            mode: \"xml\",\n                            theme: \"material\",\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                            this.setState({ yamlCode: value });\n                        }}\n                    />\n                </Modal>\n\n                <Modal\n                    title=\"YAML详情\"\n                    destroyOnClose={true}\n                    visible={this.state.yamlModalVisible}\n                    onCancel={this.handleYamlDetailCancel}\n                    width={700}\n                    centered={true}\n                    footer={[\n                        <Button type=\"primary\" onClick={this.updateYamlContent}>\n                            应用\n                        </Button>,\n                        <Button onClick={this.handleYamlDetailCancel}>\n                            取消\n                        </Button>,\n                    ]}\n                >\n                    <CodeMirror\n                        value={this.state.yamlDetail}\n                        options={{\n                            mode: \"xml\",\n                            theme: \"material\",\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                            this.setState({ yamlDetail: value });\n                        }}\n                        onChange={(editor, data, value) => {\n                            this.setState({\n                                yamlDetail: value,\n                            });\n                        }}\n                    />\n                </Modal>\n\n                <Modal\n                    title=\"自动伸缩\"\n                    destroyOnClose={true}\n                    visible={this.state.scaleModalVisible}\n                    onCancel={this.handleScaleCancel}\n                    width={400}\n                    centered={true}\n                    bodyStyle={{ textAlign: \"center\" }}\n                    footer={[\n                        <Button onClick={this.handleScaleCancel}>取消</Button>,\n                        <Button type=\"primary\" onClick={this.handleScaleCommit}>\n                            确定\n                        </Button>,\n                    ]}\n                >\n                    <InputNumber\n                        min={0}\n                        defaultValue={this.state.scaleResData.spec.replicas}\n                        onChange={this.onInputNumberChange}\n                        style={{ width: \"70%\" }}\n                    />\n                </Modal>\n\n                <Modal\n                    title=\"配置字典值\"\n                    destroyOnClose={true}\n                    visible={this.state.configModalVisible}\n                    onCancel={this.handleConfigCancel}\n                    width={600}\n                    footer={[]}\n                >\n                    <Collapse bordered={false}>{configList}</Collapse>\n                </Modal>\n\n                <Drawer\n                    placement=\"left\"\n                    closable={true}\n                    destroyOnClose={true}\n                    onClose={this.onDrawerClose}\n                    visible={this.state.detailDrawerVisible}\n                    width=\"70%\"\n                >\n                    <Switch>\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/node_detail\"\n                            component={NodeDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/rc_detail\"\n                            component={RcDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/rs_detail\"\n                            component={RsDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/deployment_detail\"\n                            component={DeploymentDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/service_detail\"\n                            component={ServiceDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/ingress_detail\"\n                            component={IngressDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/pod_detail\"\n                            component={PodDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/container_log\"\n                            component={ContainerLogContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/container_terminal\"\n                            component={WebTerminalContent}\n                        />\n                    </Switch>\n                </Drawer>\n\n                <Row style={{ marginTop: \"10px\" }}>\n                    <Card\n                        size=\"small\"\n                        title=\"资源总览\"\n                        style={{ width: \"100%\" }}\n                    >\n                        <Spin spinning={this.state.refreshDataLoading}>\n                            <Tabs\n                                defaultActiveKey=\"1\"\n                                tabPosition=\"left\"\n                                size=\"small\"\n                                style={{ width: \"100%\" }}\n                                tabBarStyle={{ textAlign: \"left\" }}\n                            >\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Node\n                                        </div>\n                                    }\n                                    key={1}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.nodeColumns}\n                                        dataSource={this.state.nodeList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            ReplicaSet\n                                        </div>\n                                    }\n                                    key={2}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.rsColumns}\n                                        dataSource={this.state.replicaSetList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Deployment\n                                        </div>\n                                    }\n                                    key={3}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.deploymentColumns}\n                                        dataSource={this.state.deploymentList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            RC\n                                        </div>\n                                    }\n                                    key={4}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.rcColumns}\n                                        dataSource={\n                                            this.state.replicationControllerList\n                                        }\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Service\n                                        </div>\n                                    }\n                                    key={5}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.serviceColumns}\n                                        dataSource={this.state.serviceList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Ingress\n                                        </div>\n                                    }\n                                    key={6}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.ingressColumns}\n                                        dataSource={this.state.ingressList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Pod\n                                        </div>\n                                    }\n                                    key={7}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.podColumns}\n                                        dataSource={this.state.podList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            ConfigMap\n                                        </div>\n                                    }\n                                    key={8}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.configDictColumns}\n                                        dataSource={this.state.configDictList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Secret\n                                        </div>\n                                    }\n                                    key={9}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.secretDictColumns}\n                                        dataSource={this.state.secretDictList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                            </Tabs>\n                        </Spin>\n                    </Card>\n                </Row>\n            </Content>\n        );\n    }\n}\n\nexport default withRouter(K8sNamespacesContent);\n","import React, { Component } from \"react\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    Row,\n    Layout,\n    Button,\n    Modal,\n    List,\n    Card,\n    Empty,\n    Form,\n    Input,\n    message,\n    Popconfirm,\n    Col,\n    Select,\n} from \"antd\";\nimport { withRouter } from 'react-router-dom';\nimport {\n    deleteCluster,\n    getClusterData,\n    postCluster,\n} from \"../../api/kubernetes\";\n\nconst { Content } = Layout;\nconst { Option } = Select;\n\nconst selectBefore = (\n    <Select defaultValue=\"http://\" className=\"select-before\">\n        <Option value=\"http://\">http://</Option>\n        <Option value=\"https://\">https://</Option>\n    </Select>\n);\n\nclass ClusterManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.addCluster = this.addCluster.bind(this);\n        this.handleClusterAddOk = this.handleClusterAddOk.bind(this);\n        this.handleClusterAddCancel = this.handleClusterAddCancel.bind(this);\n        this.loadClusterData = this.loadClusterData.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            addModelVisible: false,\n            clusterData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadClusterData();\n    }\n\n    enterToCluster(clusterId) {\n        let that = this;\n        message.loading(\"集群连接初始化中，即将跳转...\", 0.6);\n        localStorage.setItem(\"clusterId\", clusterId);\n        setTimeout(function() {\n            that.props.history.push({ pathname: \"/admin/k8s_cluster/manage\" });\n        }, 600);\n    }\n\n    loadClusterData() {\n        getClusterData()\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ clusterData: res.data.k8sData });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    addCluster() {\n        this.setState({ addModelVisible: true });\n    }\n\n    handleClusterAddOk() {\n        this.formRef.current.validateFields().then((values) => {\n            postCluster(values)\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"添加成功\");\n                        this.setState({ addModelVisible: false });\n                        this.loadClusterData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handleClusterAddCancel() {\n        this.setState({ addModelVisible: false });\n    }\n\n    confirmDeleteCluster(id) {\n        deleteCluster({ id: id })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"移除成功\");\n                    this.loadClusterData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"Kubernetes\", \"集群信息\"]} />\n                <Row>\n                    <Col span={3}>\n                        <Button\n                            type=\"primary\"\n                            onClick={this.addCluster}\n                            style={{ width: \"100%\" }}\n                            disabled={!this.props.aclAuthMap[\"POST:/kubernetes/cluster\"]}\n                        >\n                            新增集群\n                        </Button>\n                    </Col>\n                </Row>\n\n                <Row style={{ marginTop: \"10px\", width: \"100%\" }}>\n                    {this.state.clusterData.length === 0 ? (\n                        <Empty\n                            style={{ width: \"100%\" }}\n                            description=\"暂未添加任何kubernetes集群\"\n                        />\n                    ) : (\n                        <List\n                            grid={{\n                                gutter: 20,\n                                column: 4,\n                            }}\n                            style={{ width: \"100%\" }}\n                            dataSource={this.state.clusterData}\n                            renderItem={(item) => (\n                                <List.Item>\n                                    <Card title={item.name} size=\"small\">\n                                        <div\n                                            style={{\n                                                height: \"50px\",\n                                                fontSize: \"13px\",\n                                            }}\n                                        >\n                                            {item.description}\n                                        </div>\n                                        <div style={{ marginTop: \"10px\" }}>\n                                            <Button\n                                                type=\"link\"\n                                                size=\"small\"\n                                                style={{ float: \"left\" }}\n                                                onClick={this.enterToCluster.bind(\n                                                    this,\n                                                    item.clusterId,\n                                                )}\n                                            >\n                                                进入集群\n                                            </Button>\n                                            <Popconfirm\n                                                title=\"确定移除该集群吗?\"\n                                                okText=\"确认\"\n                                                cancelText=\"取消\"\n                                                onConfirm={this.confirmDeleteCluster.bind(\n                                                    this,\n                                                    item.id,\n                                                )}\n                                                disabled={!this.props.aclAuthMap[\"DELETE:/kubernetes/cluster\"]}\n                                            >\n                                                <Button\n                                                    type=\"link\"\n                                                    size=\"small\"\n                                                    style={{\n                                                        color: \"red\",\n                                                        float: \"right\",\n                                                    }}\n                                                    disabled={!this.props.aclAuthMap[\"DELETE:/kubernetes/cluster\"]}\n                                                >\n                                                    删除集群\n                                                </Button>\n                                            </Popconfirm>\n                                        </div>\n                                    </Card>\n                                </List.Item>\n                            )}\n                        />\n                    )}\n                </Row>\n\n                <Modal\n                    title=\"新增集群信息\"\n                    destroyOnClose={true}\n                    visible={this.state.addModelVisible}\n                    onOk={this.handleClusterAddOk}\n                    onCancel={this.handleClusterAddCancel}\n                >\n                    <Form ref={this.formRef}>\n                        <Form.Item\n                            label=\"集群名称\"\n                            {...formItemLayout}\n                            name=\"name\"\n                            rules={[\n                                { required: true, message: \"该项为必填项\" },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"集群描述\"\n                            {...formItemLayout}\n                            name=\"description\"\n                            rules={[\n                                { required: true, message: \"该项为必填项\" },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"ApiServer\"\n                            {...formItemLayout}\n                            name=\"apiServer\"\n                            rules={[\n                                { required: true, message: \"该项为必填项\" },\n                            ]}\n                        >\n                            <Input addonBefore={selectBefore} />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Admin Token\"\n                            {...formItemLayout}\n                            name=\"token\"\n                            rules={[\n                                { required: true, message: \"该项为必填项\" },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Content>\n        );\n    }\n}\n\nexport default withRouter(ClusterManageContent);\n","import React, {Component} from 'react';\nimport {Layout} from \"antd\";\nimport {Route, Switch} from \"react-router-dom\";\nimport K8sNamespacesContent from \"./namespaces\";\nimport ClusterManageContent from \"./k8s_cluster\";\n\nconst {Content} = Layout;\n\nclass KubernetesContent extends Component {\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 0, margin: 0, height: \"100%\",\n            }}>\n                <Switch>\n                    <Route path=\"/admin/k8s_cluster/info\">\n                        <ClusterManageContent {...this.props}/>\n                    </Route>\n                    <Route path=\"/admin/k8s_cluster/manage\">\n                        <K8sNamespacesContent {...this.props}/>\n                    </Route>\n                </Switch>\n            </Content>\n        )\n    }\n}\n\nexport default KubernetesContent;\n","import req from \"../utils/axios\";\n\nconst getDmsInstanceData = (params) => {\n    return req.get(\"dms/instances\", params);\n};\nexport { getDmsInstanceData };\n\nconst postDmsInstanceData = (params) => {\n    return req.post(\"dms/instance\", params);\n};\nexport { postDmsInstanceData };\n\nconst deleteDmsInstanceData = (params) => {\n    return req.delete(\"dms/instance\", params);\n};\nexport { deleteDmsInstanceData };\n\nconst getAllDmsInstanceData = (params) => {\n    return req.get(\"dms/instances/all\", params);\n};\nexport { getAllDmsInstanceData };\n\nconst deleteDmsInstanceDbData = (params) => {\n    return req.delete(\"dms/databaseData\", params);\n};\nexport { deleteDmsInstanceDbData };\n\nconst postDmsInstanceDbData = (params) => {\n    return req.post(\"dms/databaseData\", params);\n};\nexport { postDmsInstanceDbData };\n\nconst getDmsAuthData = (params) => {\n    return req.get(\"dms/authData\", params);\n};\nexport { getDmsAuthData };\n\nconst getDmsDatabaseData = (params) => {\n    return req.get(\"dms/databaseData\", params);\n};\nexport { getDmsDatabaseData };\n\nconst postDmsUserAuth = (params) => {\n    return req.post(\"dms/auth\", params);\n};\nexport { postDmsUserAuth };\n\nconst getUserDmsInstanceData = (params) => {\n    return req.get(\"dms/userInstanceData\", params);\n};\nexport { getUserDmsInstanceData };\n\nconst getUserDmsDatabaseData = (params) => {\n    return req.get(\"dms/userDatabaseData\", params);\n};\nexport { getUserDmsDatabaseData };\n\nconst getUserDmsLog = (params) => {\n    return req.get(\"dms/userLog\", params);\n};\nexport { getUserDmsLog };\n\nconst postDmsUserExecSQL = (params) => {\n    return req.post(\"dms/userExecSQL\", params);\n};\nexport { postDmsUserExecSQL };\n\nconst deleteDmsUserAuth = (params) => {\n    return req.delete(\"dms/auth\", params);\n};\nexport { deleteDmsUserAuth };\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Col,\n    Layout,\n    message,\n    Modal,\n    Row,\n    Table,\n    Typography,\n    Input,\n    Form,\n    Radio,\n    InputNumber,\n    Popconfirm,\n    Divider,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    postDmsInstanceData,\n    getDmsInstanceData,\n    deleteDmsInstanceData,\n    getDmsDatabaseData,\n    deleteDmsInstanceDbData,\n    postDmsInstanceDbData,\n} from \"../../api/dms_api\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\nconst { Content } = Layout;\n\nconst { Text } = Typography;\n\nclass InstanceManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"实例类型\",\n                    dataIndex: \"InstanceType\",\n                    key: \"InstanceType\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value, record) => {\n                        let operType = \"Mysql\";\n                        if (value === 2) {\n                            operType = \"Mysql\";\n                        }\n                        if (value === 3) {\n                            operType = \"Sqlserver\";\n                        }\n                        return <Text ellipsis={true}>{operType}</Text>;\n                    },\n                },\n                {\n                    title: \"实例名称\",\n                    dataIndex: \"InstanceAlias\",\n                    key: \"InstanceAlias\",\n                    align: \"center\",\n                    width: 200,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"实例地址\",\n                    dataIndex: \"Host\",\n                    key: \"Host\",\n                    align: \"center\",\n                    width: 150,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"实例端口\",\n                    dataIndex: \"Port\",\n                    key: \"Port\",\n                    align: \"center\",\n                    width: 150,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"数据库账号\",\n                    dataIndex: \"OperUser\",\n                    key: \"OperUser\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    width: 200,\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.editInstance.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    disabled={!this.props.aclAuthMap[\"PUT:/dms/instance\"]}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.deleteInstance.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                    disabled={!this.props.aclAuthMap[\"DELETE:/dms/instance\"]}\n                                >\n                                    <Button type=\"danger\" size=\"small\" disabled={!this.props.aclAuthMap[\"DELETE:/dms/instance\"]}>\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            expendColumns: [\n                {\n                    title: \"库名称\",\n                    dataIndex: \"SchemaName\",\n                    key: \"SchemaName\",\n                    width: 100,\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    width: 100,\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.deleteInstanceDb.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                    disabled={!this.props.aclAuthMap[\"DELETE:/dms/instance\"]}\n                                >\n                                    <Button type=\"danger\" size=\"small\" disabled={!this.props.aclAuthMap[\"DELETE:/dms/instance\"]}>\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            addInstanceModalVisible: false,\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            searchValue: \"\",\n            initialValues: {},\n            editInstanseId: \"\",\n            addInstanceDbModalVisible: false,\n            addInstanceId: \"\",\n            inputDbName: \"\",\n            expendTableData: {},\n        };\n    }\n\n    componentDidMount() {\n        this.loadInstanceData();\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.loadInstanceData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.loadInstanceData();\n            },\n        );\n    };\n\n    loadInstanceData() {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            pageSize: this.state.pagination.pageSize,\n            query: this.state.searchValue,\n        };\n        getDmsInstanceData(queryParams)\n            .then((res) => {\n                if (res.code === 0) {\n                    const pagination = this.state.pagination;\n                    pagination.total = parseInt(res.data.total);\n                    pagination.page = parseInt(res.data.page);\n                    pagination.showTotal(parseInt(res.data.total));\n                    this.setState({ pagination });\n                    let tableData = [];\n                    for (let i = 0; i < res.data.instanceData.length; i++) {\n                        tableData.push({\n                            key: res.data.instanceData[i].ID,\n                            ...res.data.instanceData[i],\n                        });\n                    }\n                    this.setState({\n                        tableData: tableData,\n                        tableLoading: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleQueryChange = (e) => {\n        this.setState({ searchValue: e.target.value });\n    };\n\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.loadInstanceData();\n            },\n        );\n    };\n\n    handleAddInstance() {\n        this.setState({\n            addInstanceModalVisible: true,\n            editInstanseId: \"\",\n            initialValues: {},\n        });\n    }\n\n    handleAddInstanceCancel = () => {\n        this.setState({\n            addInstanceModalVisible: false,\n            editInstanseId: \"\",\n            initialValues: {},\n        });\n    };\n\n    handleSubmitAddInstance = () => {\n        this.formRef.current.validateFields().then((values) => {\n            postDmsInstanceData({\n                ...values,\n                instanceId: this.state.editInstanseId,\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"添加成功!\");\n                        this.loadInstanceData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                    this.setState({\n                        addInstanceModalVisible: false,\n                    });\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n            this.setState({ editInstanseId: \"\", initialValues: {} });\n        });\n    };\n\n    addInstanceDb(instanceId) {\n        this.setState({\n            addInstanceId: instanceId,\n            addInstanceDbModalVisible: true,\n        });\n    }\n\n    dbNameChange(e) {\n        this.setState({ inputDbName: e.target.value });\n    }\n\n    handleSubmitAddInstanceDb() {\n        postDmsInstanceDbData({\n            instanceId: this.state.addInstanceId,\n            dbName: this.state.inputDbName,\n        }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"添加成功\");\n                this.onExpand(true, { InstanceId: this.state.addInstanceId });\n                this.setState({\n                    addInstanceDbModalVisible: false,\n                });\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    handleAddInstanceDbCancel() {\n        this.setState({\n            inputDbName: \"\",\n            addInstanceId: \"\",\n            addInstanceDbModalVisible: false,\n        });\n    }\n\n    editInstance(data) {\n        this.setState({\n            addInstanceModalVisible: true,\n            editInstanseId: data.InstanceId,\n            initialValues: {\n                instanceType: data.InstanceType,\n                instanceAlias: data.InstanceAlias,\n                port: data.Port,\n                host: data.Host,\n                operUser: data.OperUser,\n                operPwd: data.OperPwd,\n            },\n        });\n    }\n\n    deleteInstance(data) {\n        deleteDmsInstanceData({ instanceId: data.InstanceId }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"删除成功\");\n                this.loadInstanceData();\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    deleteInstanceDb(data) {\n        deleteDmsInstanceDbData({\n            instanceId: data.InstanceId,\n            databaseId: data.DatabaseId,\n        }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"删除成功\");\n                this.onExpand(true, data);\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    onExpand = (expanded, record) => {\n        if (expanded) {\n            getDmsDatabaseData({ instanceId: record.InstanceId }).then(\n                (res) => {\n                    if (res.code === 0) {\n                        let expendTableData = this.state.expendTableData;\n                        expendTableData[record.InstanceId] = res.data;\n                        this.setState({\n                            expendTableData: expendTableData,\n                        });\n                    } else {\n                        message.error(res.msg);\n                    }\n                },\n            );\n        }\n    };\n\n    expandedRowRender = (record, index, indent, expanded) => {\n        return (\n            <Table\n                style={{ width: 300 }}\n                columns={this.state.expendColumns}\n                dataSource={this.state.expendTableData[record.InstanceId]}\n                pagination={false}\n                size=\"small\"\n                footer={() => {\n                    return (\n                        <Button\n                            size=\"small\"\n                            onClick={this.addInstanceDb.bind(\n                                this,\n                                record.InstanceId,\n                            )}\n                        >\n                            添加\n                        </Button>\n                    );\n                }}\n            />\n        );\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 17 },\n        };\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"DMS\", \"实例管理\"]} />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={5} className=\"col-span\">\n                        <Input\n                            placeholder=\"请输入实例名称关键字\"\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleQueryChange}\n                        />\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAddInstance.bind(this)}\n                            disabled={!this.props.aclAuthMap[\"POST:/dms/instance\"]}\n                        >\n                            添加实例\n                        </Button>\n                    </Col>\n                </Row>\n\n                <Modal\n                    title=\"添加实例信息\"\n                    visible={this.state.addInstanceModalVisible}\n                    destroyOnClose={true}\n                    width={700}\n                    onOk={this.handleSubmitAddInstance}\n                    onCancel={this.handleAddInstanceCancel}\n                >\n                    <Form\n                        ref={this.formRef}\n                        initialValues={this.state.initialValues}\n                    >\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"类型：\"\n                            name=\"instanceType\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例类型!\",\n                                },\n                            ]}\n                        >\n                            <Radio.Group>\n                                <Radio value=\"2\">Mysql</Radio>\n                                <Radio value=\"3\">Sqlserver</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"实例名称：\"\n                            name=\"instanceAlias\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例名称!\",\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"实例地址：\"\n                            name=\"host\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例地址!\",\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"实例端口：\"\n                            name=\"port\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例端口!\",\n                                },\n                            ]}\n                        >\n                            <InputNumber min={1} />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"数据库账号：\"\n                            name=\"operUser\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例账号!\",\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"数据库密码：\"\n                            name=\"operPwd\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例密码!\",\n                                },\n                            ]}\n                        >\n                            <Input.Password\n                                iconRender={(visible) =>\n                                    visible ? (\n                                        <EyeTwoTone />\n                                    ) : (\n                                        <EyeInvisibleOutlined />\n                                    )\n                                }\n                            />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    title=\"添加库名\"\n                    visible={this.state.addInstanceDbModalVisible}\n                    destroyOnClose={true}\n                    width={300}\n                    onOk={this.handleSubmitAddInstanceDb.bind(this)}\n                    onCancel={this.handleAddInstanceDbCancel.bind(this)}\n                >\n                    <Input\n                        placeholder=\"输入库名\"\n                        onChange={this.dbNameChange.bind(this)}\n                    />\n                </Modal>\n\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                    expandable={{\n                        onExpand: this.onExpand,\n                        expandedRowRender: this.expandedRowRender,\n                    }}\n                />\n            </Content>\n        );\n    }\n}\n\nexport default InstanceManageContent;\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Col,\n    Layout,\n    message,\n    Modal,\n    Row,\n    Select,\n    Table,\n    Typography,\n    Tree,\n    Input,\n    Form,\n    Radio,\n    InputNumber,\n    DatePicker,\n    Popconfirm,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteDmsUserAuth,\n    getDmsAuthData,\n    getDmsDatabaseData,\n    getAllDmsInstanceData,\n    postDmsUserAuth,\n} from \"../../api/dms_api\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport { getUsersList } from \"../../api/user\";\nimport { OpsIcon } from \"../../assets/Icons\";\nconst { Content } = Layout;\n\nconst { Text } = Typography;\nconst { Option } = Select;\nconst { TreeNode } = Tree;\nconst { TextArea } = Input;\n\nclass AuthManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    width: 60,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"权限类型\",\n                    dataIndex: \"OperType\",\n                    key: \"OperType\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value, record) => {\n                        let operType = \"可见\";\n                        if (value === 2) {\n                            operType = \"查询\";\n                        }\n                        if (value === 3) {\n                            operType = \"修改\";\n                        }\n                        return <Text ellipsis={true}>{operType}</Text>;\n                    },\n                },\n                {\n                    title: \"实例名称\",\n                    dataIndex: \"InstanceName\",\n                    key: \"InstanceName\",\n                    align: \"center\",\n                    width: 200,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"库名称\",\n                    dataIndex: \"DatabaseName\",\n                    key: \"DatabaseName\",\n                    align: \"center\",\n                    width: 150,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"授权用户\",\n                    dataIndex: \"Username\",\n                    key: \"Username\",\n                    align: \"center\",\n                    width: 150,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"剩余次数\",\n                    dataIndex: \"OperCount\",\n                    key: \"OperCount\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"过期时间\",\n                    dataIndex: \"ValidTime\",\n                    key: \"ValidTime\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"白名单表\",\n                    dataIndex: \"AllowTables\",\n                    key: \"AllowTables\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    width: 100,\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                {/*<Button type=\"primary\" size=\"small\" >禁用</Button>*/}\n                                {/*<Divider type=\"vertical\" />*/}\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.deleteUserAuth.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                    disabled={!this.props.aclAuthMap[\"DELETE:/dms/auth\"]}\n                                >\n                                    <Button type=\"danger\" size=\"small\" disabled={!this.props.aclAuthMap[\"DELETE:/dms/auth\"]}>\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            addAuthModalVisible: false,\n            tableData: [],\n            usersData: [],\n            instanceOptions: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            expandedKeys: [],\n            searchValue: \"\",\n            autoExpandParent: true,\n            queryInstanceId: \"\",\n            queryEmpId: \"\",\n            queryOperType: \"\",\n            treeData: [],\n            selectedNodeId: \"\",\n            selectedNodeType: \"\",\n        };\n    }\n\n    componentDidMount() {\n        this.getUserAuthData();\n        this.loadAllUsersData();\n        this.loadAllInstanceData();\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.getUserAuthData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.getUserAuthData();\n            },\n        );\n    };\n\n    getUserAuthData() {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            instanceId: this.state.queryInstanceId.trim(),\n            operType: this.state.queryOperType.trim(),\n            empId: this.state.queryEmpId,\n        };\n        getDmsAuthData(queryParams)\n            .then((res) => {\n                if (res.code === 0) {\n                    const pagination = this.state.pagination;\n                    pagination.total = parseInt(res.data.total);\n                    pagination.page = parseInt(res.data.page);\n                    pagination.showTotal(parseInt(res.data.total));\n                    this.setState({ pagination });\n                    this.setState({\n                        tableData: res.data.authData,\n                        tableLoading: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadAllUsersData() {\n        getUsersList(1, 1000)\n            .then((res) => {\n                if (res.code === 0) {\n                    let data = res.data.users;\n                    let optionsList = [];\n                    for (let i = 0; i < data.length; i++) {\n                        optionsList.push(\n                            <Option key={data[i].empId} value={data[i].empId}>\n                                {data[i].username}\n                            </Option>,\n                        );\n                    }\n                    this.setState({\n                        usersData: optionsList,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadAllInstanceData() {\n        getAllDmsInstanceData()\n            .then((res) => {\n                if (res.code === 0) {\n                    let optionsList = [];\n                    let instanceTreeNode = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        optionsList.push(\n                            <Option\n                                key={res.data[i].InstanceId}\n                                value={res.data[i].InstanceId}\n                            >\n                                {res.data[i].InstanceAlias}\n                            </Option>,\n                        );\n                        instanceTreeNode.push({\n                            title: res.data[i].InstanceAlias,\n                            key: res.data[i].InstanceId,\n                            type: \"instance\",\n                            instance_type:\n                                res.data[i].InstanceType === \"2\"\n                                    ? \"mysql\"\n                                    : \"sqlserver\",\n                        });\n                    }\n                    this.setState({\n                        instanceOptions: optionsList,\n                        treeData: instanceTreeNode,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    }\n\n    handleInstanceChange = (queryInstanceId) => {\n        this.setState({ queryInstanceId });\n    };\n\n    handleEmpIdChange = (queryEmpId) => {\n        this.setState({ queryEmpId });\n    };\n\n    handleOperTypeChange = (queryOperType) => {\n        this.setState({ queryOperType });\n    };\n\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.getUserAuthData();\n            },\n        );\n    };\n\n    handleAddAuth() {\n        this.setState({ addAuthModalVisible: true });\n    }\n\n    handleUserAuthCancel = () => {\n        this.setState({ addAuthModalVisible: false });\n    };\n\n    handleSubmitUserAuth = () => {\n        this.formRef.current.validateFields().then((values) => {\n            if (\n                this.state.selectedNodeId === \"\" ||\n                this.state.selectedNodeType === \"\"\n            ) {\n                message.warn(\"请选择具体的数据表！\");\n                return;\n            }\n            let reqParams = {\n                ...values,\n                validTime: values[\"validTime\"].format(\"YYYY-MM-DD HH:mm:ss\"),\n                selectedNodeId: this.state.selectedNodeId,\n                selectedNodeType: this.state.selectedNodeType,\n            };\n            postDmsUserAuth(reqParams)\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"添加成功!\");\n                        this.getUserAuthData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                    this.setState({ addAuthModalVisible: false });\n                })\n        });\n    };\n\n    deleteUserAuth(data) {\n        deleteDmsUserAuth({ id: \"\" + data.ID }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"删除成功\");\n                this.getUserAuthData();\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    onLoadData = (treeNode) => {\n        return new Promise((resolve) => {\n            if (treeNode.props.children) {\n                resolve();\n                return;\n            }\n            if (treeNode.props.dataRef.type === \"instance\") {\n                getDmsDatabaseData({ instanceId: treeNode.props.dataRef.key })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            let instanceChildren = [];\n                            for (let i = 0; i < res.data.length; i++) {\n                                instanceChildren.push({\n                                    title: res.data[i].SchemaName,\n                                    key: res.data[i].DatabaseId,\n                                    type: \"database\",\n                                    instance_type: res.data[i].InstanceType,\n                                    isLeaf: true,\n                                });\n                            }\n                            treeNode.props.dataRef.children = instanceChildren;\n                            this.setState({\n                                treeData: [...this.state.treeData],\n                            });\n                            resolve();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n            }\n        });\n    };\n\n    renderTreeNodes = (data) =>\n        data.map((item) => {\n            let iconType = \"icondatabase\";\n            if (item.instance_type === \"mysql\") {\n                iconType = \"iconmysql\";\n            }\n            if (item.instance_type === \"sqlserver\") {\n                iconType = \"iconsqlserver\";\n            }\n            if (item.children) {\n                return (\n                    <TreeNode\n                        icon={\n                            <OpsIcon\n                                style={{ fontSize: \"20px\", color: \"#08c\" }}\n                                type={iconType}\n                            />\n                        }\n                        title={item.title}\n                        key={item.key}\n                        dataRef={item}\n                    >\n                        {this.renderTreeNodes(item.children)}\n                    </TreeNode>\n                );\n            }\n            return (\n                <TreeNode\n                    icon={\n                        <OpsIcon\n                            style={{ fontSize: \"20px\", color: \"#08c\" }}\n                            type={iconType}\n                        />\n                    }\n                    key={item.key}\n                    {...item}\n                    dataRef={item}\n                />\n            );\n        });\n\n    onTreeNodeSelect = (selectedKeys, e) => {\n        this.setState({\n            selectedNodeId: e.selectedNodes[0].dataRef.key,\n            selectedNodeType: e.selectedNodes[0].dataRef.type,\n        });\n    };\n\n    resetSelectedNodeValue = () => {\n        this.setState({\n            selectedNodeId: \"\",\n            selectedNodeType: \"\",\n        });\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 17 },\n        };\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"DMS\", \"权限管理\"]} />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={5} className=\"col-span\">\n                        <Select\n                            placeholder=\"请选择所属实例\"\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleInstanceChange}\n                        >\n                            <Option value=\"\">所有实例</Option>\n                            {this.state.instanceOptions}\n                        </Select>\n                    </Col>\n                    <Col span={4} className=\"col-span\">\n                        <Select\n                            placeholder=\"请选择权限类型\"\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleOperTypeChange}\n                        >\n                            <Option value={2}>查询</Option>\n                            <Option value={3}>修改</Option>\n                        </Select>\n                    </Col>\n                    <Col span={4} className=\"col-span\">\n                        <Select\n                            showSearch\n                            placeholder=\"请选择用户\"\n                            style={{ width: \"100%\" }}\n                            optionFilterProp=\"children\"\n                            filterOption={(input, option) =>\n                                option.props.children\n                                    .toLowerCase()\n                                    .indexOf(input.toLowerCase()) >= 0\n                            }\n                            onChange={this.handleEmpIdChange}\n                        >\n                            <Option value=\"\">所有用户</Option>\n                            {this.state.usersData}\n                        </Select>\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAddAuth.bind(this)}\n                            disabled={!this.props.aclAuthMap[\"POST:/dms/auth\"]}\n                        >\n                            添加权限\n                        </Button>\n                    </Col>\n                </Row>\n\n                <Modal\n                    title=\"用户权限设置\"\n                    visible={this.state.addAuthModalVisible}\n                    destroyOnClose={true}\n                    width={700}\n                    onOk={this.handleSubmitUserAuth}\n                    onCancel={this.handleUserAuthCancel}\n                    afterClose={this.resetSelectedNodeValue}\n                >\n                    <Row>\n                        <Col span={10}>\n                            <div\n                                style={{\n                                    minHeight: 450,\n                                    maxHeight: \"100%\",\n                                    overflowY: \"scroll\",\n                                }}\n                            >\n                                <Tree\n                                    showIcon={true}\n                                    loadData={this.onLoadData}\n                                    showLine={true}\n                                    style={{\n                                        maxHeight: \"450px\",\n                                        overflowY: \"scroll\",\n                                    }}\n                                    onSelect={this.onTreeNodeSelect}\n                                >\n                                    {this.renderTreeNodes(this.state.treeData)}\n                                </Tree>\n                            </div>\n                        </Col>\n                        <Col span={2}></Col>\n                        <Col span={12}>\n                            <Form\n                                ref={this.formRef}\n                                {...formItemLayout}\n                                initialValues={{ operType: 2, operCount: 5 }}\n                            >\n                                <Form.Item\n                                    label=\"指定用户：\"\n                                    name=\"empId\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请选择用户!\",\n                                        },\n                                    ]}\n                                >\n                                    <Select\n                                        showSearch\n                                        placeholder=\"请选择用户\"\n                                        style={{ width: \"100%\" }}\n                                        optionFilterProp=\"children\"\n                                        filterOption={(input, option) =>\n                                            option.props.children\n                                                .toLowerCase()\n                                                .indexOf(input.toLowerCase()) >=\n                                            0\n                                        }\n                                    >\n                                        {this.state.usersData}\n                                    </Select>\n                                </Form.Item>\n                                {/*<Form.Item*/}\n                                {/*    label=\"审批人：\"*/}\n                                {/*    name=\"approveEmpId\"*/}\n                                {/*    rules={[*/}\n                                {/*        {*/}\n                                {/*            required: true,*/}\n                                {/*            message: \"请选择审批人!\",*/}\n                                {/*        },*/}\n                                {/*    ]}*/}\n                                {/*>*/}\n                                {/*    <Select*/}\n                                {/*        showSearch*/}\n                                {/*        placeholder=\"请选择审批人\"*/}\n                                {/*        style={{ width: \"100%\" }}*/}\n                                {/*        optionFilterProp=\"children\"*/}\n                                {/*        filterOption={(input, option) =>*/}\n                                {/*            option.props.children*/}\n                                {/*                .toLowerCase()*/}\n                                {/*                .indexOf(input.toLowerCase()) >=*/}\n                                {/*            0*/}\n                                {/*        }*/}\n                                {/*    >*/}\n                                {/*        {this.state.usersData}*/}\n                                {/*    </Select>*/}\n                                {/*</Form.Item>*/}\n                                <Form.Item\n                                    label=\"权限类型：\"\n                                    name=\"operType\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请设置权限!\",\n                                        },\n                                    ]}\n                                >\n                                    <Radio.Group>\n                                        <Radio value={2}>查询</Radio>\n                                        <Radio value={3}>修改</Radio>\n                                    </Radio.Group>\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"申请原因：\"\n                                    name=\"authReason\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请输入申请原因!\",\n                                        },\n                                    ]}\n                                >\n                                    <TextArea\n                                        placeholder=\"请务必记录用户申请权限的原因\"\n                                        rows={3}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"操作次数：\"\n                                    name=\"operCount\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请输入操作次数!\",\n                                        },\n                                    ]}\n                                >\n                                    <InputNumber min={1} />\n                                    &nbsp;次\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"有效时间：\"\n                                    name=\"validTime\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请选择有效时间!\",\n                                        },\n                                    ]}\n                                >\n                                    <DatePicker showTime />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"白名单表：\"\n                                    name=\"allowTables\"\n                                    rules={[\n                                        {\n                                            required: false,\n                                        },\n                                    ]}\n                                >\n                                    <TextArea\n                                        placeholder=\"输入对用户开放的数据表，多表之间用英文分号分割\"\n                                        rows={2}\n                                    />\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Modal>\n\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default AuthManageContent;\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Layout,\n    message,\n    Row,\n    Tabs,\n    Tree,\n    Typography,\n    Table,\n    Tag,\n    Popover,\n    Icon,\n    Card,\n    Empty,\n    Col,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    getUserDmsDatabaseData,\n    getUserDmsInstanceData,\n    getUserDmsLog,\n    postDmsUserExecSQL,\n} from \"../../api/dms_api\";\nimport \"../../assets/css/dms.css\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/sql/sql\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/sql-hint\";\nimport { OpsIcon } from \"../../assets/Icons\";\n\nconst { Content } = Layout;\nconst { TreeNode } = Tree;\nconst { Text, Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nconst left_panel = {\n    float: \"left\",\n    width: \"20%\",\n    height: \"100%\",\n    padding: \"0px 0px 0px 0px\",\n    borderRight: \"solid 2px #acc3c0\",\n};\n\nconst right_panel = {\n    float: \"right\",\n    width: \"80%\",\n    height: \"100%\",\n    padding: \"0px 5px 0px 10px\",\n};\n\nclass DataManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.sqlInputRef = React.createRef();\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.loadUserHistoryLog = this.loadUserHistoryLog.bind(this);\n        this.state = {\n            treeData: [],\n            selectedNodeId: \"\",\n            selectedNodeType: \"\",\n            currentChoose: \"-\",\n            activeKey: \"1\",\n            sqlInput: \"\",\n            sqlDescription: \"\",\n            sqlExecuting: false,\n            execResultPanel: <Empty description={false} />,\n            tableLoading: false,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n            sqlResultLog: [],\n            sqlResultLogColumns: [\n                {\n                    title: \"ID\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    align: \"center\",\n                    width: \"50px\",\n                },\n                {\n                    title: \"库名\",\n                    dataIndex: \"DatabaseName\",\n                    key: \"DatabaseName\",\n                    align: \"center\",\n                    width: \"150px\",\n                },\n                {\n                    title: \"执行时间\",\n                    dataIndex: \"StartTime\",\n                    key: \"StartTime\",\n                    width: \"200px\",\n                    align: \"center\",\n                },\n                {\n                    title: \"SQL\",\n                    dataIndex: \"SqlContent\",\n                    key: \"SqlContent\",\n                    ellipsis: true,\n                    width: \"200px\",\n                    align: \"center\",\n                    render: (value) => {\n                        return (\n                            <Popover\n                                placement=\"topLeft\"\n                                content={\n                                    <Paragraph copyable>{value}</Paragraph>\n                                }\n                                title=\"当前SQL\"\n                            >\n                                {value}\n                            </Popover>\n                        );\n                    },\n                },\n                // {\n                //     title: '影响行数',\n                //     dataIndex: 'EffectRows',\n                //     key: 'EffectRows',\n                //     width: '100px',\n                //     align: 'center',\n                // },\n                {\n                    title: \"耗时\",\n                    dataIndex: \"Duration\",\n                    key: \"Duration\",\n                    width: \"100px\",\n                    align: \"center\",\n                    render: (value) => {\n                        return value + \" ms\";\n                    },\n                },\n                {\n                    title: \"执行状态\",\n                    dataIndex: \"ExecStatus\",\n                    key: \"ExecStatus\",\n                    width: \"100px\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    render: (value) => {\n                        let content = <Tag color=\"#f50\">失败</Tag>;\n                        if (value === 1) {\n                            content = <Tag color=\"#2db7f5\">成功</Tag>;\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"异常信息\",\n                    dataIndex: \"ExceptionOutput\",\n                    key: \"ExceptionOutput\",\n                    ellipsis: true,\n                    fixed: \"right\",\n                    align: \"center\",\n                    width: \"100px\",\n                    render: (value) => {\n                        if (value !== \"\") {\n                            return (\n                                <Popover\n                                    placement=\"topLeft\"\n                                    content={\n                                        <Paragraph copyable>{value}</Paragraph>\n                                    }\n                                    title=\"异常详情\"\n                                    trigger=\"click\"\n                                >\n                                    <Button type=\"link\" size=\"small\">\n                                        点击查看\n                                    </Button>\n                                </Popover>\n                            );\n                        }\n                        return \"无异常\";\n                    },\n                },\n            ],\n        };\n    }\n\n    componentDidMount() {\n        this.loadAllInstanceData();\n        this.loadUserHistoryLog();\n    }\n\n    loadAllInstanceData() {\n        getUserDmsInstanceData()\n            .then((res) => {\n                if (res.code === 0) {\n                    let instanceTreeNode = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        instanceTreeNode.push({\n                            title: res.data[i].InstanceName,\n                            key: res.data[i].InstanceId,\n                            type: \"instance\",\n                            instance_type:\n                                res.data[i].InstanceType === \"2\"\n                                    ? \"mysql\"\n                                    : \"sqlserver\",\n                        });\n                    }\n                    this.setState({\n                        treeData: instanceTreeNode,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadUserHistoryLog() {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            pageSize: this.state.pagination.pageSize,\n        };\n        getUserDmsLog(queryParams).then((res) => {\n            if (res.code === 0) {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination: { ...pagination },\n                });\n                this.setState({ sqlResultLog: res.data[\"log\"] });\n            } else {\n                message.error(res.msg);\n            }\n            this.setState({ tableLoading: false });\n        });\n    }\n\n    onShowSizeChange(current, size) {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                    pageSize: size,\n                },\n            },\n            () => {\n                this.loadUserHistoryLog();\n            },\n        );\n    }\n\n    changePage = (e) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: e,\n                    current: e,\n                },\n            },\n            () => {\n                this.loadUserHistoryLog();\n            },\n        );\n    };\n\n    sqlDescriptionChange(e) {\n        this.setState({ sqlDescription: e.target.value });\n    }\n\n    onLoadData = (treeNode) => {\n        return new Promise((resolve) => {\n            if (treeNode.props.children) {\n                resolve();\n                return;\n            }\n            if (treeNode.props.dataRef.type === \"instance\") {\n                getUserDmsDatabaseData({\n                    instanceId: treeNode.props.dataRef.key,\n                })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            let instanceChildren = [];\n                            for (let i = 0; i < res.data.length; i++) {\n                                instanceChildren.push({\n                                    title: res.data[i].DatabaseName,\n                                    key: res.data[i].DatabaseId,\n                                    type: \"database\",\n                                    instance_type: res.data[i].InstanceType,\n                                    isLeaf: true,\n                                });\n                            }\n                            treeNode.props.dataRef.children = instanceChildren;\n                            this.setState({\n                                treeData: [...this.state.treeData],\n                            });\n                            resolve();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n            }\n        });\n    };\n\n    renderSqlQueryResultTable(columns, data) {\n        if (columns === null || data === null) {\n            return (\n                <Text>未查询到数据，请查看『执行历史』检查是否存在异常</Text>\n            );\n        }\n        let titleColumns = [];\n        for (let i = 0; i < columns.length; i++) {\n            titleColumns.push({ title: columns[i], dataIndex: columns[i] });\n        }\n        return (\n            <Table\n                bordered\n                columns={titleColumns}\n                dataSource={data}\n                size=\"small\"\n                scroll={{ x: \"max-content\" }}\n                footer={(data) => {\n                    let count = data.length;\n                    return <span>数据行数: {count}</span>;\n                }}\n            />\n        );\n    }\n\n    renderSqlExecResultPanel(execStatus, exception, effectResult, duration) {\n        let color = \"green\";\n        let execResult = \"执行成功\";\n        let exceptionContent = \"\";\n        if (execStatus === 0) {\n            color = \"red\";\n            execResult = \"执行失败\";\n            exceptionContent = (\n                <span style={{ color: \"red\" }}>异常信息：{exception}</span>\n            );\n        }\n        return (\n            <Card>\n                <span>影响行数：{effectResult}</span> <br />\n                <span style={{ color: color }}>{execResult}</span> <br />\n                {exceptionContent} <br />\n                <span>执行时间：{duration} ms</span>\n            </Card>\n        );\n    }\n\n    renderTreeNodes = (data) =>\n        data.map((item) => {\n            let iconType = \"icondatabase\";\n            if (item.instance_type === \"mysql\") {\n                iconType = \"iconmysql\";\n            }\n            if (item.instance_type === \"sqlserver\") {\n                iconType = \"iconsqlserver\";\n            }\n            if (item.children) {\n                return (\n                    <TreeNode\n                        icon={\n                            <OpsIcon\n                                style={{ fontSize: \"20px\", color: \"#08c\" }}\n                                type={iconType}\n                            />\n                        }\n                        title={item.title}\n                        key={item.key}\n                        dataRef={item}\n                    >\n                        {this.renderTreeNodes(item.children)}\n                    </TreeNode>\n                );\n            }\n            return (\n                <TreeNode\n                    icon={\n                        <OpsIcon\n                            style={{ fontSize: \"20px\", color: \"#08c\" }}\n                            type={iconType}\n                        />\n                    }\n                    key={item.key}\n                    {...item}\n                    dataRef={item}\n                />\n            );\n        });\n\n    onTreeNodeSelect = (selectedKeys, e) => {\n        if (e.selectedNodes[0].dataRef.type === \"instance\") {\n            let title = \"实例 | \" + e.selectedNodes[0].dataRef.title;\n            this.setState({ currentChoose: title });\n        }\n        if (e.selectedNodes[0].dataRef.type === \"database\") {\n            let title = \"数据库 | \" + e.selectedNodes[0].dataRef.title;\n            this.setState({ currentChoose: title });\n        }\n        this.setState({\n            selectedNodeId: e.selectedNodes[0].dataRef.key,\n            selectedNodeType: e.selectedNodes[0].dataRef.type,\n        });\n    };\n\n    submitSql() {\n        if (this.state.selectedNodeType !== \"database\") {\n            message.warn(\"请选择具体的数据库！\");\n            return;\n        }\n        if (this.state.sqlInput.trim() === \"\") {\n            message.warn(\"请填写待执行的SQL语句！\");\n            return;\n        }\n        let reqParams = {\n            selectedNodeId: this.state.selectedNodeId,\n            selectedNodeType: this.state.selectedNodeType,\n            sqlInput: this.state.sqlInput,\n            sqlDescription: this.state.sqlDescription,\n        };\n        message.info(\"提交执行中...\");\n        this.setState({ sqlExecuting: true });\n        postDmsUserExecSQL(reqParams).then((res) => {\n            if (res.code === 0) {\n                if (res.data[\"execStatus\"] === 1) {\n                    message.success(\"执行成功\");\n                } else {\n                    message.error(\"执行失败\");\n                }\n                if (res.data[\"sqlType\"] === \"select\") {\n                    let content = this.renderSqlQueryResultTable(\n                        res.data[\"queryColumns\"],\n                        res.data[\"queryResult\"],\n                    );\n                    this.setState({ execResultPanel: content });\n                } else {\n                    let content = this.renderSqlExecResultPanel(\n                        res.data[\"execStatus\"],\n                        res.data[\"exceptionOutput\"],\n                        res.data[\"effectRows\"],\n                        res.data[\"duration\"],\n                    );\n                    this.setState({ execResultPanel: content });\n                }\n                this.setState({ sqlExecuting: false });\n            } else {\n                message.error(res.msg);\n                this.setState({ sqlExecuting: false });\n            }\n            this.loadUserHistoryLog();\n        });\n    }\n\n    tabsOnChange = (activeKey) => {\n        this.setState({ activeKey });\n    };\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"DMS\", \"数据管理\"]} />\n                <div style={{ height: \"95%\" }}>\n                    <div style={left_panel}>\n                        {this.state.treeData.length > 0 ? (\n                            <Tree\n                                showIcon={true}\n                                loadData={this.onLoadData}\n                                showLine={true}\n                                style={{\n                                    maxHeight: \"100%\",\n                                    overflow: \"scroll\",\n                                }}\n                                onSelect={this.onTreeNodeSelect}\n                            >\n                                {this.renderTreeNodes(this.state.treeData)}\n                            </Tree>\n                        ) : (\n                            <Empty description=\"暂无授权实例\" />\n                        )}\n                    </div>\n                    <div style={right_panel}>\n                        <Row style={{ marginBottom: 10 }}>\n                            <Text\n                                strong\n                                style={{ color: \"rgba(0, 102, 192, 0.86)\" }}\n                            >\n                                你当前选择：{this.state.currentChoose}\n                            </Text>\n                        </Row>\n                        <div>\n                            <Text strong>在此输入SQL: </Text>\n                        </div>\n                        <Row style={{ height: \"120px\" }}>\n                            <Col span={24}>\n                                <CodeMirror\n                                    className=\"sqlEditor\"\n                                    ref={this.sqlInputRef}\n                                    options={{\n                                        mode: \"text/x-mysql\",\n                                        showCursorWhenSelecting: true,\n                                        option: {\n                                            autofocus: true,\n                                        },\n                                        lineWrapping: true,\n                                    }}\n                                    value={this.state.sqlInput}\n                                    onBeforeChange={(editor, data, value) => {\n                                        this.setState({ sqlInput: value });\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row style={{ marginTop: 5 }}>\n                            <Button\n                                type=\"primary\"\n                                loading={this.state.sqlExecuting}\n                                onClick={this.submitSql.bind(this)}\n                                disabled={!this.props.aclAuthMap[\"POST:/dms/userExecSQL\"]}\n                            >\n                                提交执行\n                            </Button>\n                        </Row>\n                        <Row style={{ marginBottom: 10 }}>\n                            <Col span={24}>\n                                <Tabs\n                                    defaultActiveKey=\"1\"\n                                    activeKey={this.state.activeKey}\n                                    size=\"small\"\n                                    onChange={this.tabsOnChange}\n                                >\n                                    <TabPane tab=\"执行结果\" key=\"1\">\n                                        {this.state.execResultPanel}\n                                    </TabPane>\n                                    <TabPane\n                                        tab={\n                                            <span>\n                                                执行历史{\" \"}\n                                                <Icon\n                                                    type=\"reload\"\n                                                    onClick={\n                                                        this.loadUserHistoryLog\n                                                    }\n                                                    style={{ marginLeft: 10 }}\n                                                />\n                                            </span>\n                                        }\n                                        key=\"2\"\n                                    >\n                                        <Table\n                                            size=\"small\"\n                                            dataSource={this.state.sqlResultLog}\n                                            columns={\n                                                this.state.sqlResultLogColumns\n                                            }\n                                            scroll={{ x: \"max-content\" }}\n                                            pagination={this.state.pagination}\n                                            loading={this.state.tableLoading}\n                                            bordered\n                                        />\n                                    </TabPane>\n                                </Tabs>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Content>\n        );\n    }\n}\n\nexport default DataManageContent;\n","import req from \"../utils/axios\";\n\nconst getDnsDomainListData = (params) => {\n    return req.get(\"dns/domainList\", params);\n};\nexport { getDnsDomainListData };\n\nconst getDnsDomainHistoryListData = (params) => {\n    return req.get(\"dns/domainHistoryList\", params);\n};\nexport { getDnsDomainHistoryListData };\n\nconst getDnsDomainRecordListData = (params) => {\n    return req.get(\"dns/domainRecordsList\", params);\n};\nexport { getDnsDomainRecordListData };\n\nconst postDnsDomain = (params) => {\n    return req.post(\"dns/domain\", params);\n};\nexport { postDnsDomain };\n\nconst postDnsDomainRecord = (params) => {\n    return req.post(\"dns/domainRecord\", params);\n};\nexport { postDnsDomainRecord };\n\nconst postDnsDomainRecordUpdate = (params) => {\n    return req.post(\"dns/domainRecordUpdate\", params);\n};\nexport { postDnsDomainRecordUpdate };\n\nconst deleteDnsDomainRecord = (params) => {\n    return req.delete(\"dns/domainRecord\", params);\n};\nexport { deleteDnsDomainRecord };\n\nconst postDnsDomainRecordStatus = (params) => {\n    return req.post(\"dns/domainRecordStatus\", params);\n};\nexport { postDnsDomainRecordStatus };\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Col,\n    Divider,\n    Layout,\n    message,\n    Row,\n    Select,\n    Table,\n    Typography,\n    Form,\n    Drawer,\n    Modal,\n    Input,\n    Tag,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport { getCloudAccouts } from \"../../api/cloud\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport {\n    deleteDnsDomainRecord,\n    getDnsDomainHistoryListData,\n    getDnsDomainListData,\n    getDnsDomainRecordListData,\n    postDnsDomain,\n    postDnsDomainRecord,\n    postDnsDomainRecordStatus,\n    postDnsDomainRecordUpdate,\n} from \"../../api/dns_api\";\nconst { Content } = Layout;\n\nconst { Text } = Typography;\nconst { Option } = Select;\n\nclass DomainForm extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 17 },\n        };\n        return (\n            <Form ref={this.props.formRef} {...formItemLayout}>\n                <Form.Item\n                    label=\"域名\"\n                    name=\"domainName\"\n                    rules={[{ required: true, message: \"域名不能为空！\" }]}\n                >\n                    <Input />\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nclass DomainRecordForm extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 17 },\n        };\n        return (\n            <Form ref={this.props.formRef} {...formItemLayout}>\n                <Form.Item\n                    label=\"记录类型\"\n                    name=\"rType\"\n                    rules={[{ required: true, message: \"记录类型不能为空！\" }]}\n                >\n                    <Select style={{ width: \"100%\" }}>\n                        <Option value=\"A\">A-将域名指向一个IPV4地址</Option>\n                        <Option value=\"CNAME\">\n                            CNAME-将域名指向另一个域名\n                        </Option>\n                        <Option value=\"AAAA\">\n                            AAAA-将域名指向一个IPV6地址\n                        </Option>\n                        <Option value=\"NS\">\n                            NS-将子域名指向其它DNS服务器解析\n                        </Option>\n                        <Option value=\"MX\">MX-将域名指向邮件服务器地址</Option>\n                        <Option value=\"SRV\">\n                            SRV-记录提供特定的服务的服务器\n                        </Option>\n                        <Option value=\"TXT\">\n                            TXT-文本长度限制512,通常做SPF记录\n                        </Option>\n                        <Option value=\"CAA\">CAA-CA证书颁发机构授权校验</Option>\n                        <Option value=\"REDIRECT_URL\">\n                            显性URL-将域名重定向到另外一个地址\n                        </Option>\n                        <Option value=\"FORWARD_URL\">\n                            隐性URL-与显性URL类似，但是会隐藏真实目标地址\n                        </Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    label=\"主机记录\"\n                    name=\"rr\"\n                    rules={[{ required: true, message: \"主机记录不能为空！\" }]}\n                >\n                    <Input addonAfter={\".\" + this.props.domainName} />\n                </Form.Item>\n                <Form.Item\n                    label=\"记录值\"\n                    name=\"rValue\"\n                    rules={[{ required: true, message: \"记录值不能为空！\" }]}\n                >\n                    <Input />\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nclass DomainManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.queryDomainList = this.queryDomainList.bind(this);\n        this.handleCloudAccountChange = this.handleCloudAccountChange.bind(\n            this,\n        );\n        this.refreshTableData = this.refreshTableData.bind(this);\n        this.domainFormRef = React.createRef();\n        this.recordFormRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"域名\",\n                    dataIndex: \"DomainName\",\n                    key: \"DomainName\",\n                    className: \"small_font\",\n                    align: \"center\",\n                    render: (value) => {\n                        return (\n                            <Text\n                                copyable={true}\n                                ellipsis={true}\n                                style={{ width: \"100%\" }}\n                            >\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"记录数\",\n                    dataIndex: \"RecordCount\",\n                    key: \"RecordCount\",\n                    className: \"small_font\",\n                    align: \"center\",\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"DNS Server\",\n                    dataIndex: \"DnsServers\",\n                    key: \"DnsServers\",\n                    className: \"small_font\",\n                    align: \"center\",\n                    render: (value, record) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {record[\"DnsServers\"][\"DnsServer\"].join(\",\")}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    className: \"small_font\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.showDomainRecord.bind(\n                                        this,\n                                        record.DomainName,\n                                    )}\n                                    disabled={!this.props.aclAuthMap[\"GET:/dns/domainRecordsList\"]}\n                                >\n                                    解析设置\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.showDomainRecordHistory.bind(\n                                        this,\n                                        record.DomainName,\n                                    )}\n                                    disabled={!this.props.aclAuthMap[\"GET:/dns/domainHistoryList\"]}\n                                >\n                                    解析历史\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n            cloudAccountList: [],\n            queryCloudAccount: \"\",\n            recordVisible: false,\n            recordTableLoading: false,\n            recordColumns: [\n                {\n                    title: \"状态\",\n                    dataIndex: \"Status\",\n                    key: \"Status\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        let color = \"red\";\n                        let statusText = \"禁用\";\n                        if (value === \"ENABLE\") {\n                            color = \"green\";\n                            statusText = \"正常\";\n                        }\n                        return (\n                            <Text ellipsis={true} style={{ color: color }}>\n                                {statusText}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"域名\",\n                    dataIndex: \"DomainName\",\n                    key: \"DomainName\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"主机记录\",\n                    dataIndex: \"RR\",\n                    key: \"RR\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"记录类型\",\n                    dataIndex: \"Type\",\n                    key: \"Type\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"记录值\",\n                    dataIndex: \"Value\",\n                    key: \"Value\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"TTL\",\n                    dataIndex: \"TTL\",\n                    key: \"TTL\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    className: \"small_font\",\n                    render: (text, record) => {\n                        let setContent = (\n                            <Button\n                                type=\"link\"\n                                size=\"small\"\n                                onClick={this.setRecordStatus.bind(\n                                    this,\n                                    record,\n                                    \"on\",\n                                )}\n                                disabled={!this.props.aclAuthMap[\"POST:/dns/domainRecordStatus\"]}\n                            >\n                                启用\n                            </Button>\n                        );\n                        if (record.Status === \"ENABLE\") {\n                            setContent = (\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.setRecordStatus.bind(\n                                        this,\n                                        record,\n                                        \"off\",\n                                    )}\n                                    disabled={!this.props.aclAuthMap[\"POST:/dns/domainRecordStatus\"]}\n                                >\n                                    禁用\n                                </Button>\n                            );\n                        }\n                        return (\n                            <div>\n                                <Button\n                                    type=\"link\"\n                                    size=\"small\"\n                                    onClick={this.modifyRecord.bind(\n                                        this,\n                                        \"modify\",\n                                        record,\n                                    )}\n                                    disabled={!this.props.aclAuthMap[\"POST:/dns/domainRecordUpdate\"]}\n                                >\n                                    修改\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                {setContent}\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    onClick={this.deleteRecord.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    disabled={!this.props.aclAuthMap[\"DELETE:/dns/domainRecord\"]}\n                                >\n                                    删除\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            recordPagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: this.onShowRecordSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changeRecordPage(current),\n            },\n            domainName: \"\",\n            recordList: [],\n            addDomainModalVisible: false,\n            recordModalVisible: false,\n            recordAction: \"\",\n            recordModalTitle: \"\",\n            recordData: undefined,\n            queryDomain: \"\",\n            queryDomainRR: \"\",\n        };\n    }\n\n    componentDidMount() {\n        this.loadCloudAccountsData();\n    }\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({ cloudAccountList: res.data.accounts });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    }\n\n    onShowSizeChange(current, size) {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                    pageSize: size,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    changePage = (e) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: e,\n                    current: e,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onShowRecordSizeChange(current, size) {\n        this.setState(\n            {\n                recordPagination: {\n                    ...this.state.recordPagination,\n                    page: 1,\n                    current: 1,\n                    pageSize: size,\n                },\n            },\n            () => {\n                this.loadDomainRecordData();\n            },\n        );\n    }\n\n    changeRecordPage = (e) => {\n        this.setState(\n            {\n                recordPagination: {\n                    ...this.state.recordPagination,\n                    page: e,\n                    current: e,\n                },\n            },\n            () => {\n                this.loadDomainRecordData();\n            },\n        );\n    };\n\n    refreshTableData() {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            domainName: this.state.queryDomain,\n            pageNum: this.state.pagination.page,\n            pageSize: this.state.pagination.pageSize,\n            cloudAccountId: this.state.queryCloudAccount,\n        };\n        getDnsDomainListData(queryParams)\n            .then((res) => {\n                if(res.code===0) {\n                    let resp = JSON.parse(res.data);\n                    const pagination = this.state.pagination;\n                    pagination.total = parseInt(resp.TotalCount);\n                    pagination.page = parseInt(resp.PageNumber);\n                    pagination.showTotal(parseInt(resp.TotalCount));\n                    this.setState({ pagination });\n                    let tableData = resp[\"Domains\"][\"Domain\"];\n                    this.setState({ tableData: tableData});\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({ tableLoading: false });\n            })\n    }\n\n    handleCloudAccountChange(queryCloudAccount) {\n        let that = this;\n        this.setState(\n            { queryCloudAccount: queryCloudAccount, queryDomain: \"\" },\n            () => {\n                that.refreshTableData();\n            },\n        );\n    }\n\n    domainQueryOnChange(e) {\n        this.setState({ queryDomain: e.target.value });\n    }\n\n    domainRecordRROnChange(e) {\n        this.setState({ queryDomainRR: e.target.value });\n    }\n\n    queryDomainList() {\n        if (this.state.queryCloudAccount === \"\") {\n            message.warn(\"请先选择阿里云子账号!\");\n            return;\n        }\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    onRecordDrawerClose = () => {\n        this.setState({\n            queryDomainRR: \"\",\n            recordList: [],\n            recordVisible: false,\n        });\n    };\n\n    showDomainRecord(domainName) {\n        let that = this;\n        this.setState({ recordVisible: true, domainName: domainName }, () => {\n            that.loadDomainRecordData();\n        });\n    }\n\n    showDomainRecordHistory(domainName) {\n        getDnsDomainHistoryListData({\n            cloudAccountId: this.state.queryCloudAccount,\n            domainName: domainName,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    let resp = JSON.parse(res.data);\n                    let historyLogs = resp[\"RecordLogs\"][\"RecordLog\"];\n                    let historyContent = historyLogs.map((item) => {\n                        return (\n                            <div\n                                style={{\n                                    paddingBottom: 5,\n                                    marginBottom: 10,\n                                    borderBottom: \"1px solid grey\",\n                                }}\n                            >\n                                <span>\n                                    <Tag>{item.Action}</Tag>{\" \"}\n                                    <Tag>{item.ActionTime}</Tag>{\" \"}\n                                    <Tag>{item.ClientIp}</Tag>\n                                    <br />\n                                    <Text strong>{item.Message}</Text>\n                                </span>\n                            </div>\n                        );\n                    });\n                    if (historyLogs.length === 0) {\n                        historyContent = \"暂无解析历史\";\n                    }\n                    Modal.info({\n                        title: \"近10次解析记录\",\n                        width: 700,\n                        content: <div>{historyContent}</div>,\n                        onOk() {},\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadDomainRecordData = () => {\n        const queryParams = {\n            pageNum: this.state.recordPagination.page,\n            pageSize: this.state.recordPagination.pageSize,\n            cloudAccountId: this.state.queryCloudAccount,\n            domainName: this.state.domainName,\n            rr: this.state.queryDomainRR,\n        };\n        getDnsDomainRecordListData(queryParams)\n            .then((res) => {\n                if(res.code===0) {\n                    let resp = JSON.parse(res.data);\n                    const recordPagination = this.state.recordPagination;\n                    recordPagination.total = parseInt(resp.TotalCount);\n                    recordPagination.page = parseInt(resp.PageNumber);\n                    recordPagination.showTotal(parseInt(resp.TotalCount));\n                    let recordList = resp[\"DomainRecords\"][\"Record\"];\n                    this.setState({ recordPagination, recordList });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    };\n\n    showAddDomainModal = () => {\n        if (this.state.queryCloudAccount === \"\") {\n            message.warn(\"请先选择阿里云子账号!\");\n            return;\n        }\n        this.setState({ addDomainModalVisible: true });\n    };\n\n    handleAddDomainOk = (e) => {\n        e.preventDefault();\n        let that = this;\n        this.domainFormRef.current.validateFields().then((values) => {\n            postDnsDomain({\n                cloudAccountId: this.state.queryCloudAccount,\n                domainName: values.domainName,\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"添加成功\");\n                    } else {\n                        message.error(res.msg);\n                    }\n                    that.setState({ addDomainModalVisible: false });\n                    that.refreshTableData();\n                })\n        });\n    };\n\n    handleAddDomainCancel = () => {\n        this.setState({ addDomainModalVisible: false });\n    };\n\n    setRecordStatus(data, oper) {\n        let status = \"Disable\";\n        if (oper === \"on\") {\n            status = \"Enable\";\n        }\n        postDnsDomainRecordStatus({\n            cloudAccountId: this.state.queryCloudAccount,\n            recordId: data.RecordId,\n            status: status,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"设置成功\");\n                } else {\n                    message.error(res.msg);\n                }\n                this.loadDomainRecordData();\n            })\n    }\n\n    deleteRecord(data) {\n        deleteDnsDomainRecord({\n            cloudAccountId: this.state.queryCloudAccount,\n            recordId: data.RecordId,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                } else {\n                    message.error(res.msg);\n                }\n                this.loadDomainRecordData();\n            })\n    }\n\n    modifyRecord(action, data) {\n        let recordModalTitle = \"\";\n        let modifyRecordId = \"\";\n        if (action === \"add\") {\n            recordModalTitle = \"新增解析记录\";\n        }\n        if (action === \"modify\") {\n            recordModalTitle = \"修改解析记录\";\n            modifyRecordId = data.RecordId;\n            let that = this;\n            this.setState({ recordModalVisible: true }, () => {\n                setTimeout(function() {\n                    that.recordFormRef.current.setFieldsValue({\n                        rr: data.RR,\n                        rType: data.Type,\n                        rValue: data.Value,\n                    });\n                }, 300);\n            });\n        }\n        this.setState({\n            recordAction: action,\n            recordModalTitle: recordModalTitle,\n            recordModalVisible: true,\n            modifyRecordId: modifyRecordId,\n        });\n    }\n\n    handleRecordOk = (e) => {\n        e.preventDefault();\n        let that = this;\n        this.recordFormRef.current.validateFields().then((values) => {\n            let reqParams = {\n                cloudAccountId: this.state.queryCloudAccount,\n                domainName: this.state.domainName,\n                rr: values.rr,\n                rType: values.rType,\n                rValue: values.rValue,\n                recordId: this.state.modifyRecordId,\n            };\n            if (this.state.recordAction === \"add\") {\n                // 新增解析记录\n                postDnsDomainRecord(reqParams)\n                    .then((res) => {\n                        if (res.code === 0) {\n                            message.success(\"添加成功\");\n                        } else {\n                            message.error(res.msg);\n                        }\n                        that.setState({ recordModalVisible: false });\n                        that.loadDomainRecordData();\n                    })\n            }\n            if (this.state.recordAction === \"modify\") {\n                // 修改解析记录\n                postDnsDomainRecordUpdate(reqParams)\n                    .then((res) => {\n                        if (res.code === 0) {\n                            message.success(\"修改成功\");\n                        } else {\n                            message.error(res.msg);\n                        }\n                        that.setState({ recordModalVisible: false });\n                        that.loadDomainRecordData();\n                    })\n            }\n        });\n    };\n\n    handleRecordCancel = () => {\n        this.setState({ recordModalVisible: false });\n    };\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            if (item.accountType === \"阿里云\") {\n                return (\n                    <Option key={item.id} value={item.id}>\n                        {item.accountName}\n                    </Option>\n                );\n            } else {\n                return null;\n            }\n        });\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"DNS\", \"域名解析管理\"]} />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={4} className=\"col-span\">\n                        选择所属阿里云账号:\n                    </Col>\n                    <Col span={5} className=\"col-span\">\n                        <Select\n                            defaultValue={this.state.queryCloudAccount}\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleCloudAccountChange}\n                        >\n                            {accountOptions}\n                        </Select>\n                    </Col>\n                    <Col span={4} className=\"col-span\">\n                        <Input\n                            placeholder=\"输入域名查询\"\n                            value={this.state.queryDomain}\n                            onChange={this.domainQueryOnChange.bind(this)}\n                        />\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.queryDomainList}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.showAddDomainModal}\n                            disabled={!this.props.aclAuthMap[\"POST:/dns/domain\"]}\n                        >\n                            添加域名\n                        </Button>\n                    </Col>\n                </Row>\n\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n\n                <Drawer\n                    title=\"解析设置\"\n                    placement=\"left\"\n                    closable={false}\n                    onClose={this.onRecordDrawerClose}\n                    visible={this.state.recordVisible}\n                    width={800}\n                >\n                    <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                        <Col span={5} className=\"col-span\">\n                            <Input\n                                placeholder=\"输入主机记录关键字\"\n                                value={this.state.queryDomainRR}\n                                onChange={this.domainRecordRROnChange.bind(\n                                    this,\n                                )}\n                            />\n                        </Col>\n                        <Col span={3} className=\"col-span\">\n                            <Button\n                                style={{ width: \"100%\" }}\n                                type=\"primary\"\n                                icon={<SearchOutlined />}\n                                onClick={this.loadDomainRecordData}\n                            >\n                                查 询\n                            </Button>\n                        </Col>\n                        <Col span={4} className=\"col-span\">\n                            <Button\n                                type=\"primary\"\n                                style={{ width: \"100%\" }}\n                                icon={<PlusCircleOutlined />}\n                                onClick={this.modifyRecord.bind(\n                                    this,\n                                    \"add\",\n                                    undefined,\n                                )}\n                                disabled={!this.props.aclAuthMap[\"POST:/dns/domainRecord\"]}\n                            >\n                                添加记录\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Table\n                        columns={this.state.recordColumns}\n                        dataSource={this.state.recordList}\n                        scroll={{ x: \"max-content\" }}\n                        pagination={this.state.recordPagination}\n                        loading={this.state.recordTableLoading}\n                        bordered\n                        size=\"small\"\n                    />\n                    <Modal\n                        title={this.state.recordModalTitle}\n                        visible={this.state.recordModalVisible}\n                        onOk={this.handleRecordOk}\n                        onCancel={this.handleRecordCancel}\n                        destroyOnClose={true}\n                    >\n                        <DomainRecordForm\n                            domainName={this.state.domainName}\n                            formRef={this.recordFormRef}\n                        />\n                    </Modal>\n                </Drawer>\n\n                <Modal\n                    title=\"添加域名\"\n                    visible={this.state.addDomainModalVisible}\n                    onOk={this.handleAddDomainOk}\n                    onCancel={this.handleAddDomainCancel}\n                    destroyOnClose={true}\n                >\n                    <DomainForm formRef={this.domainFormRef} />\n                </Modal>\n            </Content>\n        );\n    }\n}\n\nexport default DomainManageContent;\n","import React, { Component } from \"react\";\nimport { Layout, message } from \"antd\";\nimport { Route, Switch } from \"react-router-dom\";\nimport WelcomeContent from \"./WelcomeContent\";\nimport ServerContent from \"../components/cloud_resource/server_content\";\nimport RdsContent from \"../components/cloud_resource/rds_content\";\nimport KvContent from \"../components/cloud_resource/kv_content\";\nimport SlbContent from \"../components/cloud_resource/slb_content\";\nimport CloudContent from \"../components/cloud_resource/account_content\";\nimport TaskContent from \"../components/task/task_content\";\nimport UserManager from \"../components/permissions/user_manager\";\nimport RolesManager from \"../components/permissions/role_manager\";\nimport PermissionsManager from \"../components/permissions/permission_manager\";\nimport PasswordManager from \"../components/permissions/password_manager\";\nimport { getUserTokenRefresh } from \"../api/user\";\nimport jwt_decode from \"jwt-decode\";\nimport SyncAliyunContent from \"../components/data/sync_aliyun\";\nimport OtherContent from \"../components/cloud_resource/other_content\";\nimport SettingsContent from \"../components/system/settings_content\";\nimport LogoutContent from \"../components/logout\";\nimport UserFeedbackManager from \"../components/system/feedback_manager\";\nimport CiCdContent from \"../components/ci_cd/cicd\";\nimport KubernetesContent from \"../components/kubernetes/kubernetes\";\nimport InstanceManageContent from \"../components/dms/instance_manage\";\nimport AuthManageContent from \"../components/dms/auth_manage\";\nimport DataManageContent from \"../components/dms/data_manage\";\nimport DomainManageContent from \"../components/dns/domain_manage\";\nimport {getUserPermissionsList} from \"../api/permission\";\n\nconst { Content } = Layout;\n\nclass ContentLayout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSuperAdmin: false,\n            actionPermissionMap: {},\n        };\n    }\n\n    componentWillMount() {\n        this.loadUserActionPermissions();\n        this.loadUserTokenRefresh();\n    }\n\n    loadUserTokenRefresh() {\n        getUserTokenRefresh()\n            .then((res) => {\n                if (res.code === 0) {\n                    localStorage.setItem(\"ops_token\", res.data.token);\n                    let info = jwt_decode(res.data.token);\n                    this.setState({\n                        isSuperAdmin: info[\"userInfo\"][\"isSuperAdmin\"],\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n    }\n\n    loadUserActionPermissions() {\n        getUserPermissionsList({authType: \"操作\"})\n            .then((res) => {\n                if (res.code === 0) {\n                    const dataList = res.data;\n                    let authMap = {};\n                    dataList.map((item) => {\n                        if(item.authType===\"操作\") {\n                            authMap[item.urlPath] = true;\n                        }\n                    });\n                    this.setState({actionPermissionMap: authMap})\n                } else {\n                    message.error(\"获取用户菜单权限异常\");\n                }\n            })\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    height: \"100%\",\n                    minWidth: \"900px\",\n                    overflow: \"scroll\",\n                }}\n            >\n                <Switch>\n                    <Route exact path=\"/admin\" component={WelcomeContent} />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_server\"\n                        render={() => (\n                            <ServerContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_rds\"\n                        render={() => (\n                            <RdsContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_kv\"\n                        render={() => (\n                            <KvContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_slb\"\n                        render={() => (\n                            <SlbContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_account\"\n                        render={() => (\n                            <CloudContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_other\"\n                        render={() => (\n                            <OtherContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/task\"\n                        render={() => (\n                            <TaskContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n\n                    <Route\n                        path=\"/admin/dns/domain_manage\"\n                        render={() => (\n                            <DomainManageContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n\n                    <Route\n                        path=\"/admin/dms/instance_manage\"\n                        render={() => (\n                            <InstanceManageContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/dms/auth_manage\"\n                        render={() => (\n                            <AuthManageContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/dms/data_manage\"\n                        render={() => (\n                            <DataManageContent\n                                aclAuthMap={this.state.actionPermissionMap}\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route path=\"/admin/cicd\" render={() => <CiCdContent aclAuthMap={this.state.actionPermissionMap}/>} />\n                    <Route\n                        path=\"/admin/k8s_cluster\"\n                        render={() => <KubernetesContent aclAuthMap={this.state.actionPermissionMap}/>}\n                    />\n                    <Route\n                        path=\"/admin/data/syncAliyun\"\n                        component={SyncAliyunContent}\n                    />\n                    <Route\n                        path=\"/admin/permission/users\"\n                        component={UserManager}\n                    />\n                    <Route\n                        path=\"/admin/permission/roles\"\n                        component={RolesManager}\n                    />\n                    <Route\n                        path=\"/admin/permission/permissions\"\n                        component={PermissionsManager}\n                    />\n                    <Route\n                        path=\"/admin/permission/password\"\n                        component={PasswordManager}\n                    />\n                    <Route\n                        path=\"/admin/system/setting\"\n                        component={SettingsContent}\n                    />\n                    <Route\n                        path=\"/admin/system/user_feedback\"\n                        component={UserFeedbackManager}\n                    />\n                    <Route path=\"/admin/logout\" component={LogoutContent} />\n                </Switch>\n\n            </Content>\n        );\n    }\n}\n\nexport default ContentLayout;\n","import React, { Component } from 'react';\nimport {Layout} from 'antd';\nimport { BrowserRouter as Router, Route, withRouter } from 'react-router-dom';\nimport OpsHeader from '../components/header';\nimport OpsSider from '../components/sidebar';\nimport OpsFooter from '../components/footer';\nimport ContentLayout from \"./ContentLayout\";\n\nclass AdminContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSiderMenu = this.handleSiderMenu.bind(this);\n        this.state = {\n            collapsed: false,\n        };\n    }\n\n    handleSiderMenu() {\n        this.setState({collapsed: !this.state.collapsed});\n    };\n\n    onExit = () => {\n        this.setState(() => ({ stepsEnabled: false }));\n    };\n\n    render() {\n        return (\n            <Router>\n                <Layout style={{ minHeight: '100vh' }}>\n                    <OpsSider menuCollapsed={this.state.collapsed} />\n                    <Layout>\n                        <OpsHeader menuCollapsed={this.state.collapsed} handleSiderMenu={this.handleSiderMenu}/>\n                        <Route path=\"/admin\" component={ContentLayout}/>\n                        <OpsFooter/>\n                    </Layout>\n                </Layout>\n            </Router>\n        );\n    }\n}\n\n\nexport default withRouter(AdminContent);\n\n","import React, { Component } from \"react\";\nimport {\n    Form,\n    Icon,\n    Input,\n    Button,\n    Row,\n    Col,\n    message,\n    Popover,\n    Typography,\n} from \"antd\";\nimport \"../assets/css/login.css\";\nimport { postUserLogin } from \"../api/user\";\n\nconst { Text } = Typography;\n\nclass LoginContent extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            currentYear: new Date().getFullYear(),\n        };\n    }\n\n    componentDidMount() {\n        let code = new URLSearchParams(this.props.location.search).get(\"code\");\n        if (code !== undefined && code !== null) {\n            code = parseInt(code);\n            if (code === 401) {\n                message.error(\"token过期，请重新登录!\", 4);\n            }\n            if (code === 403) {\n                message.error(\"用户不存在或被禁用，请联系管理员!\", 4);\n            }\n        }\n    }\n\n    handleEnterKey = (e) => {\n        if (e.nativeEvent.keyCode === 13) {\n            this.formRef.current.validateFields().then((values) => {\n                this.handleSubmit(values);\n            });\n        }\n    };\n\n    handleSubmit(values) {\n        postUserLogin(values)\n            .then((res) => {\n                if (res.code === 0) {\n                    localStorage.setItem(\"ops_token\", res.data.token);\n                    message.success(\"欢迎使用运维平台！\");\n                    this.props.history.push(\"/admin\");\n                } else {\n                    this.formRef.current.setFieldsValue({\n                        password: \"\",\n                    });\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    onFinishFailed(errorInfo) {\n        console.log(\"Failed:\", errorInfo);\n    }\n\n    render() {\n        let loginPanel = (\n            <div>\n                <Form\n                    ref={this.formRef}\n                    onFinish={this.handleSubmit}\n                    onFinishFailed={this.onFinishFailed}\n                    className=\"login-form\"\n                >\n                    <Form.Item\n                        name=\"username\"\n                        rules={[\n                            { required: true, message: \"请输入您的注册邮箱!\" },\n                        ]}\n                    >\n                        <Input\n                            size=\"large\"\n                            prefix={\n                                <Icon\n                                    type=\"user\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                />\n                            }\n                            placeholder=\"用户账号\"\n                            onKeyPress={this.handleEnterKey}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: \"请输入您的密码!\" }]}\n                    >\n                        <Input\n                            size=\"large\"\n                            prefix={\n                                <Icon\n                                    type=\"lock\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                />\n                            }\n                            type=\"password\"\n                            placeholder=\"用户密码\"\n                            onKeyPress={this.handleEnterKey}\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button\n                            type=\"primary\"\n                            block\n                            className=\"login-form-button\"\n                            size=\"large\"\n                            htmlType=\"submit\"\n                        >\n                            登 录\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n        return (\n            <div>\n                <Row style={{ height: \"15vh\", paddingTop: \"5vh\" }}>\n                    <Col span={9} />\n                    <Col span={6} style={{ padding: \"0px 30px\" }}>\n                        <span className=\"login-logo\" />\n                        <span className=\"login-logo-text\">运维平台</span>\n                    </Col>\n                    <Col span={9} />\n                </Row>\n                <Row style={{ height: \"40vh\" }}>\n                    <Col span={9} />\n                    {/* <Col\n                        span={10}\n                        style={{ textAlign: \"center\" }}\n                        className=\"login-ad\"\n                    ></Col> */}\n                    <Col span={6} style={{ paddingTop: 40 }}>\n                        {loginPanel}\n                    </Col>\n                    <Col span={9} />\n                </Row>\n                <Row style={{ height: \"30vh\" }} />\n                <Row\n                    style={{\n                        height: \"15vh\",\n                        textAlign: \"center\",\n                        paddingTop: 50,\n                        display: \"block\",\n                    }}\n                >\n                    ©2019-{this.state.currentYear} Created by &nbsp;\n                    <Popover content={<div className=\"wechat\" />}>\n                        <Text underline>KevinYang</Text>\n                    </Popover>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default LoginContent;\n","import React, {Component} from 'react';\nimport { Result, Button } from 'antd';\n\n\nclass Exception500 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.backToLogin = this.backToLogin.bind(this);\n        this.state = {}\n    }\n\n    backToLogin() {\n        this.props.history.push('/admin');\n    }\n\n    render() {\n        return (\n            <Result\n                status=\"500\"\n                title=\"异常提醒\"\n                subTitle=\"服务异常，请联系运维中心处理\"\n                style={{height: \"100vh\"}}\n                extra={\n                    <Button type=\"primary\" onClick={this.backToLogin}>\n                        返回主页\n                    </Button>\n                }\n            />\n        )\n    }\n}\n\nclass Exception403 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.backToLogin = this.backToLogin.bind(this);\n        this.state = {}\n    }\n\n    backToLogin() {\n        this.props.history.push('/admin');\n    }\n\n    render() {\n        return (\n            <Result\n                status=\"403\"\n                title=\"403\"\n                subTitle=\"您没有访问权限\"\n                style={{height: \"100vh\"}}\n                extra={\n                    <Button type=\"primary\" onClick={this.backToLogin}>\n                        返回主页\n                    </Button>\n                }\n            />\n        )\n    }\n}\n\nclass Exception404 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.backToLogin = this.backToLogin.bind(this);\n        this.state = {}\n    }\n\n    backToLogin() {\n        this.props.history.push('/admin');\n    }\n\n    render() {\n        return (\n            <Result\n                status=\"404\"\n                title=\"404\"\n                subTitle=\"访问的页面不存在\"\n                style={{height: \"100vh\"}}\n                extra={\n                    <Button type=\"primary\" onClick={this.backToLogin}>\n                        返回主页\n                    </Button>\n                }\n            />\n        )\n    }\n}\n\nexport { Exception403, Exception404, Exception500 };","import React,{Component} from 'react'; \nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport AdminContent from './layouts/AdminLayout';\nimport LoginContent from './layouts/LoginLayout';\nimport {Exception404, Exception500} from \"./layouts/ExceptionContent\";\n\nexport default class RouterWrap extends Component{ \n    \n    render(){ \n        return ( \n            <div id=\"router\" style={{backgroundColor:\"#f0f2f5\"}}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path=\"/\" component={LoginContent} exact />\n                        <Route path=\"/admin\" component={AdminContent} />\n                        <Route path=\"/login\" component={LoginContent} />\n                        <Route component={Exception404} />\n                        <Route path=\"/exception500\" component={Exception500} />\n                    </Switch>\n                </BrowserRouter>\n            </div> \n        )\n    } \n\n}\n","import React, { Component } from 'react';\nimport '../assets/css/main.css';\nimport RouterWrap from '../router';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n            <RouterWrap/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './layouts/main';\nimport * as serviceWorker from './serviceWorker';\nimport zhCN from 'antd/es/locale-provider/zh_CN';\nimport {ConfigProvider} from \"antd\";\n\n\nReactDOM.render(\n    <ConfigProvider locale={zhCN}>\n        <App/>\n    </ConfigProvider>\n    ,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}